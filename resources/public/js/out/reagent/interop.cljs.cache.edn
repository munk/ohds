;; Analyzed by ClojureScript 0.0-3058
{:macros {.' {:arglists ([object member & args]), :doc "Access member in a javascript object, in a Closure-safe way.\n  'member' is assumed to be a field if it is a keyword or if\n  the name starts with '-', otherwise the named function is\n  called with the optional args.\n  'member' may contain '.', to allow access in nested objects.\n  If 'object' is a symbol it is not allowed contain '.'.", :line 26, :column 1, :file "reagent/interop.clj", :name reagent.interop/.', :ns reagent.interop, :macro true}, .! {:arglists ([object field value]), :doc "Set field in a javascript object, in a Closure-safe way.\n  'field' should be a keyword or a symbol starting with '-'.\n  'field' may contain '.', to allow access in nested objects.\n  If 'object' is a symbol it is not allowed contain '.'.", :line 42, :column 1, :file "reagent/interop.clj", :name reagent.interop/.!, :ns reagent.interop, :macro true}}, :name reagent.interop, :doc nil, :excludes #{}, :use-macros nil, :require-macros {reagent.interop reagent.interop}, :uses nil, :requires nil, :imports nil}