;; Analyzed by ClojureScript 0.0-3058
{:use-macros {log reagent.debug, dbg reagent.debug, warn reagent.debug, dev? reagent.debug}, :excludes #{atom}, :macros {reaction {:arglists ([& body]), :line 4, :column 1, :file "reagent/ratom.clj", :name reagent.ratom/reaction, :ns reagent.ratom, :macro true}, run! {:arglists ([& body]), :doc "Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.", :line 8, :column 1, :file "reagent/ratom.clj", :name reagent.ratom/run!, :ns reagent.ratom, :macro true}}, :name reagent.ratom, :imports nil, :requires {util reagent.impl.util, reagent.impl.util reagent.impl.util, reagent.debug reagent.debug}, :uses nil, :defs {->RCursor {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 104, :column 10, :end-line 104, :end-column 17, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([ratom path reaction]))}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :name reagent.ratom/->RCursor, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 17, :method-params ([ratom path reaction]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:max-fixed-arity 3, :variadic false, :tag reagent.ratom/RCursor}), :line 104, :end-line 104, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ratom path reaction])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}, notify-deref-watcher! {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 25, :column 8, :end-line 25, :end-column 29, :private true, :arglists (quote ([derefable]))}, :private true, :name reagent.ratom/notify-deref-watcher!, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 29, :method-params ([derefable]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{nil clj-nil}}), :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([derefable])), :test true}, IComputedImpl {:meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 195, :column 14, :end-line 195, :end-column 27, :protocol-symbol true, :protocol-info {:methods {-update-watching [[this derefed]], -handle-change [[k sender oldval newval]], -peek-at [[this]]}}}, :protocol-symbol true, :name reagent.ratom/IComputedImpl, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 27, :column 1, :line 195, :protocol-info {:methods {-update-watching [[this derefed]], -handle-change [[k sender oldval newval]], -peek-at [[this]]}}, :info nil, :end-line 195, :impls #{reagent.ratom/Reaction}, :test true}, capture-derefed {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 15, :column 7, :end-line 15, :end-column 22, :arglists (quote ([f obj]))}, :name reagent.ratom/capture-derefed, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 22, :method-params ([f obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false}), :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f obj])), :test true}, RAtom {:num-fields 4, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/RAtom, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 15, :type true, :column 10, :line 38, :record false, :end-line 38, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}}, atom {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 93, :column 7, :end-line 93, :end-column 11, :arglists (quote ([x] [x & {:keys [meta validator]}])), :doc "Like clojure.core/atom, except that it keeps track of derefs."}, :name reagent.ratom/atom, :variadic true, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 11, :method-params ([x] [x p__32441]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag reagent.ratom/RAtom} {:max-fixed-arity 1, :variadic true, :tag reagent.ratom/RAtom}), :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x] [x & {:keys [meta validator]}])), :doc "Like clojure.core/atom, except that it keeps track of derefs.", :test true}, ->Reaction {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 200, :column 10, :end-line 200, :end-column 18, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash reagent.ratom/IComputedImpl cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([f state dirty? active? watching watches auto-run on-set on-dispose]))}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash reagent.ratom/IComputedImpl cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->Reaction, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 18, :method-params ([f state dirty? active? watching watches auto-run on-set on-dispose]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:max-fixed-arity 9, :variadic false, :tag reagent.ratom/Reaction}), :line 200, :end-line 200, :max-fixed-arity 9, :fn-var true, :arglists (quote ([f state dirty? active? watching watches auto-run on-set on-dispose])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}, make-wrapper {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 395, :column 7, :end-line 395, :end-column 19, :arglists (quote ([value callback-fn args]))}, :name reagent.ratom/make-wrapper, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 19, :method-params ([value callback-fn args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 3, :variadic false, :tag reagent.ratom/Wrapper}), :line 395, :end-line 395, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value callback-fn args])), :test true}, IReactiveAtom {:meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 36, :column 14, :end-line 36, :end-column 27, :protocol-symbol true, :protocol-info {:methods {}}}, :protocol-symbol true, :name reagent.ratom/IReactiveAtom, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 27, :column 1, :line 36, :protocol-info {:methods {}}, :info nil, :end-line 36, :impls #{reagent.ratom/RCursor reagent.ratom/Reaction reagent.ratom/RAtom}, :test true}, dispose! {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 190, :column 4, :end-line 190, :end-column 12, :protocol reagent.ratom/IDisposable, :arglists (quote ([this]))}, :protocol reagent.ratom/IDisposable, :name reagent.ratom/dispose!, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 189, :end-line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, -update-watching {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 196, :column 4, :end-line 196, :end-column 20, :protocol reagent.ratom/IComputedImpl, :arglists (quote ([this derefed]))}, :protocol reagent.ratom/IComputedImpl, :name reagent.ratom/-update-watching, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 20, :method-params ([this derefed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag any}), :line 195, :end-line 196, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this derefed])), :test true}, run {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 193, :column 4, :end-line 193, :end-column 7, :protocol reagent.ratom/IRunnable, :arglists (quote ([this]))}, :protocol reagent.ratom/IRunnable, :name reagent.ratom/run, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 7, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 192, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, IDisposable {:meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 189, :column 14, :end-line 189, :end-column 25, :protocol-symbol true, :protocol-info {:methods {dispose! [[this]]}}}, :protocol-symbol true, :name reagent.ratom/IDisposable, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 25, :column 1, :line 189, :protocol-info {:methods {dispose! [[this]]}}, :info nil, :end-line 189, :impls #{reagent.ratom/Reaction}, :test true}, captured {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 20, :column 7, :end-line 20, :end-column 15, :arglists (quote ([obj]))}, :name reagent.ratom/captured, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 15, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :test true}, make-reaction {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 319, :column 7, :end-line 319, :end-column 20, :arglists (quote ([f & {:keys [auto-run on-set on-dispose derefed]}]))}, :name reagent.ratom/make-reaction, :variadic true, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 20, :method-params ([f p__32548]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic true, :tag reagent.ratom/Reaction}), :line 319, :end-line 319, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f & {:keys [auto-run on-set on-dispose derefed]}])), :test true}, Reaction {:num-fields 9, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash reagent.ratom/IComputedImpl cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/Reaction, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 18, :type true, :column 10, :line 200, :record false, :end-line 200, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, RCursor {:num-fields 3, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :name reagent.ratom/RCursor, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 17, :type true, :column 10, :line 104, :record false, :end-line 104, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, -handle-change {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 197, :column 4, :end-line 197, :end-column 18, :protocol reagent.ratom/IComputedImpl, :arglists (quote ([k sender oldval newval]))}, :protocol reagent.ratom/IComputedImpl, :name reagent.ratom/-handle-change, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 18, :method-params ([k sender oldval newval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 4, :variadic false, :tag any}), :line 195, :end-line 197, :max-fixed-arity 4, :fn-var true, :arglists (quote ([k sender oldval newval])), :test true}, debug {:name reagent.ratom/debug, :file "resources/public/js/out/reagent/ratom.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :test true, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 9, :column 10, :end-line 9, :end-column 15}}, -running {:name reagent.ratom/-running, :file "resources/public/js/out/reagent/ratom.cljs", :line 11, :column 1, :end-line 11, :end-column 18, :test true, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 11, :column 10, :end-line 11, :end-column 18}}, cursor {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 166, :column 7, :end-line 166, :end-column 13, :arglists (quote ([src path]))}, :name reagent.ratom/cursor, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 13, :method-params ([src path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag reagent.ratom/RCursor}), :line 166, :end-line 166, :max-fixed-arity 2, :fn-var true, :arglists (quote ([src path])), :test true}, Wrapper {:num-fields 4, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/Wrapper, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 17, :type true, :column 10, :line 335, :record false, :end-line 335, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, running {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 13, :column 7, :end-line 13, :end-column 14, :arglists (quote ([]))}, :name reagent.ratom/running, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag any}), :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, IRunnable {:meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 192, :column 14, :end-line 192, :end-column 23, :protocol-symbol true, :protocol-info {:methods {run [[this]]}}}, :protocol-symbol true, :name reagent.ratom/IRunnable, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 23, :column 1, :line 192, :protocol-info {:methods {run [[this]]}}, :info nil, :end-line 192, :impls #{reagent.ratom/Reaction}, :test true}, -peek-at {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 198, :column 4, :end-line 198, :end-column 12, :protocol reagent.ratom/IComputedImpl, :arglists (quote ([this]))}, :protocol reagent.ratom/IComputedImpl, :name reagent.ratom/-peek-at, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 195, :end-line 198, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, *ratom-context* {:meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 7, :column 20, :end-line 7, :end-column 35, :dynamic true, :declared true}, :name reagent.ratom/*ratom-context*, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 35, :column 1, :dynamic true, :line 7, :declared true, :end-line 7, :test true}, ->Wrapper {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 335, :column 10, :end-line 335, :end-column 17, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([state callback changed watches]))}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->Wrapper, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 17, :method-params ([state callback changed watches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:max-fixed-arity 4, :variadic false, :tag reagent.ratom/Wrapper}), :line 335, :end-line 335, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state callback changed watches])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}, ->RAtom {:protocol-inline nil, :meta {:file "/Users/jdowns/ohds/resources/public/js/out/reagent/ratom.cljs", :line 38, :column 10, :end-line 38, :end-column 15, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([state meta validator watches]))}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->RAtom, :variadic false, :file "resources/public/js/out/reagent/ratom.cljs", :end-column 15, :method-params ([state meta validator watches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:max-fixed-arity 4, :variadic false, :tag reagent.ratom/RAtom}), :line 38, :end-line 38, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state meta validator watches])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}}, :require-macros {reagent.ratom reagent.ratom, reagent.debug reagent.debug}, :cljs.analyzer/constants {:seen #{:on-set :meta :derefed :validator :auto-run :on-dispose}, :order [:meta :validator :on-set :auto-run :on-dispose :derefed]}, :doc nil}