// Compiled by ClojureScript 0.0-3058 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string');
goog.require('goog.object');
goog.require('goog.array');
goog.require('goog.string.StringBuffer');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3058";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__9919__delegate = function (args){
return console.log.apply(console,(function (){var G__9918 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__9918) : cljs.core.into_array.call(null,G__9918));
})());
};
var G__9919 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9920__i = 0, G__9920__a = new Array(arguments.length -  0);
while (G__9920__i < G__9920__a.length) {G__9920__a[G__9920__i] = arguments[G__9920__i + 0]; ++G__9920__i;}
  args = new cljs.core.IndexedSeq(G__9920__a,0);
} 
return G__9919__delegate.call(this,args);};
G__9919.cljs$lang$maxFixedArity = 0;
G__9919.cljs$lang$applyTo = (function (arglist__9921){
var args = cljs.core.seq(arglist__9921);
return G__9919__delegate(args);
});
G__9919.cljs$core$IFn$_invoke$arity$variadic = G__9919__delegate;
return G__9919;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
return x instanceof Array;
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__9923 = x;
return goog.isString(G__9923);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__9925 = x__$1;
return goog.typeOf(G__9925);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__4064__auto__ = ty;
if(cljs.core.truth_(and__4064__auto__)){
return ty.cljs$lang$type;
} else {
return and__4064__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__9927 = obj;
return goog.typeOf(G__9927);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4423__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4423__auto__)){
var s = temp__4423__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__9929 = Symbol;
return goog.typeOf(G__9929);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4963__auto___9931 = len;
var i_9932 = (0);
while(true){
if((i_9932 < n__4963__auto___9931)){
(new_arr[i_9932] = (arr[i_9932]));

var G__9933 = (i_9932 + (1));
i_9932 = G__9933;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__9934 = (i + (1));
i = G__9934;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__9943__delegate = function (array,i,idxs){
var G__9940 = cljs$core$aget;
var G__9941 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__9942 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__9940,G__9941,G__9942) : cljs.core.apply.call(null,G__9940,G__9941,G__9942));
};
var G__9943 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__9944__i = 0, G__9944__a = new Array(arguments.length -  2);
while (G__9944__i < G__9944__a.length) {G__9944__a[G__9944__i] = arguments[G__9944__i + 2]; ++G__9944__i;}
  idxs = new cljs.core.IndexedSeq(G__9944__a,0);
} 
return G__9943__delegate.call(this,array,i,idxs);};
G__9943.cljs$lang$maxFixedArity = 2;
G__9943.cljs$lang$applyTo = (function (arglist__9945){
var array = cljs.core.first(arglist__9945);
arglist__9945 = cljs.core.next(arglist__9945);
var i = cljs.core.first(arglist__9945);
var idxs = cljs.core.rest(arglist__9945);
return G__9943__delegate(array,i,idxs);
});
G__9943.cljs$core$IFn$_invoke$arity$variadic = G__9943__delegate;
return G__9943;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__9946 = null;
if (arguments.length > 2) {
var G__9947__i = 0, G__9947__a = new Array(arguments.length -  2);
while (G__9947__i < G__9947__a.length) {G__9947__a[G__9947__i] = arguments[G__9947__i + 2]; ++G__9947__i;}
G__9946 = new cljs.core.IndexedSeq(G__9947__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__9946);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__9956__delegate = function (array,idx,idx2,idxv){
var G__9952 = cljs$core$aset;
var G__9953 = (array[idx]);
var G__9954 = idx2;
var G__9955 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__9952,G__9953,G__9954,G__9955) : cljs.core.apply.call(null,G__9952,G__9953,G__9954,G__9955));
};
var G__9956 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__9957__i = 0, G__9957__a = new Array(arguments.length -  3);
while (G__9957__i < G__9957__a.length) {G__9957__a[G__9957__i] = arguments[G__9957__i + 3]; ++G__9957__i;}
  idxv = new cljs.core.IndexedSeq(G__9957__a,0);
} 
return G__9956__delegate.call(this,array,idx,idx2,idxv);};
G__9956.cljs$lang$maxFixedArity = 3;
G__9956.cljs$lang$applyTo = (function (arglist__9958){
var array = cljs.core.first(arglist__9958);
arglist__9958 = cljs.core.next(arglist__9958);
var idx = cljs.core.first(arglist__9958);
arglist__9958 = cljs.core.next(arglist__9958);
var idx2 = cljs.core.first(arglist__9958);
var idxv = cljs.core.rest(arglist__9958);
return G__9956__delegate(array,idx,idx2,idxv);
});
G__9956.cljs$core$IFn$_invoke$arity$variadic = G__9956__delegate;
return G__9956;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__9959 = null;
if (arguments.length > 3) {
var G__9960__i = 0, G__9960__a = new Array(arguments.length -  3);
while (G__9960__i < G__9960__a.length) {G__9960__a[G__9960__i] = arguments[G__9960__i + 3]; ++G__9960__i;}
G__9959 = new cljs.core.IndexedSeq(G__9960__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__9959);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__9966 = (function (a,x){
a.push(x);

return a;
});
var G__9967 = [];
var G__9968 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__9966,G__9967,G__9968) : cljs.core.reduce.call(null,G__9966,G__9967,G__9968));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__9969__i = 0, G__9969__a = new Array(arguments.length -  2);
while (G__9969__i < G__9969__a.length) {G__9969__a[G__9969__i] = arguments[G__9969__i + 2]; ++G__9969__i;}
  args = new cljs.core.IndexedSeq(G__9969__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__9970){
var obj = cljs.core.first(arglist__9970);
arglist__9970 = cljs.core.next(arglist__9970);
var s = cljs.core.first(arglist__9970);
var args = cljs.core.rest(arglist__9970);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

cljs.core.Fn = (function (){var obj9972 = {};
return obj9972;
})();


cljs.core.IFn = (function (){var obj9974 = {};
return obj9974;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10020 = x__4720__auto__;
return goog.typeOf(G__10020);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10022 = x__4720__auto__;
return goog.typeOf(G__10022);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10024 = x__4720__auto__;
return goog.typeOf(G__10024);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10026 = x__4720__auto__;
return goog.typeOf(G__10026);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10028 = x__4720__auto__;
return goog.typeOf(G__10028);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10030 = x__4720__auto__;
return goog.typeOf(G__10030);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10032 = x__4720__auto__;
return goog.typeOf(G__10032);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10034 = x__4720__auto__;
return goog.typeOf(G__10034);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10036 = x__4720__auto__;
return goog.typeOf(G__10036);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10038 = x__4720__auto__;
return goog.typeOf(G__10038);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10040 = x__4720__auto__;
return goog.typeOf(G__10040);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10042 = x__4720__auto__;
return goog.typeOf(G__10042);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10044 = x__4720__auto__;
return goog.typeOf(G__10044);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10046 = x__4720__auto__;
return goog.typeOf(G__10046);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10048 = x__4720__auto__;
return goog.typeOf(G__10048);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10050 = x__4720__auto__;
return goog.typeOf(G__10050);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10052 = x__4720__auto__;
return goog.typeOf(G__10052);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10054 = x__4720__auto__;
return goog.typeOf(G__10054);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10056 = x__4720__auto__;
return goog.typeOf(G__10056);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10058 = x__4720__auto__;
return goog.typeOf(G__10058);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10060 = x__4720__auto__;
return goog.typeOf(G__10060);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._invoke[(function (){var G__10062 = x__4720__auto__;
return goog.typeOf(G__10062);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._invoke["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


cljs.core.ICloneable = (function (){var obj10064 = {};
return obj10064;
})();

cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__4064__auto__ = value;
if(and__4064__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__4064__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4720__auto__ = (((value == null))?null:value);
return (function (){var or__4076__auto__ = (cljs.core._clone[(function (){var G__10068 = x__4720__auto__;
return goog.typeOf(G__10068);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._clone["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj10070 = {};
return obj10070;
})();

cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._count[(function (){var G__10074 = x__4720__auto__;
return goog.typeOf(G__10074);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._count["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj10076 = {};
return obj10076;
})();

cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._empty[(function (){var G__10080 = x__4720__auto__;
return goog.typeOf(G__10080);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._empty["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj10082 = {};
return obj10082;
})();

cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._conj[(function (){var G__10086 = x__4720__auto__;
return goog.typeOf(G__10086);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._conj["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj10088 = {};
return obj10088;
})();

cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._nth[(function (){var G__10094 = x__4720__auto__;
return goog.typeOf(G__10094);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._nth["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._nth[(function (){var G__10096 = x__4720__auto__;
return goog.typeOf(G__10096);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._nth["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


cljs.core.ASeq = (function (){var obj10098 = {};
return obj10098;
})();


cljs.core.ISeq = (function (){var obj10100 = {};
return obj10100;
})();

cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._first[(function (){var G__10104 = x__4720__auto__;
return goog.typeOf(G__10104);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._first["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._rest[(function (){var G__10108 = x__4720__auto__;
return goog.typeOf(G__10108);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._rest["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj10110 = {};
return obj10110;
})();

cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._next[(function (){var G__10114 = x__4720__auto__;
return goog.typeOf(G__10114);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._next["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj10116 = {};
return obj10116;
})();

cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._lookup[(function (){var G__10122 = x__4720__auto__;
return goog.typeOf(G__10122);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._lookup["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._lookup[(function (){var G__10124 = x__4720__auto__;
return goog.typeOf(G__10124);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._lookup["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


cljs.core.IAssociative = (function (){var obj10126 = {};
return obj10126;
})();

cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__10130 = x__4720__auto__;
return goog.typeOf(G__10130);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._assoc[(function (){var G__10134 = x__4720__auto__;
return goog.typeOf(G__10134);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._assoc["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj10136 = {};
return obj10136;
})();

cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._dissoc[(function (){var G__10140 = x__4720__auto__;
return goog.typeOf(G__10140);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._dissoc["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj10142 = {};
return obj10142;
})();

cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._key[(function (){var G__10146 = x__4720__auto__;
return goog.typeOf(G__10146);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._key["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._val[(function (){var G__10150 = x__4720__auto__;
return goog.typeOf(G__10150);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._val["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj10152 = {};
return obj10152;
})();

cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._disjoin[(function (){var G__10156 = x__4720__auto__;
return goog.typeOf(G__10156);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._disjoin["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj10158 = {};
return obj10158;
})();

cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._peek[(function (){var G__10162 = x__4720__auto__;
return goog.typeOf(G__10162);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._peek["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._pop[(function (){var G__10166 = x__4720__auto__;
return goog.typeOf(G__10166);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._pop["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj10168 = {};
return obj10168;
})();

cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._assoc_n[(function (){var G__10172 = x__4720__auto__;
return goog.typeOf(G__10172);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj10174 = {};
return obj10174;
})();

cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._deref[(function (){var G__10178 = x__4720__auto__;
return goog.typeOf(G__10178);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._deref["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj10180 = {};
return obj10180;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._deref_with_timeout[(function (){var G__10184 = x__4720__auto__;
return goog.typeOf(G__10184);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj10186 = {};
return obj10186;
})();

cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._meta[(function (){var G__10190 = x__4720__auto__;
return goog.typeOf(G__10190);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._meta["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj10192 = {};
return obj10192;
})();

cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._with_meta[(function (){var G__10196 = x__4720__auto__;
return goog.typeOf(G__10196);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._with_meta["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj10198 = {};
return obj10198;
})();

cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._reduce[(function (){var G__10204 = x__4720__auto__;
return goog.typeOf(G__10204);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._reduce["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._reduce[(function (){var G__10206 = x__4720__auto__;
return goog.typeOf(G__10206);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._reduce["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj10208 = {};
return obj10208;
})();

cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._kv_reduce[(function (){var G__10212 = x__4720__auto__;
return goog.typeOf(G__10212);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj10214 = {};
return obj10214;
})();

cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._equiv[(function (){var G__10218 = x__4720__auto__;
return goog.typeOf(G__10218);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._equiv["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj10220 = {};
return obj10220;
})();

cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._hash[(function (){var G__10224 = x__4720__auto__;
return goog.typeOf(G__10224);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._hash["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj10226 = {};
return obj10226;
})();

cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._seq[(function (){var G__10230 = x__4720__auto__;
return goog.typeOf(G__10230);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._seq["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj10232 = {};
return obj10232;
})();


cljs.core.IList = (function (){var obj10234 = {};
return obj10234;
})();


cljs.core.IRecord = (function (){var obj10236 = {};
return obj10236;
})();


cljs.core.IReversible = (function (){var obj10238 = {};
return obj10238;
})();

cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._rseq[(function (){var G__10242 = x__4720__auto__;
return goog.typeOf(G__10242);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._rseq["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj10244 = {};
return obj10244;
})();

cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._sorted_seq[(function (){var G__10248 = x__4720__auto__;
return goog.typeOf(G__10248);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._sorted_seq_from[(function (){var G__10252 = x__4720__auto__;
return goog.typeOf(G__10252);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._entry_key[(function (){var G__10256 = x__4720__auto__;
return goog.typeOf(G__10256);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._entry_key["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._comparator[(function (){var G__10260 = x__4720__auto__;
return goog.typeOf(G__10260);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._comparator["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj10262 = {};
return obj10262;
})();

cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__4064__auto__ = writer;
if(and__4064__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__4064__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4720__auto__ = (((writer == null))?null:writer);
return (function (){var or__4076__auto__ = (cljs.core._write[(function (){var G__10266 = x__4720__auto__;
return goog.typeOf(G__10266);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._write["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__4064__auto__ = writer;
if(and__4064__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__4064__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4720__auto__ = (((writer == null))?null:writer);
return (function (){var or__4076__auto__ = (cljs.core._flush[(function (){var G__10270 = x__4720__auto__;
return goog.typeOf(G__10270);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._flush["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj10272 = {};
return obj10272;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._pr_writer[(function (){var G__10276 = x__4720__auto__;
return goog.typeOf(G__10276);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj10278 = {};
return obj10278;
})();

cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__4064__auto__ = d;
if(and__4064__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__4064__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4720__auto__ = (((d == null))?null:d);
return (function (){var or__4076__auto__ = (cljs.core._realized_QMARK_[(function (){var G__10282 = x__4720__auto__;
return goog.typeOf(G__10282);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj10284 = {};
return obj10284;
})();

cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._notify_watches[(function (){var G__10288 = x__4720__auto__;
return goog.typeOf(G__10288);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._add_watch[(function (){var G__10292 = x__4720__auto__;
return goog.typeOf(G__10292);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._add_watch["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__4064__auto__ = this$;
if(and__4064__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__4064__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4720__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4076__auto__ = (cljs.core._remove_watch[(function (){var G__10296 = x__4720__auto__;
return goog.typeOf(G__10296);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj10298 = {};
return obj10298;
})();

cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._as_transient[(function (){var G__10302 = x__4720__auto__;
return goog.typeOf(G__10302);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._as_transient["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj10304 = {};
return obj10304;
})();

cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__4064__auto__ = tcoll;
if(and__4064__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__4064__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4720__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4076__auto__ = (cljs.core._conj_BANG_[(function (){var G__10308 = x__4720__auto__;
return goog.typeOf(G__10308);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__4064__auto__ = tcoll;
if(and__4064__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__4064__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4720__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4076__auto__ = (cljs.core._persistent_BANG_[(function (){var G__10312 = x__4720__auto__;
return goog.typeOf(G__10312);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj10314 = {};
return obj10314;
})();

cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__4064__auto__ = tcoll;
if(and__4064__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__4064__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4720__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4076__auto__ = (cljs.core._assoc_BANG_[(function (){var G__10318 = x__4720__auto__;
return goog.typeOf(G__10318);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj10320 = {};
return obj10320;
})();

cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__4064__auto__ = tcoll;
if(and__4064__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__4064__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4720__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4076__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__10324 = x__4720__auto__;
return goog.typeOf(G__10324);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj10326 = {};
return obj10326;
})();

cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__4064__auto__ = tcoll;
if(and__4064__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__4064__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4720__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4076__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__10330 = x__4720__auto__;
return goog.typeOf(G__10330);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__4064__auto__ = tcoll;
if(and__4064__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__4064__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4720__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4076__auto__ = (cljs.core._pop_BANG_[(function (){var G__10334 = x__4720__auto__;
return goog.typeOf(G__10334);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj10336 = {};
return obj10336;
})();

cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__4064__auto__ = tcoll;
if(and__4064__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__4064__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4720__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4076__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__10340 = x__4720__auto__;
return goog.typeOf(G__10340);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj10342 = {};
return obj10342;
})();

cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__4064__auto__ = x;
if(and__4064__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__4064__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4720__auto__ = (((x == null))?null:x);
return (function (){var or__4076__auto__ = (cljs.core._compare[(function (){var G__10346 = x__4720__auto__;
return goog.typeOf(G__10346);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._compare["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj10348 = {};
return obj10348;
})();

cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._drop_first[(function (){var G__10352 = x__4720__auto__;
return goog.typeOf(G__10352);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._drop_first["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj10354 = {};
return obj10354;
})();

cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._chunked_first[(function (){var G__10358 = x__4720__auto__;
return goog.typeOf(G__10358);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._chunked_rest[(function (){var G__10362 = x__4720__auto__;
return goog.typeOf(G__10362);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj10364 = {};
return obj10364;
})();

cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._chunked_next[(function (){var G__10368 = x__4720__auto__;
return goog.typeOf(G__10368);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj10370 = {};
return obj10370;
})();

cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__4064__auto__ = x;
if(and__4064__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__4064__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4720__auto__ = (((x == null))?null:x);
return (function (){var or__4076__auto__ = (cljs.core._name[(function (){var G__10374 = x__4720__auto__;
return goog.typeOf(G__10374);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._name["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__4064__auto__ = x;
if(and__4064__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__4064__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4720__auto__ = (((x == null))?null:x);
return (function (){var or__4076__auto__ = (cljs.core._namespace[(function (){var G__10378 = x__4720__auto__;
return goog.typeOf(G__10378);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._namespace["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj10380 = {};
return obj10380;
})();


cljs.core.IReset = (function (){var obj10382 = {};
return obj10382;
})();

cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._reset_BANG_[(function (){var G__10386 = x__4720__auto__;
return goog.typeOf(G__10386);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj10388 = {};
return obj10388;
})();

cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._swap_BANG_[(function (){var G__10398 = x__4720__auto__;
return goog.typeOf(G__10398);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._swap_BANG_[(function (){var G__10400 = x__4720__auto__;
return goog.typeOf(G__10400);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._swap_BANG_[(function (){var G__10402 = x__4720__auto__;
return goog.typeOf(G__10402);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._swap_BANG_[(function (){var G__10404 = x__4720__auto__;
return goog.typeOf(G__10404);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj10406 = {};
return obj10406;
})();

cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__4064__auto__ = o;
if(and__4064__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__4064__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4720__auto__ = (((o == null))?null:o);
return (function (){var or__4076__auto__ = (cljs.core._vreset_BANG_[(function (){var G__10410 = x__4720__auto__;
return goog.typeOf(G__10410);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj10412 = {};
return obj10412;
})();

cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__4064__auto__ = coll;
if(and__4064__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__4064__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4720__auto__ = (((coll == null))?null:coll);
return (function (){var or__4076__auto__ = (cljs.core._iterator[(function (){var G__10416 = x__4720__auto__;
return goog.typeOf(G__10416);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._iterator["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__10419 = (4294967295);
var G__10420 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10419,G__10420) : Math.imul.call(null,G__10419,G__10420));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__10423 = a;
var G__10424 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10423,G__10424) : Math.imul.call(null,G__10423,G__10424));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__10425 = (i + (2));
var G__10426 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__10425;
h1 = G__10426;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj10428 = {};
return obj10428;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__10429 = (i + (1));
var G__10430 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__10429;
hash = G__10430;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj10434 = {};
return obj10434;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__10437 = o;
if(G__10437){
var bit__4750__auto__ = (G__10437.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4750__auto__) || (G__10437.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__10438 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10438) : Math.floor.call(null,G__10438));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4064__auto__ = cljs.core.not(a.ns);
if(and__4064__auto__){
return b.ns;
} else {
return and__4064__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__10445 = a.ns;
var G__10446 = b.ns;
return goog.array.defaultCompare(G__10445,G__10446);
})();
if(((0) === nsc)){
var G__10447 = a.name;
var G__10448 = b.name;
return goog.array.defaultCompare(G__10447,G__10448);
} else {
return nsc;
}
}
} else {
var G__10449 = a.name;
var G__10450 = b.name;
return goog.array.defaultCompare(G__10449,G__10450);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.call = (function() {
var G__10452 = null;
var G__10452__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__10452__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__10452 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__10452__2.call(this,self__,coll);
case 3:
return G__10452__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10452.cljs$core$IFn$_invoke$arity$2 = G__10452__2;
G__10452.cljs$core$IFn$_invoke$arity$3 = G__10452__3;
return G__10452;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args10451){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10451)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4497__auto__ = self__._hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 163841;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.call = (function() {
var G__10500 = null;
var G__10500__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__10500__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__10500__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__10500__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__10500__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__10500__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__10500__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__10500__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__10500__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__10500__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__10500__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__10500__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__10500__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__10500__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__10500__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__10500__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__10500__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__10500__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__10500__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__10500__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__10500__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__10500__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10456 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__10457 = a;
var G__10458 = b;
var G__10459 = c;
var G__10460 = d;
var G__10461 = e;
var G__10462 = f;
var G__10463 = g;
var G__10464 = h;
var G__10465 = i;
var G__10466 = j;
var G__10467 = k;
var G__10468 = l;
var G__10469 = m;
var G__10470 = n;
var G__10471 = o;
var G__10472 = p;
var G__10473 = q;
var G__10474 = r;
var G__10475 = s;
var G__10476 = t;
var G__10477 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10456,G__10457,G__10458,G__10459,G__10460,G__10461,G__10462,G__10463,G__10464,G__10465,G__10466,G__10467,G__10468,G__10469,G__10470,G__10471,G__10472,G__10473,G__10474,G__10475,G__10476,G__10477) : cljs.core.apply.call(null,G__10456,G__10457,G__10458,G__10459,G__10460,G__10461,G__10462,G__10463,G__10464,G__10465,G__10466,G__10467,G__10468,G__10469,G__10470,G__10471,G__10472,G__10473,G__10474,G__10475,G__10476,G__10477));
});
G__10500 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__10500__1.call(this,self__);
case 2:
return G__10500__2.call(this,self__,a);
case 3:
return G__10500__3.call(this,self__,a,b);
case 4:
return G__10500__4.call(this,self__,a,b,c);
case 5:
return G__10500__5.call(this,self__,a,b,c,d);
case 6:
return G__10500__6.call(this,self__,a,b,c,d,e);
case 7:
return G__10500__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__10500__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__10500__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__10500__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__10500__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__10500__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__10500__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__10500__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__10500__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__10500__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__10500__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__10500__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__10500__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__10500__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__10500__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__10500__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10500.cljs$core$IFn$_invoke$arity$1 = G__10500__1;
G__10500.cljs$core$IFn$_invoke$arity$2 = G__10500__2;
G__10500.cljs$core$IFn$_invoke$arity$3 = G__10500__3;
G__10500.cljs$core$IFn$_invoke$arity$4 = G__10500__4;
G__10500.cljs$core$IFn$_invoke$arity$5 = G__10500__5;
G__10500.cljs$core$IFn$_invoke$arity$6 = G__10500__6;
G__10500.cljs$core$IFn$_invoke$arity$7 = G__10500__7;
G__10500.cljs$core$IFn$_invoke$arity$8 = G__10500__8;
G__10500.cljs$core$IFn$_invoke$arity$9 = G__10500__9;
G__10500.cljs$core$IFn$_invoke$arity$10 = G__10500__10;
G__10500.cljs$core$IFn$_invoke$arity$11 = G__10500__11;
G__10500.cljs$core$IFn$_invoke$arity$12 = G__10500__12;
G__10500.cljs$core$IFn$_invoke$arity$13 = G__10500__13;
G__10500.cljs$core$IFn$_invoke$arity$14 = G__10500__14;
G__10500.cljs$core$IFn$_invoke$arity$15 = G__10500__15;
G__10500.cljs$core$IFn$_invoke$arity$16 = G__10500__16;
G__10500.cljs$core$IFn$_invoke$arity$17 = G__10500__17;
G__10500.cljs$core$IFn$_invoke$arity$18 = G__10500__18;
G__10500.cljs$core$IFn$_invoke$arity$19 = G__10500__19;
G__10500.cljs$core$IFn$_invoke$arity$20 = G__10500__20;
G__10500.cljs$core$IFn$_invoke$arity$21 = G__10500__21;
G__10500.cljs$core$IFn$_invoke$arity$22 = G__10500__22;
return G__10500;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args10455){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10455)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__10478 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__10479 = a;
var G__10480 = b;
var G__10481 = c;
var G__10482 = d;
var G__10483 = e;
var G__10484 = f;
var G__10485 = g;
var G__10486 = h;
var G__10487 = i;
var G__10488 = j;
var G__10489 = k;
var G__10490 = l;
var G__10491 = m;
var G__10492 = n;
var G__10493 = o;
var G__10494 = p;
var G__10495 = q;
var G__10496 = r;
var G__10497 = s;
var G__10498 = t;
var G__10499 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10478,G__10479,G__10480,G__10481,G__10482,G__10483,G__10484,G__10485,G__10486,G__10487,G__10488,G__10489,G__10490,G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498,G__10499) : cljs.core.apply.call(null,G__10478,G__10479,G__10480,G__10481,G__10482,G__10483,G__10484,G__10485,G__10486,G__10487,G__10488,G__10489,G__10490,G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498,G__10499));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__10502 = x;
if(G__10502){
var bit__4757__auto__ = null;
if(cljs.core.truth_((function (){var or__4076__auto__ = bit__4757__auto__;
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return G__10502.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__10502.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__10502);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__10502);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__10504 = value;
if(G__10504){
var bit__4757__auto__ = (G__10504.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4757__auto__) || (G__10504.cljs$core$ICloneable$)){
return true;
} else {
if((!G__10504.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__10504);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__10504);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__10506 = coll;
if(G__10506){
var bit__4750__auto__ = (G__10506.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4750__auto__) || (G__10506.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__10508 = coll;
if(G__10508){
var bit__4750__auto__ = (G__10508.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4750__auto__) || (G__10508.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__10510 = coll;
if(G__10510){
var bit__4750__auto__ = (G__10510.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4750__auto__) || (G__10510.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__10512 = coll;
if(G__10512){
var bit__4750__auto__ = (G__10512.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4750__auto__) || (G__10512.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__10517__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__10518 = y;
var G__10519 = cljs.core.first(more);
var G__10520 = cljs.core.next(more);
x = G__10518;
y = G__10519;
more = G__10520;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10517 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10521__i = 0, G__10521__a = new Array(arguments.length -  2);
while (G__10521__i < G__10521__a.length) {G__10521__a[G__10521__i] = arguments[G__10521__i + 2]; ++G__10521__i;}
  more = new cljs.core.IndexedSeq(G__10521__a,0);
} 
return G__10517__delegate.call(this,x,y,more);};
G__10517.cljs$lang$maxFixedArity = 2;
G__10517.cljs$lang$applyTo = (function (arglist__10522){
var x = cljs.core.first(arglist__10522);
arglist__10522 = cljs.core.next(arglist__10522);
var y = cljs.core.first(arglist__10522);
var more = cljs.core.rest(arglist__10522);
return G__10517__delegate(x,y,more);
});
G__10517.cljs$core$IFn$_invoke$arity$variadic = G__10517__delegate;
return G__10517;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__10523 = null;
if (arguments.length > 2) {
var G__10524__i = 0, G__10524__a = new Array(arguments.length -  2);
while (G__10524__i < G__10524__a.length) {G__10524__a[G__10524__i] = arguments[G__10524__i + 2]; ++G__10524__i;}
G__10523 = new cljs.core.IndexedSeq(G__10524__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10523);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": x, "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__10525 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__10525) : cljs.core.es6_iterator_seq.call(null,G__10525));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__10526 = (n + (1));
var G__10527 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__10528 = cljs.core.next(coll__$1);
n = G__10526;
hash_code = G__10527;
coll__$1 = G__10528;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__10529 = (n + (1));
var G__10530 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__10531 = cljs.core.next(coll__$1);
n = G__10529;
hash_code = G__10530;
coll__$1 = G__10531;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.Fn["function"] = true);

(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__10532 = o;
return goog.getUid(G__10532);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__10534 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10534) : cljs.core.deref.call(null,G__10534));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__10541 = val;
var G__10542 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10541,G__10542) : f.call(null,G__10541,G__10542));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10547 = nval;
var G__10548 = (n + (1));
val = G__10547;
n = G__10548;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__10543 = val__$1;
var G__10544 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10543,G__10544) : f.call(null,G__10543,G__10544));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10549 = nval;
var G__10550 = (n + (1));
val__$1 = G__10549;
n = G__10550;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__10545 = val__$1;
var G__10546 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10545,G__10546) : f.call(null,G__10545,G__10546));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10551 = nval;
var G__10552 = (n + (1));
val__$1 = G__10551;
n = G__10552;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__10559 = val;
var G__10560 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10559,G__10560) : f.call(null,G__10559,G__10560));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10565 = nval;
var G__10566 = (n + (1));
val = G__10565;
n = G__10566;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__10561 = val__$1;
var G__10562 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10561,G__10562) : f.call(null,G__10561,G__10562));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10567 = nval;
var G__10568 = (n + (1));
val__$1 = G__10567;
n = G__10568;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__10563 = val__$1;
var G__10564 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10563,G__10564) : f.call(null,G__10563,G__10564));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10569 = nval;
var G__10570 = (n + (1));
val__$1 = G__10569;
n = G__10570;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__10572 = x;
if(G__10572){
var bit__4757__auto__ = (G__10572.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4757__auto__) || (G__10572.cljs$core$ICounted$)){
return true;
} else {
if((!G__10572.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__10572);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__10572);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__10574 = x;
if(G__10574){
var bit__4757__auto__ = (G__10574.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4757__auto__) || (G__10574.cljs$core$IIndexed$)){
return true;
} else {
if((!G__10574.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__10574);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__10574);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__10575 = coll__$1;
var G__10576 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10575,G__10576) : cljs.core.equiv_sequential.call(null,G__10575,G__10576));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10577 = o;
var G__10578 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10577,G__10578) : cljs.core.cons.call(null,G__10577,G__10578));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__10581 = coll__$1;
var G__10582 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10581,G__10582) : cljs.core.equiv_sequential.call(null,G__10581,G__10582));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10583 = cljs.core.List.EMPTY;
var G__10584 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__10583,G__10584) : cljs.core.with_meta.call(null,G__10583,G__10584));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__10585 = f;
var G__10586 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__10585,G__10586) : cljs.core.seq_reduce.call(null,G__10585,G__10586));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__10587 = f;
var G__10588 = start;
var G__10589 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__10587,G__10588,G__10589) : cljs.core.seq_reduce.call(null,G__10587,G__10588,G__10589));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10590 = o;
var G__10591 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10590,G__10591) : cljs.core.cons.call(null,G__10590,G__10591));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__10592 = sn;
s = G__10592;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__10597__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__10598 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__10599 = cljs.core.first(xs);
var G__10600 = cljs.core.next(xs);
coll = G__10598;
x = G__10599;
xs = G__10600;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__10597 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__10601__i = 0, G__10601__a = new Array(arguments.length -  2);
while (G__10601__i < G__10601__a.length) {G__10601__a[G__10601__i] = arguments[G__10601__i + 2]; ++G__10601__i;}
  xs = new cljs.core.IndexedSeq(G__10601__a,0);
} 
return G__10597__delegate.call(this,coll,x,xs);};
G__10597.cljs$lang$maxFixedArity = 2;
G__10597.cljs$lang$applyTo = (function (arglist__10602){
var coll = cljs.core.first(arglist__10602);
arglist__10602 = cljs.core.next(arglist__10602);
var x = cljs.core.first(arglist__10602);
var xs = cljs.core.rest(arglist__10602);
return G__10597__delegate(coll,x,xs);
});
G__10597.cljs$core$IFn$_invoke$arity$variadic = G__10597__delegate;
return G__10597;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__10603 = null;
if (arguments.length > 2) {
var G__10604__i = 0, G__10604__a = new Array(arguments.length -  2);
while (G__10604__i < G__10604__a.length) {G__10604__a[G__10604__i] = arguments[G__10604__i + 2]; ++G__10604__i;}
G__10603 = new cljs.core.IndexedSeq(G__10604__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__10603);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__10605 = cljs.core.next(s);
var G__10606 = (acc + (1));
s = G__10605;
acc = G__10606;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__10608 = coll;
if(G__10608){
var bit__4750__auto__ = (G__10608.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4750__auto__) || (G__10608.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__10609 = cljs.core.next(coll);
var G__10610 = (n - (1));
coll = G__10609;
n = G__10610;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__10611 = cljs.core.next(coll);
var G__10612 = (n - (1));
var G__10613 = not_found;
coll = G__10611;
n = G__10612;
not_found = G__10613;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__10618 = coll;
if(G__10618){
var bit__4750__auto__ = (G__10618.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4750__auto__) || (G__10618.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__10619 = coll;
if(G__10619){
var bit__4757__auto__ = (G__10619.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4757__auto__) || (G__10619.cljs$core$ISeq$)){
return true;
} else {
if((!G__10619.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10619);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10619);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__10620 = coll;
if(G__10620){
var bit__4750__auto__ = (G__10620.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4750__auto__) || (G__10620.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__10621 = coll;
if(G__10621){
var bit__4757__auto__ = (G__10621.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4757__auto__) || (G__10621.cljs$core$ISeq$)){
return true;
} else {
if((!G__10621.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10621);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10621);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__10622 = (n__$1 - (1));
var G__10623 = cljs.core.rest(xs);
n__$1 = G__10622;
xs = G__10623;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__10626 = o;
if(G__10626){
var bit__4750__auto__ = (G__10626.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4750__auto__) || (G__10626.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__10627 = o;
if(G__10627){
var bit__4750__auto__ = (G__10627.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4750__auto__) || (G__10627.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__10631__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__10632 = ret;
var G__10633 = cljs.core.first(kvs);
var G__10634 = cljs.core.second(kvs);
var G__10635 = cljs.core.nnext(kvs);
coll = G__10632;
k = G__10633;
v = G__10634;
kvs = G__10635;
continue;
} else {
return ret;
}
break;
}
};
var G__10631 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__10636__i = 0, G__10636__a = new Array(arguments.length -  3);
while (G__10636__i < G__10636__a.length) {G__10636__a[G__10636__i] = arguments[G__10636__i + 3]; ++G__10636__i;}
  kvs = new cljs.core.IndexedSeq(G__10636__a,0);
} 
return G__10631__delegate.call(this,coll,k,v,kvs);};
G__10631.cljs$lang$maxFixedArity = 3;
G__10631.cljs$lang$applyTo = (function (arglist__10637){
var coll = cljs.core.first(arglist__10637);
arglist__10637 = cljs.core.next(arglist__10637);
var k = cljs.core.first(arglist__10637);
arglist__10637 = cljs.core.next(arglist__10637);
var v = cljs.core.first(arglist__10637);
var kvs = cljs.core.rest(arglist__10637);
return G__10631__delegate(coll,k,v,kvs);
});
G__10631.cljs$core$IFn$_invoke$arity$variadic = G__10631__delegate;
return G__10631;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__10638 = null;
if (arguments.length > 3) {
var G__10639__i = 0, G__10639__a = new Array(arguments.length -  3);
while (G__10639__i < G__10639__a.length) {G__10639__a[G__10639__i] = arguments[G__10639__i + 3]; ++G__10639__i;}
G__10638 = new cljs.core.IndexedSeq(G__10639__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__10638);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__10642__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__10643 = ret;
var G__10644 = cljs.core.first(ks);
var G__10645 = cljs.core.next(ks);
coll = G__10643;
k = G__10644;
ks = G__10645;
continue;
} else {
return ret;
}
}
break;
}
};
var G__10642 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__10646__i = 0, G__10646__a = new Array(arguments.length -  2);
while (G__10646__i < G__10646__a.length) {G__10646__a[G__10646__i] = arguments[G__10646__i + 2]; ++G__10646__i;}
  ks = new cljs.core.IndexedSeq(G__10646__a,0);
} 
return G__10642__delegate.call(this,coll,k,ks);};
G__10642.cljs$lang$maxFixedArity = 2;
G__10642.cljs$lang$applyTo = (function (arglist__10647){
var coll = cljs.core.first(arglist__10647);
arglist__10647 = cljs.core.next(arglist__10647);
var k = cljs.core.first(arglist__10647);
var ks = cljs.core.rest(arglist__10647);
return G__10642__delegate(coll,k,ks);
});
G__10642.cljs$core$IFn$_invoke$arity$variadic = G__10642__delegate;
return G__10642;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__10648 = null;
if (arguments.length > 2) {
var G__10649__i = 0, G__10649__a = new Array(arguments.length -  2);
while (G__10649__i < G__10649__a.length) {G__10649__a[G__10649__i] = arguments[G__10649__i + 2]; ++G__10649__i;}
G__10648 = new cljs.core.IndexedSeq(G__10649__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__10648);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__4076__auto__ = (function (){var G__10654 = f;
return goog.isFunction(G__10654);
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var G__10655 = f;
if(G__10655){
var bit__4757__auto__ = null;
if(cljs.core.truth_((function (){var or__4076__auto____$1 = bit__4757__auto__;
if(cljs.core.truth_(or__4076__auto____$1)){
return or__4076__auto____$1;
} else {
return G__10655.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__10655.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__10655);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__10655);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 393217;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.call = (function() {
var G__11121 = null;
var G__11121__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__11121__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10657 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10657) : self__.afn.call(null,G__10657));
});
var G__11121__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10658 = a;
var G__10659 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10658,G__10659) : self__.afn.call(null,G__10658,G__10659));
});
var G__11121__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10660 = a;
var G__10661 = b;
var G__10662 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10660,G__10661,G__10662) : self__.afn.call(null,G__10660,G__10661,G__10662));
});
var G__11121__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10663 = a;
var G__10664 = b;
var G__10665 = c;
var G__10666 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10663,G__10664,G__10665,G__10666) : self__.afn.call(null,G__10663,G__10664,G__10665,G__10666));
});
var G__11121__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10667 = a;
var G__10668 = b;
var G__10669 = c;
var G__10670 = d;
var G__10671 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10667,G__10668,G__10669,G__10670,G__10671) : self__.afn.call(null,G__10667,G__10668,G__10669,G__10670,G__10671));
});
var G__11121__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10672 = a;
var G__10673 = b;
var G__10674 = c;
var G__10675 = d;
var G__10676 = e;
var G__10677 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10672,G__10673,G__10674,G__10675,G__10676,G__10677) : self__.afn.call(null,G__10672,G__10673,G__10674,G__10675,G__10676,G__10677));
});
var G__11121__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10678 = a;
var G__10679 = b;
var G__10680 = c;
var G__10681 = d;
var G__10682 = e;
var G__10683 = f;
var G__10684 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10678,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684) : self__.afn.call(null,G__10678,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684));
});
var G__11121__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10685 = a;
var G__10686 = b;
var G__10687 = c;
var G__10688 = d;
var G__10689 = e;
var G__10690 = f;
var G__10691 = g;
var G__10692 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692) : self__.afn.call(null,G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692));
});
var G__11121__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10693 = a;
var G__10694 = b;
var G__10695 = c;
var G__10696 = d;
var G__10697 = e;
var G__10698 = f;
var G__10699 = g;
var G__10700 = h;
var G__10701 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10693,G__10694,G__10695,G__10696,G__10697,G__10698,G__10699,G__10700,G__10701) : self__.afn.call(null,G__10693,G__10694,G__10695,G__10696,G__10697,G__10698,G__10699,G__10700,G__10701));
});
var G__11121__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10702 = a;
var G__10703 = b;
var G__10704 = c;
var G__10705 = d;
var G__10706 = e;
var G__10707 = f;
var G__10708 = g;
var G__10709 = h;
var G__10710 = i;
var G__10711 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10702,G__10703,G__10704,G__10705,G__10706,G__10707,G__10708,G__10709,G__10710,G__10711) : self__.afn.call(null,G__10702,G__10703,G__10704,G__10705,G__10706,G__10707,G__10708,G__10709,G__10710,G__10711));
});
var G__11121__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10712 = a;
var G__10713 = b;
var G__10714 = c;
var G__10715 = d;
var G__10716 = e;
var G__10717 = f;
var G__10718 = g;
var G__10719 = h;
var G__10720 = i;
var G__10721 = j;
var G__10722 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720,G__10721,G__10722) : self__.afn.call(null,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720,G__10721,G__10722));
});
var G__11121__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10723 = a;
var G__10724 = b;
var G__10725 = c;
var G__10726 = d;
var G__10727 = e;
var G__10728 = f;
var G__10729 = g;
var G__10730 = h;
var G__10731 = i;
var G__10732 = j;
var G__10733 = k;
var G__10734 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734) : self__.afn.call(null,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734));
});
var G__11121__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10735 = a;
var G__10736 = b;
var G__10737 = c;
var G__10738 = d;
var G__10739 = e;
var G__10740 = f;
var G__10741 = g;
var G__10742 = h;
var G__10743 = i;
var G__10744 = j;
var G__10745 = k;
var G__10746 = l;
var G__10747 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10735,G__10736,G__10737,G__10738,G__10739,G__10740,G__10741,G__10742,G__10743,G__10744,G__10745,G__10746,G__10747) : self__.afn.call(null,G__10735,G__10736,G__10737,G__10738,G__10739,G__10740,G__10741,G__10742,G__10743,G__10744,G__10745,G__10746,G__10747));
});
var G__11121__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10748 = a;
var G__10749 = b;
var G__10750 = c;
var G__10751 = d;
var G__10752 = e;
var G__10753 = f;
var G__10754 = g;
var G__10755 = h;
var G__10756 = i;
var G__10757 = j;
var G__10758 = k;
var G__10759 = l;
var G__10760 = m;
var G__10761 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10748,G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758,G__10759,G__10760,G__10761) : self__.afn.call(null,G__10748,G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758,G__10759,G__10760,G__10761));
});
var G__11121__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10762 = a;
var G__10763 = b;
var G__10764 = c;
var G__10765 = d;
var G__10766 = e;
var G__10767 = f;
var G__10768 = g;
var G__10769 = h;
var G__10770 = i;
var G__10771 = j;
var G__10772 = k;
var G__10773 = l;
var G__10774 = m;
var G__10775 = n;
var G__10776 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769,G__10770,G__10771,G__10772,G__10773,G__10774,G__10775,G__10776) : self__.afn.call(null,G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769,G__10770,G__10771,G__10772,G__10773,G__10774,G__10775,G__10776));
});
var G__11121__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10777 = a;
var G__10778 = b;
var G__10779 = c;
var G__10780 = d;
var G__10781 = e;
var G__10782 = f;
var G__10783 = g;
var G__10784 = h;
var G__10785 = i;
var G__10786 = j;
var G__10787 = k;
var G__10788 = l;
var G__10789 = m;
var G__10790 = n;
var G__10791 = o;
var G__10792 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__10777,G__10778,G__10779,G__10780,G__10781,G__10782,G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792) : self__.afn.call(null,G__10777,G__10778,G__10779,G__10780,G__10781,G__10782,G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792));
});
var G__11121__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10793 = a;
var G__10794 = b;
var G__10795 = c;
var G__10796 = d;
var G__10797 = e;
var G__10798 = f;
var G__10799 = g;
var G__10800 = h;
var G__10801 = i;
var G__10802 = j;
var G__10803 = k;
var G__10804 = l;
var G__10805 = m;
var G__10806 = n;
var G__10807 = o;
var G__10808 = p;
var G__10809 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__10793,G__10794,G__10795,G__10796,G__10797,G__10798,G__10799,G__10800,G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809) : self__.afn.call(null,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798,G__10799,G__10800,G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809));
});
var G__11121__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10810 = a;
var G__10811 = b;
var G__10812 = c;
var G__10813 = d;
var G__10814 = e;
var G__10815 = f;
var G__10816 = g;
var G__10817 = h;
var G__10818 = i;
var G__10819 = j;
var G__10820 = k;
var G__10821 = l;
var G__10822 = m;
var G__10823 = n;
var G__10824 = o;
var G__10825 = p;
var G__10826 = q;
var G__10827 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817,G__10818,G__10819,G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827) : self__.afn.call(null,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817,G__10818,G__10819,G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827));
});
var G__11121__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10828 = a;
var G__10829 = b;
var G__10830 = c;
var G__10831 = d;
var G__10832 = e;
var G__10833 = f;
var G__10834 = g;
var G__10835 = h;
var G__10836 = i;
var G__10837 = j;
var G__10838 = k;
var G__10839 = l;
var G__10840 = m;
var G__10841 = n;
var G__10842 = o;
var G__10843 = p;
var G__10844 = q;
var G__10845 = r;
var G__10846 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__10828,G__10829,G__10830,G__10831,G__10832,G__10833,G__10834,G__10835,G__10836,G__10837,G__10838,G__10839,G__10840,G__10841,G__10842,G__10843,G__10844,G__10845,G__10846) : self__.afn.call(null,G__10828,G__10829,G__10830,G__10831,G__10832,G__10833,G__10834,G__10835,G__10836,G__10837,G__10838,G__10839,G__10840,G__10841,G__10842,G__10843,G__10844,G__10845,G__10846));
});
var G__11121__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10847 = a;
var G__10848 = b;
var G__10849 = c;
var G__10850 = d;
var G__10851 = e;
var G__10852 = f;
var G__10853 = g;
var G__10854 = h;
var G__10855 = i;
var G__10856 = j;
var G__10857 = k;
var G__10858 = l;
var G__10859 = m;
var G__10860 = n;
var G__10861 = o;
var G__10862 = p;
var G__10863 = q;
var G__10864 = r;
var G__10865 = s;
var G__10866 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__10847,G__10848,G__10849,G__10850,G__10851,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858,G__10859,G__10860,G__10861,G__10862,G__10863,G__10864,G__10865,G__10866) : self__.afn.call(null,G__10847,G__10848,G__10849,G__10850,G__10851,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858,G__10859,G__10860,G__10861,G__10862,G__10863,G__10864,G__10865,G__10866));
});
var G__11121__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10867 = self__.afn;
var G__10868 = a;
var G__10869 = b;
var G__10870 = c;
var G__10871 = d;
var G__10872 = e;
var G__10873 = f;
var G__10874 = g;
var G__10875 = h;
var G__10876 = i;
var G__10877 = j;
var G__10878 = k;
var G__10879 = l;
var G__10880 = m;
var G__10881 = n;
var G__10882 = o;
var G__10883 = p;
var G__10884 = q;
var G__10885 = r;
var G__10886 = s;
var G__10887 = t;
var G__10888 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10867,G__10868,G__10869,G__10870,G__10871,G__10872,G__10873,G__10874,G__10875,G__10876,G__10877,G__10878,G__10879,G__10880,G__10881,G__10882,G__10883,G__10884,G__10885,G__10886,G__10887,G__10888) : cljs.core.apply.call(null,G__10867,G__10868,G__10869,G__10870,G__10871,G__10872,G__10873,G__10874,G__10875,G__10876,G__10877,G__10878,G__10879,G__10880,G__10881,G__10882,G__10883,G__10884,G__10885,G__10886,G__10887,G__10888));
});
G__11121 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11121__1.call(this,self__);
case 2:
return G__11121__2.call(this,self__,a);
case 3:
return G__11121__3.call(this,self__,a,b);
case 4:
return G__11121__4.call(this,self__,a,b,c);
case 5:
return G__11121__5.call(this,self__,a,b,c,d);
case 6:
return G__11121__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11121__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11121__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11121__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11121__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11121__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11121__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11121__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11121__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11121__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11121__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11121__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11121__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11121__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11121__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11121__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11121__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11121.cljs$core$IFn$_invoke$arity$1 = G__11121__1;
G__11121.cljs$core$IFn$_invoke$arity$2 = G__11121__2;
G__11121.cljs$core$IFn$_invoke$arity$3 = G__11121__3;
G__11121.cljs$core$IFn$_invoke$arity$4 = G__11121__4;
G__11121.cljs$core$IFn$_invoke$arity$5 = G__11121__5;
G__11121.cljs$core$IFn$_invoke$arity$6 = G__11121__6;
G__11121.cljs$core$IFn$_invoke$arity$7 = G__11121__7;
G__11121.cljs$core$IFn$_invoke$arity$8 = G__11121__8;
G__11121.cljs$core$IFn$_invoke$arity$9 = G__11121__9;
G__11121.cljs$core$IFn$_invoke$arity$10 = G__11121__10;
G__11121.cljs$core$IFn$_invoke$arity$11 = G__11121__11;
G__11121.cljs$core$IFn$_invoke$arity$12 = G__11121__12;
G__11121.cljs$core$IFn$_invoke$arity$13 = G__11121__13;
G__11121.cljs$core$IFn$_invoke$arity$14 = G__11121__14;
G__11121.cljs$core$IFn$_invoke$arity$15 = G__11121__15;
G__11121.cljs$core$IFn$_invoke$arity$16 = G__11121__16;
G__11121.cljs$core$IFn$_invoke$arity$17 = G__11121__17;
G__11121.cljs$core$IFn$_invoke$arity$18 = G__11121__18;
G__11121.cljs$core$IFn$_invoke$arity$19 = G__11121__19;
G__11121.cljs$core$IFn$_invoke$arity$20 = G__11121__20;
G__11121.cljs$core$IFn$_invoke$arity$21 = G__11121__21;
G__11121.cljs$core$IFn$_invoke$arity$22 = G__11121__22;
return G__11121;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args10656){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10656)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__10889 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10889) : self__.afn.call(null,G__10889));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__10890 = a;
var G__10891 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10890,G__10891) : self__.afn.call(null,G__10890,G__10891));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__10892 = a;
var G__10893 = b;
var G__10894 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10892,G__10893,G__10894) : self__.afn.call(null,G__10892,G__10893,G__10894));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__10895 = a;
var G__10896 = b;
var G__10897 = c;
var G__10898 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10895,G__10896,G__10897,G__10898) : self__.afn.call(null,G__10895,G__10896,G__10897,G__10898));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__10899 = a;
var G__10900 = b;
var G__10901 = c;
var G__10902 = d;
var G__10903 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10899,G__10900,G__10901,G__10902,G__10903) : self__.afn.call(null,G__10899,G__10900,G__10901,G__10902,G__10903));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__10904 = a;
var G__10905 = b;
var G__10906 = c;
var G__10907 = d;
var G__10908 = e;
var G__10909 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10904,G__10905,G__10906,G__10907,G__10908,G__10909) : self__.afn.call(null,G__10904,G__10905,G__10906,G__10907,G__10908,G__10909));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__10910 = a;
var G__10911 = b;
var G__10912 = c;
var G__10913 = d;
var G__10914 = e;
var G__10915 = f;
var G__10916 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916) : self__.afn.call(null,G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__10917 = a;
var G__10918 = b;
var G__10919 = c;
var G__10920 = d;
var G__10921 = e;
var G__10922 = f;
var G__10923 = g;
var G__10924 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10917,G__10918,G__10919,G__10920,G__10921,G__10922,G__10923,G__10924) : self__.afn.call(null,G__10917,G__10918,G__10919,G__10920,G__10921,G__10922,G__10923,G__10924));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__10925 = a;
var G__10926 = b;
var G__10927 = c;
var G__10928 = d;
var G__10929 = e;
var G__10930 = f;
var G__10931 = g;
var G__10932 = h;
var G__10933 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10925,G__10926,G__10927,G__10928,G__10929,G__10930,G__10931,G__10932,G__10933) : self__.afn.call(null,G__10925,G__10926,G__10927,G__10928,G__10929,G__10930,G__10931,G__10932,G__10933));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__10934 = a;
var G__10935 = b;
var G__10936 = c;
var G__10937 = d;
var G__10938 = e;
var G__10939 = f;
var G__10940 = g;
var G__10941 = h;
var G__10942 = i;
var G__10943 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10934,G__10935,G__10936,G__10937,G__10938,G__10939,G__10940,G__10941,G__10942,G__10943) : self__.afn.call(null,G__10934,G__10935,G__10936,G__10937,G__10938,G__10939,G__10940,G__10941,G__10942,G__10943));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__10944 = a;
var G__10945 = b;
var G__10946 = c;
var G__10947 = d;
var G__10948 = e;
var G__10949 = f;
var G__10950 = g;
var G__10951 = h;
var G__10952 = i;
var G__10953 = j;
var G__10954 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950,G__10951,G__10952,G__10953,G__10954) : self__.afn.call(null,G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950,G__10951,G__10952,G__10953,G__10954));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__10955 = a;
var G__10956 = b;
var G__10957 = c;
var G__10958 = d;
var G__10959 = e;
var G__10960 = f;
var G__10961 = g;
var G__10962 = h;
var G__10963 = i;
var G__10964 = j;
var G__10965 = k;
var G__10966 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962,G__10963,G__10964,G__10965,G__10966) : self__.afn.call(null,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962,G__10963,G__10964,G__10965,G__10966));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__10967 = a;
var G__10968 = b;
var G__10969 = c;
var G__10970 = d;
var G__10971 = e;
var G__10972 = f;
var G__10973 = g;
var G__10974 = h;
var G__10975 = i;
var G__10976 = j;
var G__10977 = k;
var G__10978 = l;
var G__10979 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10967,G__10968,G__10969,G__10970,G__10971,G__10972,G__10973,G__10974,G__10975,G__10976,G__10977,G__10978,G__10979) : self__.afn.call(null,G__10967,G__10968,G__10969,G__10970,G__10971,G__10972,G__10973,G__10974,G__10975,G__10976,G__10977,G__10978,G__10979));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__10980 = a;
var G__10981 = b;
var G__10982 = c;
var G__10983 = d;
var G__10984 = e;
var G__10985 = f;
var G__10986 = g;
var G__10987 = h;
var G__10988 = i;
var G__10989 = j;
var G__10990 = k;
var G__10991 = l;
var G__10992 = m;
var G__10993 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10980,G__10981,G__10982,G__10983,G__10984,G__10985,G__10986,G__10987,G__10988,G__10989,G__10990,G__10991,G__10992,G__10993) : self__.afn.call(null,G__10980,G__10981,G__10982,G__10983,G__10984,G__10985,G__10986,G__10987,G__10988,G__10989,G__10990,G__10991,G__10992,G__10993));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__10994 = a;
var G__10995 = b;
var G__10996 = c;
var G__10997 = d;
var G__10998 = e;
var G__10999 = f;
var G__11000 = g;
var G__11001 = h;
var G__11002 = i;
var G__11003 = j;
var G__11004 = k;
var G__11005 = l;
var G__11006 = m;
var G__11007 = n;
var G__11008 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10994,G__10995,G__10996,G__10997,G__10998,G__10999,G__11000,G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007,G__11008) : self__.afn.call(null,G__10994,G__10995,G__10996,G__10997,G__10998,G__10999,G__11000,G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007,G__11008));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__11009 = a;
var G__11010 = b;
var G__11011 = c;
var G__11012 = d;
var G__11013 = e;
var G__11014 = f;
var G__11015 = g;
var G__11016 = h;
var G__11017 = i;
var G__11018 = j;
var G__11019 = k;
var G__11020 = l;
var G__11021 = m;
var G__11022 = n;
var G__11023 = o;
var G__11024 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11009,G__11010,G__11011,G__11012,G__11013,G__11014,G__11015,G__11016,G__11017,G__11018,G__11019,G__11020,G__11021,G__11022,G__11023,G__11024) : self__.afn.call(null,G__11009,G__11010,G__11011,G__11012,G__11013,G__11014,G__11015,G__11016,G__11017,G__11018,G__11019,G__11020,G__11021,G__11022,G__11023,G__11024));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__11025 = a;
var G__11026 = b;
var G__11027 = c;
var G__11028 = d;
var G__11029 = e;
var G__11030 = f;
var G__11031 = g;
var G__11032 = h;
var G__11033 = i;
var G__11034 = j;
var G__11035 = k;
var G__11036 = l;
var G__11037 = m;
var G__11038 = n;
var G__11039 = o;
var G__11040 = p;
var G__11041 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11025,G__11026,G__11027,G__11028,G__11029,G__11030,G__11031,G__11032,G__11033,G__11034,G__11035,G__11036,G__11037,G__11038,G__11039,G__11040,G__11041) : self__.afn.call(null,G__11025,G__11026,G__11027,G__11028,G__11029,G__11030,G__11031,G__11032,G__11033,G__11034,G__11035,G__11036,G__11037,G__11038,G__11039,G__11040,G__11041));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__11042 = a;
var G__11043 = b;
var G__11044 = c;
var G__11045 = d;
var G__11046 = e;
var G__11047 = f;
var G__11048 = g;
var G__11049 = h;
var G__11050 = i;
var G__11051 = j;
var G__11052 = k;
var G__11053 = l;
var G__11054 = m;
var G__11055 = n;
var G__11056 = o;
var G__11057 = p;
var G__11058 = q;
var G__11059 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11042,G__11043,G__11044,G__11045,G__11046,G__11047,G__11048,G__11049,G__11050,G__11051,G__11052,G__11053,G__11054,G__11055,G__11056,G__11057,G__11058,G__11059) : self__.afn.call(null,G__11042,G__11043,G__11044,G__11045,G__11046,G__11047,G__11048,G__11049,G__11050,G__11051,G__11052,G__11053,G__11054,G__11055,G__11056,G__11057,G__11058,G__11059));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__11060 = a;
var G__11061 = b;
var G__11062 = c;
var G__11063 = d;
var G__11064 = e;
var G__11065 = f;
var G__11066 = g;
var G__11067 = h;
var G__11068 = i;
var G__11069 = j;
var G__11070 = k;
var G__11071 = l;
var G__11072 = m;
var G__11073 = n;
var G__11074 = o;
var G__11075 = p;
var G__11076 = q;
var G__11077 = r;
var G__11078 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11060,G__11061,G__11062,G__11063,G__11064,G__11065,G__11066,G__11067,G__11068,G__11069,G__11070,G__11071,G__11072,G__11073,G__11074,G__11075,G__11076,G__11077,G__11078) : self__.afn.call(null,G__11060,G__11061,G__11062,G__11063,G__11064,G__11065,G__11066,G__11067,G__11068,G__11069,G__11070,G__11071,G__11072,G__11073,G__11074,G__11075,G__11076,G__11077,G__11078));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__11079 = a;
var G__11080 = b;
var G__11081 = c;
var G__11082 = d;
var G__11083 = e;
var G__11084 = f;
var G__11085 = g;
var G__11086 = h;
var G__11087 = i;
var G__11088 = j;
var G__11089 = k;
var G__11090 = l;
var G__11091 = m;
var G__11092 = n;
var G__11093 = o;
var G__11094 = p;
var G__11095 = q;
var G__11096 = r;
var G__11097 = s;
var G__11098 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11079,G__11080,G__11081,G__11082,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090,G__11091,G__11092,G__11093,G__11094,G__11095,G__11096,G__11097,G__11098) : self__.afn.call(null,G__11079,G__11080,G__11081,G__11082,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090,G__11091,G__11092,G__11093,G__11094,G__11095,G__11096,G__11097,G__11098));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__11099 = self__.afn;
var G__11100 = a;
var G__11101 = b;
var G__11102 = c;
var G__11103 = d;
var G__11104 = e;
var G__11105 = f;
var G__11106 = g;
var G__11107 = h;
var G__11108 = i;
var G__11109 = j;
var G__11110 = k;
var G__11111 = l;
var G__11112 = m;
var G__11113 = n;
var G__11114 = o;
var G__11115 = p;
var G__11116 = q;
var G__11117 = r;
var G__11118 = s;
var G__11119 = t;
var G__11120 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11099,G__11100,G__11101,G__11102,G__11103,G__11104,G__11105,G__11106,G__11107,G__11108,G__11109,G__11110,G__11111,G__11112,G__11113,G__11114,G__11115,G__11116,G__11117,G__11118,G__11119,G__11120) : cljs.core.apply.call(null,G__11099,G__11100,G__11101,G__11102,G__11103,G__11104,G__11105,G__11106,G__11107,G__11108,G__11109,G__11110,G__11111,G__11112,G__11113,G__11114,G__11115,G__11116,G__11117,G__11118,G__11119,G__11120));
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__11125 = o;
if(G__11125){
var bit__4757__auto__ = (G__11125.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4757__auto__) || (G__11125.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__11125.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__11125);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__11125);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__4064__auto__ = !((o == null));
if(and__4064__auto__){
var G__11129 = o;
if(G__11129){
var bit__4757__auto__ = (G__11129.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4757__auto__) || (G__11129.cljs$core$IMeta$)){
return true;
} else {
if((!G__11129.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11129);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11129);
}
} else {
return and__4064__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__11132__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__11133 = ret;
var G__11134 = cljs.core.first(ks);
var G__11135 = cljs.core.next(ks);
coll = G__11133;
k = G__11134;
ks = G__11135;
continue;
} else {
return ret;
}
}
break;
}
};
var G__11132 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11136__i = 0, G__11136__a = new Array(arguments.length -  2);
while (G__11136__i < G__11136__a.length) {G__11136__a[G__11136__i] = arguments[G__11136__i + 2]; ++G__11136__i;}
  ks = new cljs.core.IndexedSeq(G__11136__a,0);
} 
return G__11132__delegate.call(this,coll,k,ks);};
G__11132.cljs$lang$maxFixedArity = 2;
G__11132.cljs$lang$applyTo = (function (arglist__11137){
var coll = cljs.core.first(arglist__11137);
arglist__11137 = cljs.core.next(arglist__11137);
var k = cljs.core.first(arglist__11137);
var ks = cljs.core.rest(arglist__11137);
return G__11132__delegate(coll,k,ks);
});
G__11132.cljs$core$IFn$_invoke$arity$variadic = G__11132__delegate;
return G__11132;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__11138 = null;
if (arguments.length > 2) {
var G__11139__i = 0, G__11139__a = new Array(arguments.length -  2);
while (G__11139__i < G__11139__a.length) {G__11139__a[G__11139__i] = arguments[G__11139__i + 2]; ++G__11139__i;}
G__11138 = new cljs.core.IndexedSeq(G__11139__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__11138);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11141 = x;
if(G__11141){
var bit__4757__auto__ = (G__11141.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4757__auto__) || (G__11141.cljs$core$ICollection$)){
return true;
} else {
if((!G__11141.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__11141);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__11141);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11143 = x;
if(G__11143){
var bit__4757__auto__ = (G__11143.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4757__auto__) || (G__11143.cljs$core$ISet$)){
return true;
} else {
if((!G__11143.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__11143);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__11143);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__11145 = x;
if(G__11145){
var bit__4757__auto__ = (G__11145.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4757__auto__) || (G__11145.cljs$core$IAssociative$)){
return true;
} else {
if((!G__11145.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__11145);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__11145);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__11147 = x;
if(G__11147){
var bit__4757__auto__ = (G__11147.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4757__auto__) || (G__11147.cljs$core$ISequential$)){
return true;
} else {
if((!G__11147.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__11147);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__11147);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__11149 = x;
if(G__11149){
var bit__4757__auto__ = (G__11149.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4757__auto__) || (G__11149.cljs$core$ISorted$)){
return true;
} else {
if((!G__11149.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__11149);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__11149);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__11151 = x;
if(G__11151){
var bit__4757__auto__ = (G__11151.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4757__auto__) || (G__11151.cljs$core$IReduce$)){
return true;
} else {
if((!G__11151.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__11151);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__11151);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11153 = x;
if(G__11153){
var bit__4757__auto__ = (G__11153.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4757__auto__) || (G__11153.cljs$core$IMap$)){
return true;
} else {
if((!G__11153.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__11153);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__11153);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__11155 = x;
if(G__11155){
var bit__4757__auto__ = (G__11155.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4757__auto__) || (G__11155.cljs$core$IVector$)){
return true;
} else {
if((!G__11155.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__11155);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__11155);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__11157 = x;
if(G__11157){
var bit__4750__auto__ = (G__11157.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4750__auto__) || (G__11157.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj11163 = {};
return obj11163;
});
var cljs$core$js_obj__1 = (function() { 
var G__11166__delegate = function (keyvals){
var G__11164 = goog.object.create;
var G__11165 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__11164,G__11165) : cljs.core.apply.call(null,G__11164,G__11165));
};
var G__11166 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11167__i = 0, G__11167__a = new Array(arguments.length -  0);
while (G__11167__i < G__11167__a.length) {G__11167__a[G__11167__i] = arguments[G__11167__i + 0]; ++G__11167__i;}
  keyvals = new cljs.core.IndexedSeq(G__11167__a,0);
} 
return G__11166__delegate.call(this,keyvals);};
G__11166.cljs$lang$maxFixedArity = 0;
G__11166.cljs$lang$applyTo = (function (arglist__11168){
var keyvals = cljs.core.seq(arglist__11168);
return G__11166__delegate(keyvals);
});
G__11166.cljs$core$IFn$_invoke$arity$variadic = G__11166__delegate;
return G__11166;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__11169 = null;
if (arguments.length > 0) {
var G__11170__i = 0, G__11170__a = new Array(arguments.length -  0);
while (G__11170__i < G__11170__a.length) {G__11170__a[G__11170__i] = arguments[G__11170__i + 0]; ++G__11170__i;}
G__11169 = new cljs.core.IndexedSeq(G__11170__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__11169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__11173_11175 = obj;
var G__11174_11176 = ((function (G__11173_11175,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__11173_11175,keys))
;
goog.object.forEach(G__11173_11175,G__11174_11176);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__11177 = (i__$1 + (1));
var G__11178 = (j__$1 + (1));
var G__11179 = (len__$1 - (1));
i__$1 = G__11177;
j__$1 = G__11178;
len__$1 = G__11179;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__11180 = (i__$1 - (1));
var G__11181 = (j__$1 - (1));
var G__11182 = (len__$1 - (1));
i__$1 = G__11180;
j__$1 = G__11181;
len__$1 = G__11182;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj11184 = {};
return obj11184;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__11186 = s;
if(G__11186){
var bit__4757__auto__ = (G__11186.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4757__auto__) || (G__11186.cljs$core$ISeq$)){
return true;
} else {
if((!G__11186.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11186);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11186);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__11188 = s;
if(G__11188){
var bit__4757__auto__ = (G__11188.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4757__auto__) || (G__11188.cljs$core$ISeqable$)){
return true;
} else {
if((!G__11188.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__11188);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__11188);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__4076__auto__ = cljs.core.fn_QMARK_(f);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var G__11192 = f;
if(G__11192){
var bit__4757__auto__ = (G__11192.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4757__auto__) || (G__11192.cljs$core$IFn$)){
return true;
} else {
if((!G__11192.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__11192);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__11192);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__11205 = n;
return isNaN(G__11205);
})())) && (!((n === Infinity))) && (((function (){var G__11206 = n;
return parseFloat(G__11206);
})() === (function (){var G__11207 = n;
var G__11208 = (10);
return parseInt(G__11207,G__11208);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__11209__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__11210 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__11211 = etc;
s = G__11210;
xs = G__11211;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__11209 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11212__i = 0, G__11212__a = new Array(arguments.length -  2);
while (G__11212__i < G__11212__a.length) {G__11212__a[G__11212__i] = arguments[G__11212__i + 2]; ++G__11212__i;}
  more = new cljs.core.IndexedSeq(G__11212__a,0);
} 
return G__11209__delegate.call(this,x,y,more);};
G__11209.cljs$lang$maxFixedArity = 2;
G__11209.cljs$lang$applyTo = (function (arglist__11213){
var x = cljs.core.first(arglist__11213);
arglist__11213 = cljs.core.next(arglist__11213);
var y = cljs.core.first(arglist__11213);
var more = cljs.core.rest(arglist__11213);
return G__11209__delegate(x,y,more);
});
G__11209.cljs$core$IFn$_invoke$arity$variadic = G__11209__delegate;
return G__11209;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__11214 = null;
if (arguments.length > 2) {
var G__11215__i = 0, G__11215__a = new Array(arguments.length -  2);
while (G__11215__i < G__11215__a.length) {G__11215__a[G__11215__i] = arguments[G__11215__i + 2]; ++G__11215__i;}
G__11214 = new cljs.core.IndexedSeq(G__11215__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11214);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__11219 = x;
if(G__11219){
var bit__4750__auto__ = (G__11219.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4750__auto__) || (G__11219.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__11220 = x;
var G__11221 = y;
return goog.array.defaultCompare(G__11220,G__11221);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__11226 = xs;
var G__11227 = ys;
var G__11228 = len;
var G__11229 = (n + (1));
xs = G__11226;
ys = G__11227;
len = G__11228;
n = G__11229;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__11234 = x;
var G__11235 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11234,G__11235) : f.call(null,G__11234,G__11235));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__11236 = y;
var G__11237 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11236,G__11237) : f.call(null,G__11236,G__11237));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__11243 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11243) : cljs.core.to_array.call(null,G__11243));
})();
var G__11244_11246 = a;
var G__11245_11247 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__11244_11246,G__11245_11247);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__11253 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11253) : keyfn.call(null,G__11253));
})(),(function (){var G__11254 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11254) : keyfn.call(null,G__11254));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
var G__11260 = f;
var G__11261 = cljs.core.first(s);
var G__11262 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11260,G__11261,G__11262) : cljs.core.reduce.call(null,G__11260,G__11261,G__11262));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__11263 = val__$1;
var G__11264 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11263,G__11264) : f.call(null,G__11263,G__11264));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11265 = nval;
var G__11266 = cljs.core.next(coll__$1);
val__$1 = G__11265;
coll__$1 = G__11266;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__11270 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11270) : cljs.core.to_array.call(null,G__11270));
})();
var G__11271_11273 = a;
goog.array.shuffle(G__11271_11273);

var G__11272 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__11272) : cljs.core.vec.call(null,G__11272));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__11276 = coll;
if(G__11276){
var bit__4750__auto__ = (G__11276.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4750__auto__) || (G__11276.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__11277 = coll;
if(G__11277){
var bit__4750__auto__ = (G__11277.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4750__auto__) || (G__11277.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__11286 = null;
var G__11286__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__11286__1 = (function (x){
var G__11283 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__11283) : cf.call(null,G__11283));
});
var G__11286__2 = (function (x,y){
var G__11284 = x;
var G__11285 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11284,G__11285) : f.call(null,G__11284,G__11285));
});
G__11286 = function(x,y){
switch(arguments.length){
case 0:
return G__11286__0.call(this);
case 1:
return G__11286__1.call(this,x);
case 2:
return G__11286__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11286.cljs$core$IFn$_invoke$arity$0 = G__11286__0;
G__11286.cljs$core$IFn$_invoke$arity$1 = G__11286__1;
G__11286.cljs$core$IFn$_invoke$arity$2 = G__11286__2;
return G__11286;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__11293 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11293) : xform.call(null,G__11293));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__11294 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__11294) : f__$1.call(null,G__11294));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__11295__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__11295 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11296__i = 0, G__11296__a = new Array(arguments.length -  2);
while (G__11296__i < G__11296__a.length) {G__11296__a[G__11296__i] = arguments[G__11296__i + 2]; ++G__11296__i;}
  more = new cljs.core.IndexedSeq(G__11296__a,0);
} 
return G__11295__delegate.call(this,x,y,more);};
G__11295.cljs$lang$maxFixedArity = 2;
G__11295.cljs$lang$applyTo = (function (arglist__11297){
var x = cljs.core.first(arglist__11297);
arglist__11297 = cljs.core.next(arglist__11297);
var y = cljs.core.first(arglist__11297);
var more = cljs.core.rest(arglist__11297);
return G__11295__delegate(x,y,more);
});
G__11295.cljs$core$IFn$_invoke$arity$variadic = G__11295__delegate;
return G__11295;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__11298 = null;
if (arguments.length > 2) {
var G__11299__i = 0, G__11299__a = new Array(arguments.length -  2);
while (G__11299__i < G__11299__a.length) {G__11299__a[G__11299__i] = arguments[G__11299__i + 2]; ++G__11299__i;}
G__11298 = new cljs.core.IndexedSeq(G__11299__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__11300__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__11300 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11301__i = 0, G__11301__a = new Array(arguments.length -  2);
while (G__11301__i < G__11301__a.length) {G__11301__a[G__11301__i] = arguments[G__11301__i + 2]; ++G__11301__i;}
  more = new cljs.core.IndexedSeq(G__11301__a,0);
} 
return G__11300__delegate.call(this,x,y,more);};
G__11300.cljs$lang$maxFixedArity = 2;
G__11300.cljs$lang$applyTo = (function (arglist__11302){
var x = cljs.core.first(arglist__11302);
arglist__11302 = cljs.core.next(arglist__11302);
var y = cljs.core.first(arglist__11302);
var more = cljs.core.rest(arglist__11302);
return G__11300__delegate(x,y,more);
});
G__11300.cljs$core$IFn$_invoke$arity$variadic = G__11300__delegate;
return G__11300;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__11303 = null;
if (arguments.length > 2) {
var G__11304__i = 0, G__11304__a = new Array(arguments.length -  2);
while (G__11304__i < G__11304__a.length) {G__11304__a[G__11304__i] = arguments[G__11304__i + 2]; ++G__11304__i;}
G__11303 = new cljs.core.IndexedSeq(G__11304__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11303);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__11305__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__11305 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11306__i = 0, G__11306__a = new Array(arguments.length -  2);
while (G__11306__i < G__11306__a.length) {G__11306__a[G__11306__i] = arguments[G__11306__i + 2]; ++G__11306__i;}
  more = new cljs.core.IndexedSeq(G__11306__a,0);
} 
return G__11305__delegate.call(this,x,y,more);};
G__11305.cljs$lang$maxFixedArity = 2;
G__11305.cljs$lang$applyTo = (function (arglist__11307){
var x = cljs.core.first(arglist__11307);
arglist__11307 = cljs.core.next(arglist__11307);
var y = cljs.core.first(arglist__11307);
var more = cljs.core.rest(arglist__11307);
return G__11305__delegate(x,y,more);
});
G__11305.cljs$core$IFn$_invoke$arity$variadic = G__11305__delegate;
return G__11305;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__11308 = null;
if (arguments.length > 2) {
var G__11309__i = 0, G__11309__a = new Array(arguments.length -  2);
while (G__11309__i < G__11309__a.length) {G__11309__a[G__11309__i] = arguments[G__11309__i + 2]; ++G__11309__i;}
G__11308 = new cljs.core.IndexedSeq(G__11309__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11308);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__11314__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__11314 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11315__i = 0, G__11315__a = new Array(arguments.length -  2);
while (G__11315__i < G__11315__a.length) {G__11315__a[G__11315__i] = arguments[G__11315__i + 2]; ++G__11315__i;}
  more = new cljs.core.IndexedSeq(G__11315__a,0);
} 
return G__11314__delegate.call(this,x,y,more);};
G__11314.cljs$lang$maxFixedArity = 2;
G__11314.cljs$lang$applyTo = (function (arglist__11316){
var x = cljs.core.first(arglist__11316);
arglist__11316 = cljs.core.next(arglist__11316);
var y = cljs.core.first(arglist__11316);
var more = cljs.core.rest(arglist__11316);
return G__11314__delegate(x,y,more);
});
G__11314.cljs$core$IFn$_invoke$arity$variadic = G__11314__delegate;
return G__11314;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__11317 = null;
if (arguments.length > 2) {
var G__11318__i = 0, G__11318__a = new Array(arguments.length -  2);
while (G__11318__i < G__11318__a.length) {G__11318__a[G__11318__i] = arguments[G__11318__i + 2]; ++G__11318__i;}
G__11317 = new cljs.core.IndexedSeq(G__11318__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11317);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__11319__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__11320 = y;
var G__11321 = cljs.core.first(more);
var G__11322 = cljs.core.next(more);
x = G__11320;
y = G__11321;
more = G__11322;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11319 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11323__i = 0, G__11323__a = new Array(arguments.length -  2);
while (G__11323__i < G__11323__a.length) {G__11323__a[G__11323__i] = arguments[G__11323__i + 2]; ++G__11323__i;}
  more = new cljs.core.IndexedSeq(G__11323__a,0);
} 
return G__11319__delegate.call(this,x,y,more);};
G__11319.cljs$lang$maxFixedArity = 2;
G__11319.cljs$lang$applyTo = (function (arglist__11324){
var x = cljs.core.first(arglist__11324);
arglist__11324 = cljs.core.next(arglist__11324);
var y = cljs.core.first(arglist__11324);
var more = cljs.core.rest(arglist__11324);
return G__11319__delegate(x,y,more);
});
G__11319.cljs$core$IFn$_invoke$arity$variadic = G__11319__delegate;
return G__11319;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__11325 = null;
if (arguments.length > 2) {
var G__11326__i = 0, G__11326__a = new Array(arguments.length -  2);
while (G__11326__i < G__11326__a.length) {G__11326__a[G__11326__i] = arguments[G__11326__i + 2]; ++G__11326__i;}
G__11325 = new cljs.core.IndexedSeq(G__11326__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11325);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__11327__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__11328 = y;
var G__11329 = cljs.core.first(more);
var G__11330 = cljs.core.next(more);
x = G__11328;
y = G__11329;
more = G__11330;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11327 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11331__i = 0, G__11331__a = new Array(arguments.length -  2);
while (G__11331__i < G__11331__a.length) {G__11331__a[G__11331__i] = arguments[G__11331__i + 2]; ++G__11331__i;}
  more = new cljs.core.IndexedSeq(G__11331__a,0);
} 
return G__11327__delegate.call(this,x,y,more);};
G__11327.cljs$lang$maxFixedArity = 2;
G__11327.cljs$lang$applyTo = (function (arglist__11332){
var x = cljs.core.first(arglist__11332);
arglist__11332 = cljs.core.next(arglist__11332);
var y = cljs.core.first(arglist__11332);
var more = cljs.core.rest(arglist__11332);
return G__11327__delegate(x,y,more);
});
G__11327.cljs$core$IFn$_invoke$arity$variadic = G__11327__delegate;
return G__11327;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__11333 = null;
if (arguments.length > 2) {
var G__11334__i = 0, G__11334__a = new Array(arguments.length -  2);
while (G__11334__i < G__11334__a.length) {G__11334__a[G__11334__i] = arguments[G__11334__i + 2]; ++G__11334__i;}
G__11333 = new cljs.core.IndexedSeq(G__11334__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11333);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__11335__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__11336 = y;
var G__11337 = cljs.core.first(more);
var G__11338 = cljs.core.next(more);
x = G__11336;
y = G__11337;
more = G__11338;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11335 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11339__i = 0, G__11339__a = new Array(arguments.length -  2);
while (G__11339__i < G__11339__a.length) {G__11339__a[G__11339__i] = arguments[G__11339__i + 2]; ++G__11339__i;}
  more = new cljs.core.IndexedSeq(G__11339__a,0);
} 
return G__11335__delegate.call(this,x,y,more);};
G__11335.cljs$lang$maxFixedArity = 2;
G__11335.cljs$lang$applyTo = (function (arglist__11340){
var x = cljs.core.first(arglist__11340);
arglist__11340 = cljs.core.next(arglist__11340);
var y = cljs.core.first(arglist__11340);
var more = cljs.core.rest(arglist__11340);
return G__11335__delegate(x,y,more);
});
G__11335.cljs$core$IFn$_invoke$arity$variadic = G__11335__delegate;
return G__11335;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__11341 = null;
if (arguments.length > 2) {
var G__11342__i = 0, G__11342__a = new Array(arguments.length -  2);
while (G__11342__i < G__11342__a.length) {G__11342__a[G__11342__i] = arguments[G__11342__i + 2]; ++G__11342__i;}
G__11341 = new cljs.core.IndexedSeq(G__11342__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__11343__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__11344 = y;
var G__11345 = cljs.core.first(more);
var G__11346 = cljs.core.next(more);
x = G__11344;
y = G__11345;
more = G__11346;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11343 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11347__i = 0, G__11347__a = new Array(arguments.length -  2);
while (G__11347__i < G__11347__a.length) {G__11347__a[G__11347__i] = arguments[G__11347__i + 2]; ++G__11347__i;}
  more = new cljs.core.IndexedSeq(G__11347__a,0);
} 
return G__11343__delegate.call(this,x,y,more);};
G__11343.cljs$lang$maxFixedArity = 2;
G__11343.cljs$lang$applyTo = (function (arglist__11348){
var x = cljs.core.first(arglist__11348);
arglist__11348 = cljs.core.next(arglist__11348);
var y = cljs.core.first(arglist__11348);
var more = cljs.core.rest(arglist__11348);
return G__11343__delegate(x,y,more);
});
G__11343.cljs$core$IFn$_invoke$arity$variadic = G__11343__delegate;
return G__11343;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__11349 = null;
if (arguments.length > 2) {
var G__11350__i = 0, G__11350__a = new Array(arguments.length -  2);
while (G__11350__i < G__11350__a.length) {G__11350__a[G__11350__i] = arguments[G__11350__i + 2]; ++G__11350__i;}
G__11349 = new cljs.core.IndexedSeq(G__11350__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__4393__auto__ = x;
var y__4394__auto__ = y;
return ((x__4393__auto__ > y__4394__auto__) ? x__4393__auto__ : y__4394__auto__);
});
var cljs$core$max__3 = (function() { 
var G__11351__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__4393__auto__ = x;
var y__4394__auto__ = y;
return ((x__4393__auto__ > y__4394__auto__) ? x__4393__auto__ : y__4394__auto__);
})(),more);
};
var G__11351 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11352__i = 0, G__11352__a = new Array(arguments.length -  2);
while (G__11352__i < G__11352__a.length) {G__11352__a[G__11352__i] = arguments[G__11352__i + 2]; ++G__11352__i;}
  more = new cljs.core.IndexedSeq(G__11352__a,0);
} 
return G__11351__delegate.call(this,x,y,more);};
G__11351.cljs$lang$maxFixedArity = 2;
G__11351.cljs$lang$applyTo = (function (arglist__11353){
var x = cljs.core.first(arglist__11353);
arglist__11353 = cljs.core.next(arglist__11353);
var y = cljs.core.first(arglist__11353);
var more = cljs.core.rest(arglist__11353);
return G__11351__delegate(x,y,more);
});
G__11351.cljs$core$IFn$_invoke$arity$variadic = G__11351__delegate;
return G__11351;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__11354 = null;
if (arguments.length > 2) {
var G__11355__i = 0, G__11355__a = new Array(arguments.length -  2);
while (G__11355__i < G__11355__a.length) {G__11355__a[G__11355__i] = arguments[G__11355__i + 2]; ++G__11355__i;}
G__11354 = new cljs.core.IndexedSeq(G__11355__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__4400__auto__ = x;
var y__4401__auto__ = y;
return ((x__4400__auto__ < y__4401__auto__) ? x__4400__auto__ : y__4401__auto__);
});
var cljs$core$min__3 = (function() { 
var G__11356__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__4400__auto__ = x;
var y__4401__auto__ = y;
return ((x__4400__auto__ < y__4401__auto__) ? x__4400__auto__ : y__4401__auto__);
})(),more);
};
var G__11356 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11357__i = 0, G__11357__a = new Array(arguments.length -  2);
while (G__11357__i < G__11357__a.length) {G__11357__a[G__11357__i] = arguments[G__11357__i + 2]; ++G__11357__i;}
  more = new cljs.core.IndexedSeq(G__11357__a,0);
} 
return G__11356__delegate.call(this,x,y,more);};
G__11356.cljs$lang$maxFixedArity = 2;
G__11356.cljs$lang$applyTo = (function (arglist__11358){
var x = cljs.core.first(arglist__11358);
arglist__11358 = cljs.core.next(arglist__11358);
var y = cljs.core.first(arglist__11358);
var more = cljs.core.rest(arglist__11358);
return G__11356__delegate(x,y,more);
});
G__11356.cljs$core$IFn$_invoke$arity$variadic = G__11356__delegate;
return G__11356;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__11359 = null;
if (arguments.length > 2) {
var G__11360__i = 0, G__11360__a = new Array(arguments.length -  2);
while (G__11360__i < G__11360__a.length) {G__11360__a[G__11360__i] = arguments[G__11360__i + 2]; ++G__11360__i;}
G__11359 = new cljs.core.IndexedSeq(G__11360__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__11361__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__11361 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11362__i = 0, G__11362__a = new Array(arguments.length -  2);
while (G__11362__i < G__11362__a.length) {G__11362__a[G__11362__i] = arguments[G__11362__i + 2]; ++G__11362__i;}
  more = new cljs.core.IndexedSeq(G__11362__a,0);
} 
return G__11361__delegate.call(this,x,y,more);};
G__11361.cljs$lang$maxFixedArity = 2;
G__11361.cljs$lang$applyTo = (function (arglist__11363){
var x = cljs.core.first(arglist__11363);
arglist__11363 = cljs.core.next(arglist__11363);
var y = cljs.core.first(arglist__11363);
var more = cljs.core.rest(arglist__11363);
return G__11361__delegate(x,y,more);
});
G__11361.cljs$core$IFn$_invoke$arity$variadic = G__11361__delegate;
return G__11361;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__11364 = null;
if (arguments.length > 2) {
var G__11365__i = 0, G__11365__a = new Array(arguments.length -  2);
while (G__11365__i < G__11365__a.length) {G__11365__a[G__11365__i] = arguments[G__11365__i + 2]; ++G__11365__i;}
G__11364 = new cljs.core.IndexedSeq(G__11365__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11364);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__11366__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__11366 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11367__i = 0, G__11367__a = new Array(arguments.length -  2);
while (G__11367__i < G__11367__a.length) {G__11367__a[G__11367__i] = arguments[G__11367__i + 2]; ++G__11367__i;}
  more = new cljs.core.IndexedSeq(G__11367__a,0);
} 
return G__11366__delegate.call(this,x,y,more);};
G__11366.cljs$lang$maxFixedArity = 2;
G__11366.cljs$lang$applyTo = (function (arglist__11368){
var x = cljs.core.first(arglist__11368);
arglist__11368 = cljs.core.next(arglist__11368);
var y = cljs.core.first(arglist__11368);
var more = cljs.core.rest(arglist__11368);
return G__11366__delegate(x,y,more);
});
G__11366.cljs$core$IFn$_invoke$arity$variadic = G__11366__delegate;
return G__11366;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__11369 = null;
if (arguments.length > 2) {
var G__11370__i = 0, G__11370__a = new Array(arguments.length -  2);
while (G__11370__i < G__11370__a.length) {G__11370__a[G__11370__i] = arguments[G__11370__i + 2]; ++G__11370__i;}
G__11369 = new cljs.core.IndexedSeq(G__11370__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__11375__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__11375 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11376__i = 0, G__11376__a = new Array(arguments.length -  2);
while (G__11376__i < G__11376__a.length) {G__11376__a[G__11376__i] = arguments[G__11376__i + 2]; ++G__11376__i;}
  more = new cljs.core.IndexedSeq(G__11376__a,0);
} 
return G__11375__delegate.call(this,x,y,more);};
G__11375.cljs$lang$maxFixedArity = 2;
G__11375.cljs$lang$applyTo = (function (arglist__11377){
var x = cljs.core.first(arglist__11377);
arglist__11377 = cljs.core.next(arglist__11377);
var y = cljs.core.first(arglist__11377);
var more = cljs.core.rest(arglist__11377);
return G__11375__delegate(x,y,more);
});
G__11375.cljs$core$IFn$_invoke$arity$variadic = G__11375__delegate;
return G__11375;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__11378 = null;
if (arguments.length > 2) {
var G__11379__i = 0, G__11379__a = new Array(arguments.length -  2);
while (G__11379__i < G__11379__a.length) {G__11379__a[G__11379__i] = arguments[G__11379__i + 2]; ++G__11379__i;}
G__11378 = new cljs.core.IndexedSeq(G__11379__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11378);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__11380__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__11380 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11381__i = 0, G__11381__a = new Array(arguments.length -  2);
while (G__11381__i < G__11381__a.length) {G__11381__a[G__11381__i] = arguments[G__11381__i + 2]; ++G__11381__i;}
  more = new cljs.core.IndexedSeq(G__11381__a,0);
} 
return G__11380__delegate.call(this,x,y,more);};
G__11380.cljs$lang$maxFixedArity = 2;
G__11380.cljs$lang$applyTo = (function (arglist__11382){
var x = cljs.core.first(arglist__11382);
arglist__11382 = cljs.core.next(arglist__11382);
var y = cljs.core.first(arglist__11382);
var more = cljs.core.rest(arglist__11382);
return G__11380__delegate(x,y,more);
});
G__11380.cljs$core$IFn$_invoke$arity$variadic = G__11380__delegate;
return G__11380;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__11383 = null;
if (arguments.length > 2) {
var G__11384__i = 0, G__11384__a = new Array(arguments.length -  2);
while (G__11384__i < G__11384__a.length) {G__11384__a[G__11384__i] = arguments[G__11384__i + 2]; ++G__11384__i;}
G__11383 = new cljs.core.IndexedSeq(G__11384__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11383);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__11385__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__11385 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11386__i = 0, G__11386__a = new Array(arguments.length -  2);
while (G__11386__i < G__11386__a.length) {G__11386__a[G__11386__i] = arguments[G__11386__i + 2]; ++G__11386__i;}
  more = new cljs.core.IndexedSeq(G__11386__a,0);
} 
return G__11385__delegate.call(this,x,y,more);};
G__11385.cljs$lang$maxFixedArity = 2;
G__11385.cljs$lang$applyTo = (function (arglist__11387){
var x = cljs.core.first(arglist__11387);
arglist__11387 = cljs.core.next(arglist__11387);
var y = cljs.core.first(arglist__11387);
var more = cljs.core.rest(arglist__11387);
return G__11385__delegate(x,y,more);
});
G__11385.cljs$core$IFn$_invoke$arity$variadic = G__11385__delegate;
return G__11385;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__11388 = null;
if (arguments.length > 2) {
var G__11389__i = 0, G__11389__a = new Array(arguments.length -  2);
while (G__11389__i < G__11389__a.length) {G__11389__a[G__11389__i] = arguments[G__11389__i + 2]; ++G__11389__i;}
G__11388 = new cljs.core.IndexedSeq(G__11389__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__11392 = x;
var G__11393 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__11392,G__11393) : cljs.core.mod.call(null,G__11392,G__11393));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__11394__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__11394 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11395__i = 0, G__11395__a = new Array(arguments.length -  2);
while (G__11395__i < G__11395__a.length) {G__11395__a[G__11395__i] = arguments[G__11395__i + 2]; ++G__11395__i;}
  more = new cljs.core.IndexedSeq(G__11395__a,0);
} 
return G__11394__delegate.call(this,x,y,more);};
G__11394.cljs$lang$maxFixedArity = 2;
G__11394.cljs$lang$applyTo = (function (arglist__11396){
var x = cljs.core.first(arglist__11396);
arglist__11396 = cljs.core.next(arglist__11396);
var y = cljs.core.first(arglist__11396);
var more = cljs.core.rest(arglist__11396);
return G__11394__delegate(x,y,more);
});
G__11394.cljs$core$IFn$_invoke$arity$variadic = G__11394__delegate;
return G__11394;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__11397 = null;
if (arguments.length > 2) {
var G__11398__i = 0, G__11398__a = new Array(arguments.length -  2);
while (G__11398__i < G__11398__a.length) {G__11398__a[G__11398__i] = arguments[G__11398__i + 2]; ++G__11398__i;}
G__11397 = new cljs.core.IndexedSeq(G__11398__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11397);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__11399__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__11399 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11400__i = 0, G__11400__a = new Array(arguments.length -  2);
while (G__11400__i < G__11400__a.length) {G__11400__a[G__11400__i] = arguments[G__11400__i + 2]; ++G__11400__i;}
  more = new cljs.core.IndexedSeq(G__11400__a,0);
} 
return G__11399__delegate.call(this,x,y,more);};
G__11399.cljs$lang$maxFixedArity = 2;
G__11399.cljs$lang$applyTo = (function (arglist__11401){
var x = cljs.core.first(arglist__11401);
arglist__11401 = cljs.core.next(arglist__11401);
var y = cljs.core.first(arglist__11401);
var more = cljs.core.rest(arglist__11401);
return G__11399__delegate(x,y,more);
});
G__11399.cljs$core$IFn$_invoke$arity$variadic = G__11399__delegate;
return G__11399;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__11402 = null;
if (arguments.length > 2) {
var G__11403__i = 0, G__11403__a = new Array(arguments.length -  2);
while (G__11403__i < G__11403__a.length) {G__11403__a[G__11403__i] = arguments[G__11403__i + 2]; ++G__11403__i;}
G__11402 = new cljs.core.IndexedSeq(G__11403__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11402);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__11406 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11406) : Math.floor.call(null,G__11406));
} else {
var G__11407 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11407) : Math.ceil.call(null,G__11407));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__11408__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__11408 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11409__i = 0, G__11409__a = new Array(arguments.length -  2);
while (G__11409__i < G__11409__a.length) {G__11409__a[G__11409__i] = arguments[G__11409__i + 2]; ++G__11409__i;}
  more = new cljs.core.IndexedSeq(G__11409__a,0);
} 
return G__11408__delegate.call(this,x,y,more);};
G__11408.cljs$lang$maxFixedArity = 2;
G__11408.cljs$lang$applyTo = (function (arglist__11410){
var x = cljs.core.first(arglist__11410);
arglist__11410 = cljs.core.next(arglist__11410);
var y = cljs.core.first(arglist__11410);
var more = cljs.core.rest(arglist__11410);
return G__11408__delegate(x,y,more);
});
G__11408.cljs$core$IFn$_invoke$arity$variadic = G__11408__delegate;
return G__11408;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__11411 = null;
if (arguments.length > 2) {
var G__11412__i = 0, G__11412__a = new Array(arguments.length -  2);
while (G__11412__i < G__11412__a.length) {G__11412__a[G__11412__i] = arguments[G__11412__i + 2]; ++G__11412__i;}
G__11411 = new cljs.core.IndexedSeq(G__11412__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11411);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__11413__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__11413 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11414__i = 0, G__11414__a = new Array(arguments.length -  2);
while (G__11414__i < G__11414__a.length) {G__11414__a[G__11414__i] = arguments[G__11414__i + 2]; ++G__11414__i;}
  more = new cljs.core.IndexedSeq(G__11414__a,0);
} 
return G__11413__delegate.call(this,x,y,more);};
G__11413.cljs$lang$maxFixedArity = 2;
G__11413.cljs$lang$applyTo = (function (arglist__11415){
var x = cljs.core.first(arglist__11415);
arglist__11415 = cljs.core.next(arglist__11415);
var y = cljs.core.first(arglist__11415);
var more = cljs.core.rest(arglist__11415);
return G__11413__delegate(x,y,more);
});
G__11413.cljs$core$IFn$_invoke$arity$variadic = G__11413__delegate;
return G__11413;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__11416 = null;
if (arguments.length > 2) {
var G__11417__i = 0, G__11417__a = new Array(arguments.length -  2);
while (G__11417__i < G__11417__a.length) {G__11417__a[G__11417__i] = arguments[G__11417__i + 2]; ++G__11417__i;}
G__11416 = new cljs.core.IndexedSeq(G__11417__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__11418__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__11418 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11419__i = 0, G__11419__a = new Array(arguments.length -  2);
while (G__11419__i < G__11419__a.length) {G__11419__a[G__11419__i] = arguments[G__11419__i + 2]; ++G__11419__i;}
  more = new cljs.core.IndexedSeq(G__11419__a,0);
} 
return G__11418__delegate.call(this,x,y,more);};
G__11418.cljs$lang$maxFixedArity = 2;
G__11418.cljs$lang$applyTo = (function (arglist__11420){
var x = cljs.core.first(arglist__11420);
arglist__11420 = cljs.core.next(arglist__11420);
var y = cljs.core.first(arglist__11420);
var more = cljs.core.rest(arglist__11420);
return G__11418__delegate(x,y,more);
});
G__11418.cljs$core$IFn$_invoke$arity$variadic = G__11418__delegate;
return G__11418;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__11421 = null;
if (arguments.length > 2) {
var G__11422__i = 0, G__11422__a = new Array(arguments.length -  2);
while (G__11422__i < G__11422__a.length) {G__11422__a[G__11422__i] = arguments[G__11422__i + 2]; ++G__11422__i;}
G__11421 = new cljs.core.IndexedSeq(G__11422__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__11423__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__11423 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11424__i = 0, G__11424__a = new Array(arguments.length -  2);
while (G__11424__i < G__11424__a.length) {G__11424__a[G__11424__i] = arguments[G__11424__i + 2]; ++G__11424__i;}
  more = new cljs.core.IndexedSeq(G__11424__a,0);
} 
return G__11423__delegate.call(this,x,y,more);};
G__11423.cljs$lang$maxFixedArity = 2;
G__11423.cljs$lang$applyTo = (function (arglist__11425){
var x = cljs.core.first(arglist__11425);
arglist__11425 = cljs.core.next(arglist__11425);
var y = cljs.core.first(arglist__11425);
var more = cljs.core.rest(arglist__11425);
return G__11423__delegate(x,y,more);
});
G__11423.cljs$core$IFn$_invoke$arity$variadic = G__11423__delegate;
return G__11423;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__11426 = null;
if (arguments.length > 2) {
var G__11427__i = 0, G__11427__a = new Array(arguments.length -  2);
while (G__11427__i < G__11427__a.length) {G__11427__a[G__11427__i] = arguments[G__11427__i + 2]; ++G__11427__i;}
G__11426 = new cljs.core.IndexedSeq(G__11427__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__11432__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11433 = y;
var G__11434 = cljs.core.first(more);
var G__11435 = cljs.core.next(more);
x = G__11433;
y = G__11434;
more = G__11435;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11432 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11436__i = 0, G__11436__a = new Array(arguments.length -  2);
while (G__11436__i < G__11436__a.length) {G__11436__a[G__11436__i] = arguments[G__11436__i + 2]; ++G__11436__i;}
  more = new cljs.core.IndexedSeq(G__11436__a,0);
} 
return G__11432__delegate.call(this,x,y,more);};
G__11432.cljs$lang$maxFixedArity = 2;
G__11432.cljs$lang$applyTo = (function (arglist__11437){
var x = cljs.core.first(arglist__11437);
arglist__11437 = cljs.core.next(arglist__11437);
var y = cljs.core.first(arglist__11437);
var more = cljs.core.rest(arglist__11437);
return G__11432__delegate(x,y,more);
});
G__11432.cljs$core$IFn$_invoke$arity$variadic = G__11432__delegate;
return G__11432;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__11438 = null;
if (arguments.length > 2) {
var G__11439__i = 0, G__11439__a = new Array(arguments.length -  2);
while (G__11439__i < G__11439__a.length) {G__11439__a[G__11439__i] = arguments[G__11439__i + 2]; ++G__11439__i;}
G__11438 = new cljs.core.IndexedSeq(G__11439__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11438);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__11440 = (n__$1 - (1));
var G__11441 = cljs.core.next(xs);
n__$1 = G__11440;
xs = G__11441;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__11445 = x;
return goog.string.buildString(G__11445);
}
});
var cljs$core$str__2 = (function() { 
var G__11446__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__11447 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__11448 = cljs.core.next(more);
sb = G__11447;
more = G__11448;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__11446 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__11449__i = 0, G__11449__a = new Array(arguments.length -  1);
while (G__11449__i < G__11449__a.length) {G__11449__a[G__11449__i] = arguments[G__11449__i + 1]; ++G__11449__i;}
  ys = new cljs.core.IndexedSeq(G__11449__a,0);
} 
return G__11446__delegate.call(this,x,ys);};
G__11446.cljs$lang$maxFixedArity = 1;
G__11446.cljs$lang$applyTo = (function (arglist__11450){
var x = cljs.core.first(arglist__11450);
var ys = cljs.core.rest(arglist__11450);
return G__11446__delegate(x,ys);
});
G__11446.cljs$core$IFn$_invoke$arity$variadic = G__11446__delegate;
return G__11446;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__11451 = null;
if (arguments.length > 1) {
var G__11452__i = 0, G__11452__a = new Array(arguments.length -  1);
while (G__11452__i < G__11452__a.length) {G__11452__a[G__11452__i] = arguments[G__11452__i + 1]; ++G__11452__i;}
G__11451 = new cljs.core.IndexedSeq(G__11452__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11451);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__11453 = cljs.core.next(xs);
var G__11454 = cljs.core.next(ys);
xs = G__11453;
ys = G__11454;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__11455 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__11456 = cljs.core.next(s);
res = G__11455;
s = G__11456;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__11461 = ((h + (cljs.core.hash((function (){var G__11459 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11459) : cljs.core.key.call(null,G__11459));
})()) ^ cljs.core.hash((function (){var G__11460 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11460) : cljs.core.val.call(null,G__11460));
})()))) % (4503599627370496));
var G__11462 = cljs.core.next(s);
h = G__11461;
s = G__11462;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__11463 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__11464 = cljs.core.next(s__$1);
h = G__11463;
s__$1 = G__11464;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__11475_11485 = cljs.core.seq(fn_map);
var chunk__11476_11486 = null;
var count__11477_11487 = (0);
var i__11478_11488 = (0);
while(true){
if((i__11478_11488 < count__11477_11487)){
var vec__11479_11489 = chunk__11476_11486.cljs$core$IIndexed$_nth$arity$2(null,i__11478_11488);
var key_name_11490 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11479_11489,(0),null);
var f_11491 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11479_11489,(1),null);
var str_name_11492 = (function (){var G__11480 = key_name_11490;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11480) : cljs.core.name.call(null,G__11480));
})();
(obj[str_name_11492] = f_11491);

var G__11493 = seq__11475_11485;
var G__11494 = chunk__11476_11486;
var G__11495 = count__11477_11487;
var G__11496 = (i__11478_11488 + (1));
seq__11475_11485 = G__11493;
chunk__11476_11486 = G__11494;
count__11477_11487 = G__11495;
i__11478_11488 = G__11496;
continue;
} else {
var temp__4425__auto___11497 = cljs.core.seq(seq__11475_11485);
if(temp__4425__auto___11497){
var seq__11475_11498__$1 = temp__4425__auto___11497;
if(cljs.core.chunked_seq_QMARK_(seq__11475_11498__$1)){
var c__4863__auto___11499 = (function (){var G__11481 = seq__11475_11498__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__11481) : cljs.core.chunk_first.call(null,G__11481));
})();
var G__11500 = (function (){var G__11482 = seq__11475_11498__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__11482) : cljs.core.chunk_rest.call(null,G__11482));
})();
var G__11501 = c__4863__auto___11499;
var G__11502 = cljs.core.count(c__4863__auto___11499);
var G__11503 = (0);
seq__11475_11485 = G__11500;
chunk__11476_11486 = G__11501;
count__11477_11487 = G__11502;
i__11478_11488 = G__11503;
continue;
} else {
var vec__11483_11504 = cljs.core.first(seq__11475_11498__$1);
var key_name_11505 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11483_11504,(0),null);
var f_11506 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11483_11504,(1),null);
var str_name_11507 = (function (){var G__11484 = key_name_11505;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11484) : cljs.core.name.call(null,G__11484));
})();
(obj[str_name_11507] = f_11506);

var G__11508 = cljs.core.next(seq__11475_11498__$1);
var G__11509 = null;
var G__11510 = (0);
var G__11511 = (0);
seq__11475_11485 = G__11508;
chunk__11476_11486 = G__11509;
count__11477_11487 = G__11510;
i__11478_11488 = G__11511;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__11513 = coll;
if(G__11513){
var bit__4757__auto__ = (G__11513.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4757__auto__) || (G__11513.cljs$core$IReversible$)){
return true;
} else {
if((!G__11513.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__11513);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__11513);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__11514 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__11514;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__11515 = (i - (1));
var G__11516 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__11515;
r = G__11516;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__11517__i = 0, G__11517__a = new Array(arguments.length -  0);
while (G__11517__i < G__11517__a.length) {G__11517__a[G__11517__i] = arguments[G__11517__i + 0]; ++G__11517__i;}
  xs = new cljs.core.IndexedSeq(G__11517__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__11518){
var xs = cljs.core.seq(arglist__11518);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__4076__auto__ = (coll == null);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var G__11522 = coll;
if(G__11522){
var bit__4750__auto__ = (G__11522.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4750__auto__) || (G__11522.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__11524 = x;
if(G__11524){
var bit__4757__auto__ = (G__11524.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4757__auto__) || (G__11524.cljs$core$IList$)){
return true;
} else {
if((!G__11524.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__11524);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__11524);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4064__auto__ = cljs.core.not(a.ns);
if(and__4064__auto__){
return b.ns;
} else {
return and__4064__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__11531 = a.ns;
var G__11532 = b.ns;
return goog.array.defaultCompare(G__11531,G__11532);
})();
if(((0) === nsc)){
var G__11533 = a.name;
var G__11534 = b.name;
return goog.array.defaultCompare(G__11533,G__11534);
} else {
return nsc;
}
}
} else {
var G__11535 = a.name;
var G__11536 = b.name;
return goog.array.defaultCompare(G__11535,G__11536);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__11538 = null;
var G__11538__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__11538__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__11538 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11538__2.call(this,self__,coll);
case 3:
return G__11538__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11538.cljs$core$IFn$_invoke$arity$2 = G__11538__2;
G__11538.cljs$core$IFn$_invoke$arity$3 = G__11538__3;
return G__11538;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args11537){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11537)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4497__auto__ = self__._hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__11540 = x;
if(G__11540){
var bit__4750__auto__ = (G__11540.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4750__auto__) || (G__11540.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__11542 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11542) : cljs.core.name.call(null,G__11542));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__11543 = ls.sval();
ls = G__11543;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 2;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 524306;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__11545 = s;
if(G__11545){
var bit__4750__auto__ = (G__11545.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4750__auto__) || (G__11545.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__11546 = cljs.core.next(s__$1);
s__$1 = G__11546;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_11547 = (0);
var xs_11548 = cljs.core.seq(coll);
while(true){
if(xs_11548){
(ret[i_11547] = cljs.core.to_array(cljs.core.first(xs_11548)));

var G__11549 = (i_11547 + (1));
var G__11550 = cljs.core.next(xs_11548);
i_11547 = G__11549;
xs_11548 = G__11550;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11553 = (i + (1));
var G__11554 = cljs.core.next(s__$1);
i = G__11553;
s__$1 = G__11554;
continue;
} else {
return a;
}
break;
}
} else {
var n__4963__auto___11555 = size;
var i_11556 = (0);
while(true){
if((i_11556 < n__4963__auto___11555)){
(a[i_11556] = init_val_or_seq);

var G__11557 = (i_11556 + (1));
i_11556 = G__11557;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11560 = (i + (1));
var G__11561 = cljs.core.next(s__$1);
i = G__11560;
s__$1 = G__11561;
continue;
} else {
return a;
}
break;
}
} else {
var n__4963__auto___11562 = size;
var i_11563 = (0);
while(true){
if((i_11563 < n__4963__auto___11562)){
(a[i_11563] = init_val_or_seq);

var G__11564 = (i_11563 + (1));
i_11563 = G__11564;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11567 = (i + (1));
var G__11568 = cljs.core.next(s__$1);
i = G__11567;
s__$1 = G__11568;
continue;
} else {
return a;
}
break;
}
} else {
var n__4963__auto___11569 = size;
var i_11570 = (0);
while(true){
if((i_11570 < n__4963__auto___11569)){
(a[i_11570] = init_val_or_seq);

var G__11571 = (i_11570 + (1));
i_11570 = G__11571;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11574 = (i + (1));
var G__11575 = cljs.core.next(s__$1);
i = G__11574;
s__$1 = G__11575;
continue;
} else {
return a;
}
break;
}
} else {
var n__4963__auto___11576 = size;
var i_11577 = (0);
while(true){
if((i_11577 < n__4963__auto___11576)){
(a[i_11577] = init_val_or_seq);

var G__11578 = (i_11577 + (1));
i_11577 = G__11578;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__11579 = cljs.core.next(s__$1);
var G__11580 = (i - (1));
var G__11581 = (sum + (1));
s__$1 = G__11579;
i = G__11580;
sum = G__11581;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__11601__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__11601 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__11602__i = 0, G__11602__a = new Array(arguments.length -  2);
while (G__11602__i < G__11602__a.length) {G__11602__a[G__11602__i] = arguments[G__11602__i + 2]; ++G__11602__i;}
  zs = new cljs.core.IndexedSeq(G__11602__a,0);
} 
return G__11601__delegate.call(this,x,y,zs);};
G__11601.cljs$lang$maxFixedArity = 2;
G__11601.cljs$lang$applyTo = (function (arglist__11603){
var x = cljs.core.first(arglist__11603);
arglist__11603 = cljs.core.next(arglist__11603);
var y = cljs.core.first(arglist__11603);
var zs = cljs.core.rest(arglist__11603);
return G__11601__delegate(x,y,zs);
});
G__11601.cljs$core$IFn$_invoke$arity$variadic = G__11601__delegate;
return G__11601;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__11604 = null;
if (arguments.length > 2) {
var G__11605__i = 0, G__11605__a = new Array(arguments.length -  2);
while (G__11605__i < G__11605__a.length) {G__11605__a[G__11605__i] = arguments[G__11605__i + 2]; ++G__11605__i;}
G__11604 = new cljs.core.IndexedSeq(G__11605__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11604);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__11606__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__11606 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__11607__i = 0, G__11607__a = new Array(arguments.length -  4);
while (G__11607__i < G__11607__a.length) {G__11607__a[G__11607__i] = arguments[G__11607__i + 4]; ++G__11607__i;}
  more = new cljs.core.IndexedSeq(G__11607__a,0);
} 
return G__11606__delegate.call(this,a,b,c,d,more);};
G__11606.cljs$lang$maxFixedArity = 4;
G__11606.cljs$lang$applyTo = (function (arglist__11608){
var a = cljs.core.first(arglist__11608);
arglist__11608 = cljs.core.next(arglist__11608);
var b = cljs.core.first(arglist__11608);
arglist__11608 = cljs.core.next(arglist__11608);
var c = cljs.core.first(arglist__11608);
arglist__11608 = cljs.core.next(arglist__11608);
var d = cljs.core.first(arglist__11608);
var more = cljs.core.rest(arglist__11608);
return G__11606__delegate(a,b,c,d,more);
});
G__11606.cljs$core$IFn$_invoke$arity$variadic = G__11606__delegate;
return G__11606;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__11609 = null;
if (arguments.length > 4) {
var G__11610__i = 0, G__11610__a = new Array(arguments.length -  4);
while (G__11610__i < G__11610__a.length) {G__11610__a[G__11610__i] = arguments[G__11610__i + 4]; ++G__11610__i;}
G__11609 = new cljs.core.IndexedSeq(G__11610__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__11609);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__11611__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__11612 = ntcoll;
var G__11613 = cljs.core.first(vals);
var G__11614 = cljs.core.next(vals);
tcoll = G__11612;
val = G__11613;
vals = G__11614;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11611 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__11615__i = 0, G__11615__a = new Array(arguments.length -  2);
while (G__11615__i < G__11615__a.length) {G__11615__a[G__11615__i] = arguments[G__11615__i + 2]; ++G__11615__i;}
  vals = new cljs.core.IndexedSeq(G__11615__a,0);
} 
return G__11611__delegate.call(this,tcoll,val,vals);};
G__11611.cljs$lang$maxFixedArity = 2;
G__11611.cljs$lang$applyTo = (function (arglist__11616){
var tcoll = cljs.core.first(arglist__11616);
arglist__11616 = cljs.core.next(arglist__11616);
var val = cljs.core.first(arglist__11616);
var vals = cljs.core.rest(arglist__11616);
return G__11611__delegate(tcoll,val,vals);
});
G__11611.cljs$core$IFn$_invoke$arity$variadic = G__11611__delegate;
return G__11611;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__11617 = null;
if (arguments.length > 2) {
var G__11618__i = 0, G__11618__a = new Array(arguments.length -  2);
while (G__11618__i < G__11618__a.length) {G__11618__a[G__11618__i] = arguments[G__11618__i + 2]; ++G__11618__i;}
G__11617 = new cljs.core.IndexedSeq(G__11618__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__11617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__11619__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__11620 = ntcoll;
var G__11621 = cljs.core.first(kvs);
var G__11622 = cljs.core.second(kvs);
var G__11623 = cljs.core.nnext(kvs);
tcoll = G__11620;
key = G__11621;
val = G__11622;
kvs = G__11623;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11619 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__11624__i = 0, G__11624__a = new Array(arguments.length -  3);
while (G__11624__i < G__11624__a.length) {G__11624__a[G__11624__i] = arguments[G__11624__i + 3]; ++G__11624__i;}
  kvs = new cljs.core.IndexedSeq(G__11624__a,0);
} 
return G__11619__delegate.call(this,tcoll,key,val,kvs);};
G__11619.cljs$lang$maxFixedArity = 3;
G__11619.cljs$lang$applyTo = (function (arglist__11625){
var tcoll = cljs.core.first(arglist__11625);
arglist__11625 = cljs.core.next(arglist__11625);
var key = cljs.core.first(arglist__11625);
arglist__11625 = cljs.core.next(arglist__11625);
var val = cljs.core.first(arglist__11625);
var kvs = cljs.core.rest(arglist__11625);
return G__11619__delegate(tcoll,key,val,kvs);
});
G__11619.cljs$core$IFn$_invoke$arity$variadic = G__11619__delegate;
return G__11619;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__11626 = null;
if (arguments.length > 3) {
var G__11627__i = 0, G__11627__a = new Array(arguments.length -  3);
while (G__11627__i < G__11627__a.length) {G__11627__a[G__11627__i] = arguments[G__11627__i + 3]; ++G__11627__i;}
G__11626 = new cljs.core.IndexedSeq(G__11627__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__11626);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__11628__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__11629 = ntcoll;
var G__11630 = cljs.core.first(ks);
var G__11631 = cljs.core.next(ks);
tcoll = G__11629;
key = G__11630;
ks = G__11631;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11628 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11632__i = 0, G__11632__a = new Array(arguments.length -  2);
while (G__11632__i < G__11632__a.length) {G__11632__a[G__11632__i] = arguments[G__11632__i + 2]; ++G__11632__i;}
  ks = new cljs.core.IndexedSeq(G__11632__a,0);
} 
return G__11628__delegate.call(this,tcoll,key,ks);};
G__11628.cljs$lang$maxFixedArity = 2;
G__11628.cljs$lang$applyTo = (function (arglist__11633){
var tcoll = cljs.core.first(arglist__11633);
arglist__11633 = cljs.core.next(arglist__11633);
var key = cljs.core.first(arglist__11633);
var ks = cljs.core.rest(arglist__11633);
return G__11628__delegate(tcoll,key,ks);
});
G__11628.cljs$core$IFn$_invoke$arity$variadic = G__11628__delegate;
return G__11628;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__11634 = null;
if (arguments.length > 2) {
var G__11635__i = 0, G__11635__a = new Array(arguments.length -  2);
while (G__11635__i < G__11635__a.length) {G__11635__a[G__11635__i] = arguments[G__11635__i + 2]; ++G__11635__i;}
G__11634 = new cljs.core.IndexedSeq(G__11635__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__11634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__11636__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__11637 = ntcoll;
var G__11638 = cljs.core.first(vals);
var G__11639 = cljs.core.next(vals);
tcoll = G__11637;
val = G__11638;
vals = G__11639;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11636 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__11640__i = 0, G__11640__a = new Array(arguments.length -  2);
while (G__11640__i < G__11640__a.length) {G__11640__a[G__11640__i] = arguments[G__11640__i + 2]; ++G__11640__i;}
  vals = new cljs.core.IndexedSeq(G__11640__a,0);
} 
return G__11636__delegate.call(this,tcoll,val,vals);};
G__11636.cljs$lang$maxFixedArity = 2;
G__11636.cljs$lang$applyTo = (function (arglist__11641){
var tcoll = cljs.core.first(arglist__11641);
arglist__11641 = cljs.core.next(arglist__11641);
var val = cljs.core.first(arglist__11641);
var vals = cljs.core.rest(arglist__11641);
return G__11636__delegate(tcoll,val,vals);
});
G__11636.cljs$core$IFn$_invoke$arity$variadic = G__11636__delegate;
return G__11636;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__11642 = null;
if (arguments.length > 2) {
var G__11643__i = 0, G__11643__a = new Array(arguments.length -  2);
while (G__11643__i < G__11643__a.length) {G__11643__a[G__11643__i] = arguments[G__11643__i + 2]; ++G__11643__i;}
G__11642 = new cljs.core.IndexedSeq(G__11643__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__11642);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a5007 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a5007);
} else {
var G__11854 = a5007;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11854) : f.call(null,G__11854));
}
} else {
var b5008 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a5007,b5008);
} else {
var G__11855 = a5007;
var G__11856 = b5008;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11855,G__11856) : f.call(null,G__11855,G__11856));
}
} else {
var c5009 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a5007,b5008,c5009);
} else {
var G__11857 = a5007;
var G__11858 = b5008;
var G__11859 = c5009;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11857,G__11858,G__11859) : f.call(null,G__11857,G__11858,G__11859));
}
} else {
var d5010 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a5007,b5008,c5009,d5010);
} else {
var G__11860 = a5007;
var G__11861 = b5008;
var G__11862 = c5009;
var G__11863 = d5010;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11860,G__11861,G__11862,G__11863) : f.call(null,G__11860,G__11861,G__11862,G__11863));
}
} else {
var e5011 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a5007,b5008,c5009,d5010,e5011);
} else {
var G__11864 = a5007;
var G__11865 = b5008;
var G__11866 = c5009;
var G__11867 = d5010;
var G__11868 = e5011;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11864,G__11865,G__11866,G__11867,G__11868) : f.call(null,G__11864,G__11865,G__11866,G__11867,G__11868));
}
} else {
var f5012 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a5007,b5008,c5009,d5010,e5011,f5012);
} else {
var G__11869 = a5007;
var G__11870 = b5008;
var G__11871 = c5009;
var G__11872 = d5010;
var G__11873 = e5011;
var G__11874 = f5012;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__11869,G__11870,G__11871,G__11872,G__11873,G__11874) : f.call(null,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874));
}
} else {
var g5013 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a5007,b5008,c5009,d5010,e5011,f5012,g5013);
} else {
var G__11875 = a5007;
var G__11876 = b5008;
var G__11877 = c5009;
var G__11878 = d5010;
var G__11879 = e5011;
var G__11880 = f5012;
var G__11881 = g5013;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881) : f.call(null,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881));
}
} else {
var h5014 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014);
} else {
var G__11882 = a5007;
var G__11883 = b5008;
var G__11884 = c5009;
var G__11885 = d5010;
var G__11886 = e5011;
var G__11887 = f5012;
var G__11888 = g5013;
var G__11889 = h5014;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889) : f.call(null,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889));
}
} else {
var i5015 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015);
} else {
var G__11890 = a5007;
var G__11891 = b5008;
var G__11892 = c5009;
var G__11893 = d5010;
var G__11894 = e5011;
var G__11895 = f5012;
var G__11896 = g5013;
var G__11897 = h5014;
var G__11898 = i5015;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898) : f.call(null,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898));
}
} else {
var j5016 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015,j5016);
} else {
var G__11899 = a5007;
var G__11900 = b5008;
var G__11901 = c5009;
var G__11902 = d5010;
var G__11903 = e5011;
var G__11904 = f5012;
var G__11905 = g5013;
var G__11906 = h5014;
var G__11907 = i5015;
var G__11908 = j5016;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907,G__11908) : f.call(null,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907,G__11908));
}
} else {
var k5017 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015,j5016,k5017);
} else {
var G__11909 = a5007;
var G__11910 = b5008;
var G__11911 = c5009;
var G__11912 = d5010;
var G__11913 = e5011;
var G__11914 = f5012;
var G__11915 = g5013;
var G__11916 = h5014;
var G__11917 = i5015;
var G__11918 = j5016;
var G__11919 = k5017;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919) : f.call(null,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919));
}
} else {
var l5018 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015,j5016,k5017,l5018);
} else {
var G__11920 = a5007;
var G__11921 = b5008;
var G__11922 = c5009;
var G__11923 = d5010;
var G__11924 = e5011;
var G__11925 = f5012;
var G__11926 = g5013;
var G__11927 = h5014;
var G__11928 = i5015;
var G__11929 = j5016;
var G__11930 = k5017;
var G__11931 = l5018;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931) : f.call(null,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931));
}
} else {
var m5019 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015,j5016,k5017,l5018,m5019);
} else {
var G__11932 = a5007;
var G__11933 = b5008;
var G__11934 = c5009;
var G__11935 = d5010;
var G__11936 = e5011;
var G__11937 = f5012;
var G__11938 = g5013;
var G__11939 = h5014;
var G__11940 = i5015;
var G__11941 = j5016;
var G__11942 = k5017;
var G__11943 = l5018;
var G__11944 = m5019;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944) : f.call(null,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944));
}
} else {
var n5020 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015,j5016,k5017,l5018,m5019,n5020);
} else {
var G__11945 = a5007;
var G__11946 = b5008;
var G__11947 = c5009;
var G__11948 = d5010;
var G__11949 = e5011;
var G__11950 = f5012;
var G__11951 = g5013;
var G__11952 = h5014;
var G__11953 = i5015;
var G__11954 = j5016;
var G__11955 = k5017;
var G__11956 = l5018;
var G__11957 = m5019;
var G__11958 = n5020;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958) : f.call(null,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958));
}
} else {
var o5021 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015,j5016,k5017,l5018,m5019,n5020,o5021);
} else {
var G__11959 = a5007;
var G__11960 = b5008;
var G__11961 = c5009;
var G__11962 = d5010;
var G__11963 = e5011;
var G__11964 = f5012;
var G__11965 = g5013;
var G__11966 = h5014;
var G__11967 = i5015;
var G__11968 = j5016;
var G__11969 = k5017;
var G__11970 = l5018;
var G__11971 = m5019;
var G__11972 = n5020;
var G__11973 = o5021;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973) : f.call(null,G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973));
}
} else {
var p5022 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015,j5016,k5017,l5018,m5019,n5020,o5021,p5022);
} else {
var G__11974 = a5007;
var G__11975 = b5008;
var G__11976 = c5009;
var G__11977 = d5010;
var G__11978 = e5011;
var G__11979 = f5012;
var G__11980 = g5013;
var G__11981 = h5014;
var G__11982 = i5015;
var G__11983 = j5016;
var G__11984 = k5017;
var G__11985 = l5018;
var G__11986 = m5019;
var G__11987 = n5020;
var G__11988 = o5021;
var G__11989 = p5022;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__11974,G__11975,G__11976,G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989) : f.call(null,G__11974,G__11975,G__11976,G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989));
}
} else {
var q5023 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015,j5016,k5017,l5018,m5019,n5020,o5021,p5022,q5023);
} else {
var G__11990 = a5007;
var G__11991 = b5008;
var G__11992 = c5009;
var G__11993 = d5010;
var G__11994 = e5011;
var G__11995 = f5012;
var G__11996 = g5013;
var G__11997 = h5014;
var G__11998 = i5015;
var G__11999 = j5016;
var G__12000 = k5017;
var G__12001 = l5018;
var G__12002 = m5019;
var G__12003 = n5020;
var G__12004 = o5021;
var G__12005 = p5022;
var G__12006 = q5023;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006) : f.call(null,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006));
}
} else {
var r5024 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015,j5016,k5017,l5018,m5019,n5020,o5021,p5022,q5023,r5024);
} else {
var G__12007 = a5007;
var G__12008 = b5008;
var G__12009 = c5009;
var G__12010 = d5010;
var G__12011 = e5011;
var G__12012 = f5012;
var G__12013 = g5013;
var G__12014 = h5014;
var G__12015 = i5015;
var G__12016 = j5016;
var G__12017 = k5017;
var G__12018 = l5018;
var G__12019 = m5019;
var G__12020 = n5020;
var G__12021 = o5021;
var G__12022 = p5022;
var G__12023 = q5023;
var G__12024 = r5024;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024) : f.call(null,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024));
}
} else {
var s5025 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015,j5016,k5017,l5018,m5019,n5020,o5021,p5022,q5023,r5024,s5025);
} else {
var G__12025 = a5007;
var G__12026 = b5008;
var G__12027 = c5009;
var G__12028 = d5010;
var G__12029 = e5011;
var G__12030 = f5012;
var G__12031 = g5013;
var G__12032 = h5014;
var G__12033 = i5015;
var G__12034 = j5016;
var G__12035 = k5017;
var G__12036 = l5018;
var G__12037 = m5019;
var G__12038 = n5020;
var G__12039 = o5021;
var G__12040 = p5022;
var G__12041 = q5023;
var G__12042 = r5024;
var G__12043 = s5025;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043) : f.call(null,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043));
}
} else {
var t5026 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a5007,b5008,c5009,d5010,e5011,f5012,g5013,h5014,i5015,j5016,k5017,l5018,m5019,n5020,o5021,p5022,q5023,r5024,s5025,t5026);
} else {
var G__12044 = a5007;
var G__12045 = b5008;
var G__12046 = c5009;
var G__12047 = d5010;
var G__12048 = e5011;
var G__12049 = f5012;
var G__12050 = g5013;
var G__12051 = h5014;
var G__12052 = i5015;
var G__12053 = j5016;
var G__12054 = k5017;
var G__12055 = l5018;
var G__12056 = m5019;
var G__12057 = n5020;
var G__12058 = o5021;
var G__12059 = p5022;
var G__12060 = q5023;
var G__12061 = r5024;
var G__12062 = s5025;
var G__12063 = t5026;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060,G__12061,G__12062,G__12063) : f.call(null,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060,G__12061,G__12062,G__12063));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__12064__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__12064 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__12065__i = 0, G__12065__a = new Array(arguments.length -  5);
while (G__12065__i < G__12065__a.length) {G__12065__a[G__12065__i] = arguments[G__12065__i + 5]; ++G__12065__i;}
  args = new cljs.core.IndexedSeq(G__12065__a,0);
} 
return G__12064__delegate.call(this,f,a,b,c,d,args);};
G__12064.cljs$lang$maxFixedArity = 5;
G__12064.cljs$lang$applyTo = (function (arglist__12066){
var f = cljs.core.first(arglist__12066);
arglist__12066 = cljs.core.next(arglist__12066);
var a = cljs.core.first(arglist__12066);
arglist__12066 = cljs.core.next(arglist__12066);
var b = cljs.core.first(arglist__12066);
arglist__12066 = cljs.core.next(arglist__12066);
var c = cljs.core.first(arglist__12066);
arglist__12066 = cljs.core.next(arglist__12066);
var d = cljs.core.first(arglist__12066);
var args = cljs.core.rest(arglist__12066);
return G__12064__delegate(f,a,b,c,d,args);
});
G__12064.cljs$core$IFn$_invoke$arity$variadic = G__12064__delegate;
return G__12064;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__12067 = null;
if (arguments.length > 5) {
var G__12068__i = 0, G__12068__a = new Array(arguments.length -  5);
while (G__12068__i < G__12068__a.length) {G__12068__a[G__12068__i] = arguments[G__12068__i + 5]; ++G__12068__i;}
G__12067 = new cljs.core.IndexedSeq(G__12068__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__12067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__12084 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12084) : f.call(null,G__12084));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__12085 = cljs.core.meta(obj);
var G__12086 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12085,G__12086) : f.call(null,G__12085,G__12086));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__12087 = cljs.core.meta(obj);
var G__12088 = a;
var G__12089 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12087,G__12088,G__12089) : f.call(null,G__12087,G__12088,G__12089));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__12090 = cljs.core.meta(obj);
var G__12091 = a;
var G__12092 = b;
var G__12093 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12090,G__12091,G__12092,G__12093) : f.call(null,G__12090,G__12091,G__12092,G__12093));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__12094 = cljs.core.meta(obj);
var G__12095 = a;
var G__12096 = b;
var G__12097 = c;
var G__12098 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12094,G__12095,G__12096,G__12097,G__12098) : f.call(null,G__12094,G__12095,G__12096,G__12097,G__12098));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__12099__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__12099 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__12100__i = 0, G__12100__a = new Array(arguments.length -  6);
while (G__12100__i < G__12100__a.length) {G__12100__a[G__12100__i] = arguments[G__12100__i + 6]; ++G__12100__i;}
  args = new cljs.core.IndexedSeq(G__12100__a,0);
} 
return G__12099__delegate.call(this,obj,f,a,b,c,d,args);};
G__12099.cljs$lang$maxFixedArity = 6;
G__12099.cljs$lang$applyTo = (function (arglist__12101){
var obj = cljs.core.first(arglist__12101);
arglist__12101 = cljs.core.next(arglist__12101);
var f = cljs.core.first(arglist__12101);
arglist__12101 = cljs.core.next(arglist__12101);
var a = cljs.core.first(arglist__12101);
arglist__12101 = cljs.core.next(arglist__12101);
var b = cljs.core.first(arglist__12101);
arglist__12101 = cljs.core.next(arglist__12101);
var c = cljs.core.first(arglist__12101);
arglist__12101 = cljs.core.next(arglist__12101);
var d = cljs.core.first(arglist__12101);
var args = cljs.core.rest(arglist__12101);
return G__12099__delegate(obj,f,a,b,c,d,args);
});
G__12099.cljs$core$IFn$_invoke$arity$variadic = G__12099__delegate;
return G__12099;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__12102 = null;
if (arguments.length > 6) {
var G__12103__i = 0, G__12103__a = new Array(arguments.length -  6);
while (G__12103__i < G__12103__a.length) {G__12103__a[G__12103__i] = arguments[G__12103__i + 6]; ++G__12103__i;}
G__12102 = new cljs.core.IndexedSeq(G__12103__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__12102);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__12104__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__12104 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12105__i = 0, G__12105__a = new Array(arguments.length -  2);
while (G__12105__i < G__12105__a.length) {G__12105__a[G__12105__i] = arguments[G__12105__i + 2]; ++G__12105__i;}
  more = new cljs.core.IndexedSeq(G__12105__a,0);
} 
return G__12104__delegate.call(this,x,y,more);};
G__12104.cljs$lang$maxFixedArity = 2;
G__12104.cljs$lang$applyTo = (function (arglist__12106){
var x = cljs.core.first(arglist__12106);
arglist__12106 = cljs.core.next(arglist__12106);
var y = cljs.core.first(arglist__12106);
var more = cljs.core.rest(arglist__12106);
return G__12104__delegate(x,y,more);
});
G__12104.cljs$core$IFn$_invoke$arity$variadic = G__12104__delegate;
return G__12104;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__12107 = null;
if (arguments.length > 2) {
var G__12108__i = 0, G__12108__a = new Array(arguments.length -  2);
while (G__12108__i < G__12108__a.length) {G__12108__a[G__12108__i] = arguments[G__12108__i + 2]; ++G__12108__i;}
G__12107 = new cljs.core.IndexedSeq(G__12108__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12107);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t12112 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t12112 = (function (nil_iter,meta12113){
this.nil_iter = nil_iter;
this.meta12113 = meta12113;
this.cljs$lang$protocol_mask$partition0$ = 393216;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.t12112.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_12114,meta12113__$1){
var self__ = this;
var _12114__$1 = this;
return (new cljs.core.t12112(self__.nil_iter,meta12113__$1));
});

cljs.core.t12112.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_12114){
var self__ = this;
var _12114__$1 = this;
return self__.meta12113;
});

cljs.core.t12112.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t12112.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t12112.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t12112.cljs$lang$type = true;

cljs.core.t12112.cljs$lang$ctorStr = "cljs.core/t12112";

cljs.core.t12112.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/t12112");
});

cljs.core.__GT_t12112 = (function cljs$core$nil_iter_$___GT_t12112(nil_iter__$1,meta12113){
return (new cljs.core.t12112(nil_iter__$1,meta12113));
});

}

return (new cljs.core.t12112(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4064__auto__ = !((lt.stepper == null));
if(and__4064__auto__){
return self__.iter.hasNext();
} else {
return and__4064__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__12115 = lt;
var G__12116 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__12115,G__12116) : self__.xform.call(null,G__12115,G__12116));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__12117 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12117) : self__.xform.call(null,G__12117));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__12119 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12119) : xform.call(null,G__12119));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__12121 = cljs.core.next(iters__$1);
iters__$1 = G__12121;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4963__auto___12122 = self__.iters.length;
var i_12123 = (0);
while(true){
if((i_12123 < n__4963__auto___12122)){
(self__.nexts[i_12123] = (self__.iters[i_12123]).next());

var G__12124 = (i_12123 + (1));
i_12123 = G__12124;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4064__auto__ = !((lt.stepper == null));
if(and__4064__auto__){
return this$.hasNext();
} else {
return and__4064__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__12120 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12120) : self__.xform.call(null,G__12120));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__12129 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12129) : xform.call(null,G__12129));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__12130_12134 = cljs.core.seq(colls);
var chunk__12131_12135 = null;
var count__12132_12136 = (0);
var i__12133_12137 = (0);
while(true){
if((i__12133_12137 < count__12132_12136)){
var coll_12138 = chunk__12131_12135.cljs$core$IIndexed$_nth$arity$2(null,i__12133_12137);
iters.push(cljs.core.iter(coll_12138));

var G__12139 = seq__12130_12134;
var G__12140 = chunk__12131_12135;
var G__12141 = count__12132_12136;
var G__12142 = (i__12133_12137 + (1));
seq__12130_12134 = G__12139;
chunk__12131_12135 = G__12140;
count__12132_12136 = G__12141;
i__12133_12137 = G__12142;
continue;
} else {
var temp__4425__auto___12143 = cljs.core.seq(seq__12130_12134);
if(temp__4425__auto___12143){
var seq__12130_12144__$1 = temp__4425__auto___12143;
if(cljs.core.chunked_seq_QMARK_(seq__12130_12144__$1)){
var c__4863__auto___12145 = cljs.core.chunk_first(seq__12130_12144__$1);
var G__12146 = cljs.core.chunk_rest(seq__12130_12144__$1);
var G__12147 = c__4863__auto___12145;
var G__12148 = cljs.core.count(c__4863__auto___12145);
var G__12149 = (0);
seq__12130_12134 = G__12146;
chunk__12131_12135 = G__12147;
count__12132_12136 = G__12148;
i__12133_12137 = G__12149;
continue;
} else {
var coll_12150 = cljs.core.first(seq__12130_12144__$1);
iters.push(cljs.core.iter(coll_12150));

var G__12151 = cljs.core.next(seq__12130_12144__$1);
var G__12152 = null;
var G__12153 = (0);
var G__12154 = (0);
seq__12130_12134 = G__12151;
chunk__12131_12135 = G__12152;
count__12132_12136 = G__12153;
i__12133_12137 = G__12154;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__4076__auto__ = cljs.core.seq(coll);
if(or__4076__auto__){
return or__4076__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__12155__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__12155 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__12156__i = 0, G__12156__a = new Array(arguments.length -  2);
while (G__12156__i < G__12156__a.length) {G__12156__a[G__12156__i] = arguments[G__12156__i + 2]; ++G__12156__i;}
  colls = new cljs.core.IndexedSeq(G__12156__a,0);
} 
return G__12155__delegate.call(this,xform,coll,colls);};
G__12155.cljs$lang$maxFixedArity = 2;
G__12155.cljs$lang$applyTo = (function (arglist__12157){
var xform = cljs.core.first(arglist__12157);
arglist__12157 = cljs.core.next(arglist__12157);
var coll = cljs.core.first(arglist__12157);
var colls = cljs.core.rest(arglist__12157);
return G__12155__delegate(xform,coll,colls);
});
G__12155.cljs$core$IFn$_invoke$arity$variadic = G__12155__delegate;
return G__12155;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__12158 = null;
if (arguments.length > 2) {
var G__12159__i = 0, G__12159__a = new Array(arguments.length -  2);
while (G__12159__i < G__12159__a.length) {G__12159__a[G__12159__i] = arguments[G__12159__i + 2]; ++G__12159__i;}
G__12158 = new cljs.core.IndexedSeq(G__12159__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__12158);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__12161 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12161) : pred.call(null,G__12161));
})())){
var G__12162 = pred;
var G__12163 = cljs.core.next(coll);
pred = G__12162;
coll = G__12163;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__4076__auto__ = (function (){var G__12167 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12167) : pred.call(null,G__12167));
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var G__12168 = pred;
var G__12169 = cljs.core.next(coll);
pred = G__12168;
coll = G__12169;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__12176 = null;
var G__12176__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__12176__1 = (function (x){
return cljs.core.not((function (){var G__12173 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12173) : f.call(null,G__12173));
})());
});
var G__12176__2 = (function (x,y){
return cljs.core.not((function (){var G__12174 = x;
var G__12175 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12174,G__12175) : f.call(null,G__12174,G__12175));
})());
});
var G__12176__3 = (function() { 
var G__12177__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__12177 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__12178__i = 0, G__12178__a = new Array(arguments.length -  2);
while (G__12178__i < G__12178__a.length) {G__12178__a[G__12178__i] = arguments[G__12178__i + 2]; ++G__12178__i;}
  zs = new cljs.core.IndexedSeq(G__12178__a,0);
} 
return G__12177__delegate.call(this,x,y,zs);};
G__12177.cljs$lang$maxFixedArity = 2;
G__12177.cljs$lang$applyTo = (function (arglist__12179){
var x = cljs.core.first(arglist__12179);
arglist__12179 = cljs.core.next(arglist__12179);
var y = cljs.core.first(arglist__12179);
var zs = cljs.core.rest(arglist__12179);
return G__12177__delegate(x,y,zs);
});
G__12177.cljs$core$IFn$_invoke$arity$variadic = G__12177__delegate;
return G__12177;
})()
;
G__12176 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__12176__0.call(this);
case 1:
return G__12176__1.call(this,x);
case 2:
return G__12176__2.call(this,x,y);
default:
var G__12180 = null;
if (arguments.length > 2) {
var G__12181__i = 0, G__12181__a = new Array(arguments.length -  2);
while (G__12181__i < G__12181__a.length) {G__12181__a[G__12181__i] = arguments[G__12181__i + 2]; ++G__12181__i;}
G__12180 = new cljs.core.IndexedSeq(G__12181__a,0);
}
return G__12176__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12176.cljs$lang$maxFixedArity = 2;
G__12176.cljs$lang$applyTo = G__12176__3.cljs$lang$applyTo;
G__12176.cljs$core$IFn$_invoke$arity$0 = G__12176__0;
G__12176.cljs$core$IFn$_invoke$arity$1 = G__12176__1;
G__12176.cljs$core$IFn$_invoke$arity$2 = G__12176__2;
G__12176.cljs$core$IFn$_invoke$arity$variadic = G__12176__3.cljs$core$IFn$_invoke$arity$variadic;
return G__12176;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__12182__delegate = function (args){
return x;
};
var G__12182 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12183__i = 0, G__12183__a = new Array(arguments.length -  0);
while (G__12183__i < G__12183__a.length) {G__12183__a[G__12183__i] = arguments[G__12183__i + 0]; ++G__12183__i;}
  args = new cljs.core.IndexedSeq(G__12183__a,0);
} 
return G__12182__delegate.call(this,args);};
G__12182.cljs$lang$maxFixedArity = 0;
G__12182.cljs$lang$applyTo = (function (arglist__12184){
var args = cljs.core.seq(arglist__12184);
return G__12182__delegate(args);
});
G__12182.cljs$core$IFn$_invoke$arity$variadic = G__12182__delegate;
return G__12182;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__12239 = null;
var G__12239__0 = (function (){
var G__12212 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12212) : f.call(null,G__12212));
});
var G__12239__1 = (function (x){
var G__12213 = (function (){var G__12214 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12214) : g.call(null,G__12214));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12213) : f.call(null,G__12213));
});
var G__12239__2 = (function (x,y){
var G__12215 = (function (){var G__12216 = x;
var G__12217 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12216,G__12217) : g.call(null,G__12216,G__12217));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12215) : f.call(null,G__12215));
});
var G__12239__3 = (function (x,y,z){
var G__12218 = (function (){var G__12219 = x;
var G__12220 = y;
var G__12221 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12219,G__12220,G__12221) : g.call(null,G__12219,G__12220,G__12221));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12218) : f.call(null,G__12218));
});
var G__12239__4 = (function() { 
var G__12240__delegate = function (x,y,z,args){
var G__12222 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12222) : f.call(null,G__12222));
};
var G__12240 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12241__i = 0, G__12241__a = new Array(arguments.length -  3);
while (G__12241__i < G__12241__a.length) {G__12241__a[G__12241__i] = arguments[G__12241__i + 3]; ++G__12241__i;}
  args = new cljs.core.IndexedSeq(G__12241__a,0);
} 
return G__12240__delegate.call(this,x,y,z,args);};
G__12240.cljs$lang$maxFixedArity = 3;
G__12240.cljs$lang$applyTo = (function (arglist__12242){
var x = cljs.core.first(arglist__12242);
arglist__12242 = cljs.core.next(arglist__12242);
var y = cljs.core.first(arglist__12242);
arglist__12242 = cljs.core.next(arglist__12242);
var z = cljs.core.first(arglist__12242);
var args = cljs.core.rest(arglist__12242);
return G__12240__delegate(x,y,z,args);
});
G__12240.cljs$core$IFn$_invoke$arity$variadic = G__12240__delegate;
return G__12240;
})()
;
G__12239 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12239__0.call(this);
case 1:
return G__12239__1.call(this,x);
case 2:
return G__12239__2.call(this,x,y);
case 3:
return G__12239__3.call(this,x,y,z);
default:
var G__12243 = null;
if (arguments.length > 3) {
var G__12244__i = 0, G__12244__a = new Array(arguments.length -  3);
while (G__12244__i < G__12244__a.length) {G__12244__a[G__12244__i] = arguments[G__12244__i + 3]; ++G__12244__i;}
G__12243 = new cljs.core.IndexedSeq(G__12244__a,0);
}
return G__12239__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12243);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12239.cljs$lang$maxFixedArity = 3;
G__12239.cljs$lang$applyTo = G__12239__4.cljs$lang$applyTo;
G__12239.cljs$core$IFn$_invoke$arity$0 = G__12239__0;
G__12239.cljs$core$IFn$_invoke$arity$1 = G__12239__1;
G__12239.cljs$core$IFn$_invoke$arity$2 = G__12239__2;
G__12239.cljs$core$IFn$_invoke$arity$3 = G__12239__3;
G__12239.cljs$core$IFn$_invoke$arity$variadic = G__12239__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12239;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__12245 = null;
var G__12245__0 = (function (){
var G__12223 = (function (){var G__12224 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12224) : g.call(null,G__12224));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12223) : f.call(null,G__12223));
});
var G__12245__1 = (function (x){
var G__12225 = (function (){var G__12226 = (function (){var G__12227 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__12227) : h.call(null,G__12227));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12226) : g.call(null,G__12226));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12225) : f.call(null,G__12225));
});
var G__12245__2 = (function (x,y){
var G__12228 = (function (){var G__12229 = (function (){var G__12230 = x;
var G__12231 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__12230,G__12231) : h.call(null,G__12230,G__12231));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12229) : g.call(null,G__12229));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12228) : f.call(null,G__12228));
});
var G__12245__3 = (function (x,y,z){
var G__12232 = (function (){var G__12233 = (function (){var G__12234 = x;
var G__12235 = y;
var G__12236 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__12234,G__12235,G__12236) : h.call(null,G__12234,G__12235,G__12236));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12233) : g.call(null,G__12233));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12232) : f.call(null,G__12232));
});
var G__12245__4 = (function() { 
var G__12246__delegate = function (x,y,z,args){
var G__12237 = (function (){var G__12238 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12238) : g.call(null,G__12238));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12237) : f.call(null,G__12237));
};
var G__12246 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12247__i = 0, G__12247__a = new Array(arguments.length -  3);
while (G__12247__i < G__12247__a.length) {G__12247__a[G__12247__i] = arguments[G__12247__i + 3]; ++G__12247__i;}
  args = new cljs.core.IndexedSeq(G__12247__a,0);
} 
return G__12246__delegate.call(this,x,y,z,args);};
G__12246.cljs$lang$maxFixedArity = 3;
G__12246.cljs$lang$applyTo = (function (arglist__12248){
var x = cljs.core.first(arglist__12248);
arglist__12248 = cljs.core.next(arglist__12248);
var y = cljs.core.first(arglist__12248);
arglist__12248 = cljs.core.next(arglist__12248);
var z = cljs.core.first(arglist__12248);
var args = cljs.core.rest(arglist__12248);
return G__12246__delegate(x,y,z,args);
});
G__12246.cljs$core$IFn$_invoke$arity$variadic = G__12246__delegate;
return G__12246;
})()
;
G__12245 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12245__0.call(this);
case 1:
return G__12245__1.call(this,x);
case 2:
return G__12245__2.call(this,x,y);
case 3:
return G__12245__3.call(this,x,y,z);
default:
var G__12249 = null;
if (arguments.length > 3) {
var G__12250__i = 0, G__12250__a = new Array(arguments.length -  3);
while (G__12250__i < G__12250__a.length) {G__12250__a[G__12250__i] = arguments[G__12250__i + 3]; ++G__12250__i;}
G__12249 = new cljs.core.IndexedSeq(G__12250__a,0);
}
return G__12245__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12245.cljs$lang$maxFixedArity = 3;
G__12245.cljs$lang$applyTo = G__12245__4.cljs$lang$applyTo;
G__12245.cljs$core$IFn$_invoke$arity$0 = G__12245__0;
G__12245.cljs$core$IFn$_invoke$arity$1 = G__12245__1;
G__12245.cljs$core$IFn$_invoke$arity$2 = G__12245__2;
G__12245.cljs$core$IFn$_invoke$arity$3 = G__12245__3;
G__12245.cljs$core$IFn$_invoke$arity$variadic = G__12245__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12245;
})()
});
var cljs$core$comp__4 = (function() { 
var G__12251__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__12252__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__12253 = cljs.core.first(fs__$2).call(null,ret);
var G__12254 = cljs.core.next(fs__$2);
ret = G__12253;
fs__$2 = G__12254;
continue;
} else {
return ret;
}
break;
}
};
var G__12252 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12255__i = 0, G__12255__a = new Array(arguments.length -  0);
while (G__12255__i < G__12255__a.length) {G__12255__a[G__12255__i] = arguments[G__12255__i + 0]; ++G__12255__i;}
  args = new cljs.core.IndexedSeq(G__12255__a,0);
} 
return G__12252__delegate.call(this,args);};
G__12252.cljs$lang$maxFixedArity = 0;
G__12252.cljs$lang$applyTo = (function (arglist__12256){
var args = cljs.core.seq(arglist__12256);
return G__12252__delegate(args);
});
G__12252.cljs$core$IFn$_invoke$arity$variadic = G__12252__delegate;
return G__12252;
})()
;
;})(fs__$1))
};
var G__12251 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__12257__i = 0, G__12257__a = new Array(arguments.length -  3);
while (G__12257__i < G__12257__a.length) {G__12257__a[G__12257__i] = arguments[G__12257__i + 3]; ++G__12257__i;}
  fs = new cljs.core.IndexedSeq(G__12257__a,0);
} 
return G__12251__delegate.call(this,f1,f2,f3,fs);};
G__12251.cljs$lang$maxFixedArity = 3;
G__12251.cljs$lang$applyTo = (function (arglist__12258){
var f1 = cljs.core.first(arglist__12258);
arglist__12258 = cljs.core.next(arglist__12258);
var f2 = cljs.core.first(arglist__12258);
arglist__12258 = cljs.core.next(arglist__12258);
var f3 = cljs.core.first(arglist__12258);
var fs = cljs.core.rest(arglist__12258);
return G__12251__delegate(f1,f2,f3,fs);
});
G__12251.cljs$core$IFn$_invoke$arity$variadic = G__12251__delegate;
return G__12251;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__12259 = null;
if (arguments.length > 3) {
var G__12260__i = 0, G__12260__a = new Array(arguments.length -  3);
while (G__12260__i < G__12260__a.length) {G__12260__a[G__12260__i] = arguments[G__12260__i + 3]; ++G__12260__i;}
G__12259 = new cljs.core.IndexedSeq(G__12260__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__12259);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__12345 = null;
var G__12345__0 = (function (){
var G__12303 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12303) : f.call(null,G__12303));
});
var G__12345__1 = (function (x){
var G__12304 = arg1;
var G__12305 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12304,G__12305) : f.call(null,G__12304,G__12305));
});
var G__12345__2 = (function (x,y){
var G__12306 = arg1;
var G__12307 = x;
var G__12308 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12306,G__12307,G__12308) : f.call(null,G__12306,G__12307,G__12308));
});
var G__12345__3 = (function (x,y,z){
var G__12309 = arg1;
var G__12310 = x;
var G__12311 = y;
var G__12312 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12309,G__12310,G__12311,G__12312) : f.call(null,G__12309,G__12310,G__12311,G__12312));
});
var G__12345__4 = (function() { 
var G__12346__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__12346 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12347__i = 0, G__12347__a = new Array(arguments.length -  3);
while (G__12347__i < G__12347__a.length) {G__12347__a[G__12347__i] = arguments[G__12347__i + 3]; ++G__12347__i;}
  args = new cljs.core.IndexedSeq(G__12347__a,0);
} 
return G__12346__delegate.call(this,x,y,z,args);};
G__12346.cljs$lang$maxFixedArity = 3;
G__12346.cljs$lang$applyTo = (function (arglist__12348){
var x = cljs.core.first(arglist__12348);
arglist__12348 = cljs.core.next(arglist__12348);
var y = cljs.core.first(arglist__12348);
arglist__12348 = cljs.core.next(arglist__12348);
var z = cljs.core.first(arglist__12348);
var args = cljs.core.rest(arglist__12348);
return G__12346__delegate(x,y,z,args);
});
G__12346.cljs$core$IFn$_invoke$arity$variadic = G__12346__delegate;
return G__12346;
})()
;
G__12345 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12345__0.call(this);
case 1:
return G__12345__1.call(this,x);
case 2:
return G__12345__2.call(this,x,y);
case 3:
return G__12345__3.call(this,x,y,z);
default:
var G__12349 = null;
if (arguments.length > 3) {
var G__12350__i = 0, G__12350__a = new Array(arguments.length -  3);
while (G__12350__i < G__12350__a.length) {G__12350__a[G__12350__i] = arguments[G__12350__i + 3]; ++G__12350__i;}
G__12349 = new cljs.core.IndexedSeq(G__12350__a,0);
}
return G__12345__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12345.cljs$lang$maxFixedArity = 3;
G__12345.cljs$lang$applyTo = G__12345__4.cljs$lang$applyTo;
G__12345.cljs$core$IFn$_invoke$arity$0 = G__12345__0;
G__12345.cljs$core$IFn$_invoke$arity$1 = G__12345__1;
G__12345.cljs$core$IFn$_invoke$arity$2 = G__12345__2;
G__12345.cljs$core$IFn$_invoke$arity$3 = G__12345__3;
G__12345.cljs$core$IFn$_invoke$arity$variadic = G__12345__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12345;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__12351 = null;
var G__12351__0 = (function (){
var G__12313 = arg1;
var G__12314 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12313,G__12314) : f.call(null,G__12313,G__12314));
});
var G__12351__1 = (function (x){
var G__12315 = arg1;
var G__12316 = arg2;
var G__12317 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12315,G__12316,G__12317) : f.call(null,G__12315,G__12316,G__12317));
});
var G__12351__2 = (function (x,y){
var G__12318 = arg1;
var G__12319 = arg2;
var G__12320 = x;
var G__12321 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12318,G__12319,G__12320,G__12321) : f.call(null,G__12318,G__12319,G__12320,G__12321));
});
var G__12351__3 = (function (x,y,z){
var G__12322 = arg1;
var G__12323 = arg2;
var G__12324 = x;
var G__12325 = y;
var G__12326 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12322,G__12323,G__12324,G__12325,G__12326) : f.call(null,G__12322,G__12323,G__12324,G__12325,G__12326));
});
var G__12351__4 = (function() { 
var G__12352__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__12352 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12353__i = 0, G__12353__a = new Array(arguments.length -  3);
while (G__12353__i < G__12353__a.length) {G__12353__a[G__12353__i] = arguments[G__12353__i + 3]; ++G__12353__i;}
  args = new cljs.core.IndexedSeq(G__12353__a,0);
} 
return G__12352__delegate.call(this,x,y,z,args);};
G__12352.cljs$lang$maxFixedArity = 3;
G__12352.cljs$lang$applyTo = (function (arglist__12354){
var x = cljs.core.first(arglist__12354);
arglist__12354 = cljs.core.next(arglist__12354);
var y = cljs.core.first(arglist__12354);
arglist__12354 = cljs.core.next(arglist__12354);
var z = cljs.core.first(arglist__12354);
var args = cljs.core.rest(arglist__12354);
return G__12352__delegate(x,y,z,args);
});
G__12352.cljs$core$IFn$_invoke$arity$variadic = G__12352__delegate;
return G__12352;
})()
;
G__12351 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12351__0.call(this);
case 1:
return G__12351__1.call(this,x);
case 2:
return G__12351__2.call(this,x,y);
case 3:
return G__12351__3.call(this,x,y,z);
default:
var G__12355 = null;
if (arguments.length > 3) {
var G__12356__i = 0, G__12356__a = new Array(arguments.length -  3);
while (G__12356__i < G__12356__a.length) {G__12356__a[G__12356__i] = arguments[G__12356__i + 3]; ++G__12356__i;}
G__12355 = new cljs.core.IndexedSeq(G__12356__a,0);
}
return G__12351__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12351.cljs$lang$maxFixedArity = 3;
G__12351.cljs$lang$applyTo = G__12351__4.cljs$lang$applyTo;
G__12351.cljs$core$IFn$_invoke$arity$0 = G__12351__0;
G__12351.cljs$core$IFn$_invoke$arity$1 = G__12351__1;
G__12351.cljs$core$IFn$_invoke$arity$2 = G__12351__2;
G__12351.cljs$core$IFn$_invoke$arity$3 = G__12351__3;
G__12351.cljs$core$IFn$_invoke$arity$variadic = G__12351__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12351;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__12357 = null;
var G__12357__0 = (function (){
var G__12327 = arg1;
var G__12328 = arg2;
var G__12329 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12327,G__12328,G__12329) : f.call(null,G__12327,G__12328,G__12329));
});
var G__12357__1 = (function (x){
var G__12330 = arg1;
var G__12331 = arg2;
var G__12332 = arg3;
var G__12333 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12330,G__12331,G__12332,G__12333) : f.call(null,G__12330,G__12331,G__12332,G__12333));
});
var G__12357__2 = (function (x,y){
var G__12334 = arg1;
var G__12335 = arg2;
var G__12336 = arg3;
var G__12337 = x;
var G__12338 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12334,G__12335,G__12336,G__12337,G__12338) : f.call(null,G__12334,G__12335,G__12336,G__12337,G__12338));
});
var G__12357__3 = (function (x,y,z){
var G__12339 = arg1;
var G__12340 = arg2;
var G__12341 = arg3;
var G__12342 = x;
var G__12343 = y;
var G__12344 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12339,G__12340,G__12341,G__12342,G__12343,G__12344) : f.call(null,G__12339,G__12340,G__12341,G__12342,G__12343,G__12344));
});
var G__12357__4 = (function() { 
var G__12358__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__12358 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12359__i = 0, G__12359__a = new Array(arguments.length -  3);
while (G__12359__i < G__12359__a.length) {G__12359__a[G__12359__i] = arguments[G__12359__i + 3]; ++G__12359__i;}
  args = new cljs.core.IndexedSeq(G__12359__a,0);
} 
return G__12358__delegate.call(this,x,y,z,args);};
G__12358.cljs$lang$maxFixedArity = 3;
G__12358.cljs$lang$applyTo = (function (arglist__12360){
var x = cljs.core.first(arglist__12360);
arglist__12360 = cljs.core.next(arglist__12360);
var y = cljs.core.first(arglist__12360);
arglist__12360 = cljs.core.next(arglist__12360);
var z = cljs.core.first(arglist__12360);
var args = cljs.core.rest(arglist__12360);
return G__12358__delegate(x,y,z,args);
});
G__12358.cljs$core$IFn$_invoke$arity$variadic = G__12358__delegate;
return G__12358;
})()
;
G__12357 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12357__0.call(this);
case 1:
return G__12357__1.call(this,x);
case 2:
return G__12357__2.call(this,x,y);
case 3:
return G__12357__3.call(this,x,y,z);
default:
var G__12361 = null;
if (arguments.length > 3) {
var G__12362__i = 0, G__12362__a = new Array(arguments.length -  3);
while (G__12362__i < G__12362__a.length) {G__12362__a[G__12362__i] = arguments[G__12362__i + 3]; ++G__12362__i;}
G__12361 = new cljs.core.IndexedSeq(G__12362__a,0);
}
return G__12357__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12361);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12357.cljs$lang$maxFixedArity = 3;
G__12357.cljs$lang$applyTo = G__12357__4.cljs$lang$applyTo;
G__12357.cljs$core$IFn$_invoke$arity$0 = G__12357__0;
G__12357.cljs$core$IFn$_invoke$arity$1 = G__12357__1;
G__12357.cljs$core$IFn$_invoke$arity$2 = G__12357__2;
G__12357.cljs$core$IFn$_invoke$arity$3 = G__12357__3;
G__12357.cljs$core$IFn$_invoke$arity$variadic = G__12357__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12357;
})()
});
var cljs$core$partial__5 = (function() { 
var G__12363__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__12364__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__12364 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12365__i = 0, G__12365__a = new Array(arguments.length -  0);
while (G__12365__i < G__12365__a.length) {G__12365__a[G__12365__i] = arguments[G__12365__i + 0]; ++G__12365__i;}
  args = new cljs.core.IndexedSeq(G__12365__a,0);
} 
return G__12364__delegate.call(this,args);};
G__12364.cljs$lang$maxFixedArity = 0;
G__12364.cljs$lang$applyTo = (function (arglist__12366){
var args = cljs.core.seq(arglist__12366);
return G__12364__delegate(args);
});
G__12364.cljs$core$IFn$_invoke$arity$variadic = G__12364__delegate;
return G__12364;
})()
;
};
var G__12363 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__12367__i = 0, G__12367__a = new Array(arguments.length -  4);
while (G__12367__i < G__12367__a.length) {G__12367__a[G__12367__i] = arguments[G__12367__i + 4]; ++G__12367__i;}
  more = new cljs.core.IndexedSeq(G__12367__a,0);
} 
return G__12363__delegate.call(this,f,arg1,arg2,arg3,more);};
G__12363.cljs$lang$maxFixedArity = 4;
G__12363.cljs$lang$applyTo = (function (arglist__12368){
var f = cljs.core.first(arglist__12368);
arglist__12368 = cljs.core.next(arglist__12368);
var arg1 = cljs.core.first(arglist__12368);
arglist__12368 = cljs.core.next(arglist__12368);
var arg2 = cljs.core.first(arglist__12368);
arglist__12368 = cljs.core.next(arglist__12368);
var arg3 = cljs.core.first(arglist__12368);
var more = cljs.core.rest(arglist__12368);
return G__12363__delegate(f,arg1,arg2,arg3,more);
});
G__12363.cljs$core$IFn$_invoke$arity$variadic = G__12363__delegate;
return G__12363;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__12369 = null;
if (arguments.length > 4) {
var G__12370__i = 0, G__12370__a = new Array(arguments.length -  4);
while (G__12370__i < G__12370__a.length) {G__12370__a[G__12370__i] = arguments[G__12370__i + 4]; ++G__12370__i;}
G__12369 = new cljs.core.IndexedSeq(G__12370__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__12369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__12403 = null;
var G__12403__1 = (function (a){
var G__12387 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12387) : f.call(null,G__12387));
});
var G__12403__2 = (function (a,b){
var G__12388 = (((a == null))?x:a);
var G__12389 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12388,G__12389) : f.call(null,G__12388,G__12389));
});
var G__12403__3 = (function (a,b,c){
var G__12390 = (((a == null))?x:a);
var G__12391 = b;
var G__12392 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12390,G__12391,G__12392) : f.call(null,G__12390,G__12391,G__12392));
});
var G__12403__4 = (function() { 
var G__12404__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__12404 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12405__i = 0, G__12405__a = new Array(arguments.length -  3);
while (G__12405__i < G__12405__a.length) {G__12405__a[G__12405__i] = arguments[G__12405__i + 3]; ++G__12405__i;}
  ds = new cljs.core.IndexedSeq(G__12405__a,0);
} 
return G__12404__delegate.call(this,a,b,c,ds);};
G__12404.cljs$lang$maxFixedArity = 3;
G__12404.cljs$lang$applyTo = (function (arglist__12406){
var a = cljs.core.first(arglist__12406);
arglist__12406 = cljs.core.next(arglist__12406);
var b = cljs.core.first(arglist__12406);
arglist__12406 = cljs.core.next(arglist__12406);
var c = cljs.core.first(arglist__12406);
var ds = cljs.core.rest(arglist__12406);
return G__12404__delegate(a,b,c,ds);
});
G__12404.cljs$core$IFn$_invoke$arity$variadic = G__12404__delegate;
return G__12404;
})()
;
G__12403 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__12403__1.call(this,a);
case 2:
return G__12403__2.call(this,a,b);
case 3:
return G__12403__3.call(this,a,b,c);
default:
var G__12407 = null;
if (arguments.length > 3) {
var G__12408__i = 0, G__12408__a = new Array(arguments.length -  3);
while (G__12408__i < G__12408__a.length) {G__12408__a[G__12408__i] = arguments[G__12408__i + 3]; ++G__12408__i;}
G__12407 = new cljs.core.IndexedSeq(G__12408__a,0);
}
return G__12403__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12407);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12403.cljs$lang$maxFixedArity = 3;
G__12403.cljs$lang$applyTo = G__12403__4.cljs$lang$applyTo;
G__12403.cljs$core$IFn$_invoke$arity$1 = G__12403__1;
G__12403.cljs$core$IFn$_invoke$arity$2 = G__12403__2;
G__12403.cljs$core$IFn$_invoke$arity$3 = G__12403__3;
G__12403.cljs$core$IFn$_invoke$arity$variadic = G__12403__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12403;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__12409 = null;
var G__12409__2 = (function (a,b){
var G__12393 = (((a == null))?x:a);
var G__12394 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12393,G__12394) : f.call(null,G__12393,G__12394));
});
var G__12409__3 = (function (a,b,c){
var G__12395 = (((a == null))?x:a);
var G__12396 = (((b == null))?y:b);
var G__12397 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12395,G__12396,G__12397) : f.call(null,G__12395,G__12396,G__12397));
});
var G__12409__4 = (function() { 
var G__12410__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__12410 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12411__i = 0, G__12411__a = new Array(arguments.length -  3);
while (G__12411__i < G__12411__a.length) {G__12411__a[G__12411__i] = arguments[G__12411__i + 3]; ++G__12411__i;}
  ds = new cljs.core.IndexedSeq(G__12411__a,0);
} 
return G__12410__delegate.call(this,a,b,c,ds);};
G__12410.cljs$lang$maxFixedArity = 3;
G__12410.cljs$lang$applyTo = (function (arglist__12412){
var a = cljs.core.first(arglist__12412);
arglist__12412 = cljs.core.next(arglist__12412);
var b = cljs.core.first(arglist__12412);
arglist__12412 = cljs.core.next(arglist__12412);
var c = cljs.core.first(arglist__12412);
var ds = cljs.core.rest(arglist__12412);
return G__12410__delegate(a,b,c,ds);
});
G__12410.cljs$core$IFn$_invoke$arity$variadic = G__12410__delegate;
return G__12410;
})()
;
G__12409 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__12409__2.call(this,a,b);
case 3:
return G__12409__3.call(this,a,b,c);
default:
var G__12413 = null;
if (arguments.length > 3) {
var G__12414__i = 0, G__12414__a = new Array(arguments.length -  3);
while (G__12414__i < G__12414__a.length) {G__12414__a[G__12414__i] = arguments[G__12414__i + 3]; ++G__12414__i;}
G__12413 = new cljs.core.IndexedSeq(G__12414__a,0);
}
return G__12409__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12413);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12409.cljs$lang$maxFixedArity = 3;
G__12409.cljs$lang$applyTo = G__12409__4.cljs$lang$applyTo;
G__12409.cljs$core$IFn$_invoke$arity$2 = G__12409__2;
G__12409.cljs$core$IFn$_invoke$arity$3 = G__12409__3;
G__12409.cljs$core$IFn$_invoke$arity$variadic = G__12409__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12409;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__12415 = null;
var G__12415__2 = (function (a,b){
var G__12398 = (((a == null))?x:a);
var G__12399 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12398,G__12399) : f.call(null,G__12398,G__12399));
});
var G__12415__3 = (function (a,b,c){
var G__12400 = (((a == null))?x:a);
var G__12401 = (((b == null))?y:b);
var G__12402 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12400,G__12401,G__12402) : f.call(null,G__12400,G__12401,G__12402));
});
var G__12415__4 = (function() { 
var G__12416__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__12416 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12417__i = 0, G__12417__a = new Array(arguments.length -  3);
while (G__12417__i < G__12417__a.length) {G__12417__a[G__12417__i] = arguments[G__12417__i + 3]; ++G__12417__i;}
  ds = new cljs.core.IndexedSeq(G__12417__a,0);
} 
return G__12416__delegate.call(this,a,b,c,ds);};
G__12416.cljs$lang$maxFixedArity = 3;
G__12416.cljs$lang$applyTo = (function (arglist__12418){
var a = cljs.core.first(arglist__12418);
arglist__12418 = cljs.core.next(arglist__12418);
var b = cljs.core.first(arglist__12418);
arglist__12418 = cljs.core.next(arglist__12418);
var c = cljs.core.first(arglist__12418);
var ds = cljs.core.rest(arglist__12418);
return G__12416__delegate(a,b,c,ds);
});
G__12416.cljs$core$IFn$_invoke$arity$variadic = G__12416__delegate;
return G__12416;
})()
;
G__12415 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__12415__2.call(this,a,b);
case 3:
return G__12415__3.call(this,a,b,c);
default:
var G__12419 = null;
if (arguments.length > 3) {
var G__12420__i = 0, G__12420__a = new Array(arguments.length -  3);
while (G__12420__i < G__12420__a.length) {G__12420__a[G__12420__i] = arguments[G__12420__i + 3]; ++G__12420__i;}
G__12419 = new cljs.core.IndexedSeq(G__12420__a,0);
}
return G__12415__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12419);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12415.cljs$lang$maxFixedArity = 3;
G__12415.cljs$lang$applyTo = G__12415__4.cljs$lang$applyTo;
G__12415.cljs$core$IFn$_invoke$arity$2 = G__12415__2;
G__12415.cljs$core$IFn$_invoke$arity$3 = G__12415__3;
G__12415.cljs$core$IFn$_invoke$arity$variadic = G__12415__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12415;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__12451 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__12451) : cljs.core.volatile_BANG_.call(null,G__12451));
})();
return ((function (i){
return (function() {
var G__12481 = null;
var G__12481__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12481__1 = (function (result){
var G__12452 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12452) : rf.call(null,G__12452));
});
var G__12481__2 = (function (result,input){
var G__12453 = result;
var G__12454 = (function (){var G__12455 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__12456 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12455,G__12456) : f.call(null,G__12455,G__12456));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12453,G__12454) : rf.call(null,G__12453,G__12454));
});
G__12481 = function(result,input){
switch(arguments.length){
case 0:
return G__12481__0.call(this);
case 1:
return G__12481__1.call(this,result);
case 2:
return G__12481__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12481.cljs$core$IFn$_invoke$arity$0 = G__12481__0;
G__12481.cljs$core$IFn$_invoke$arity$1 = G__12481__1;
G__12481.cljs$core$IFn$_invoke$arity$2 = G__12481__2;
return G__12481;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4963__auto___12482 = size;
var i_12483 = (0);
while(true){
if((i_12483 < n__4963__auto___12482)){
cljs.core.chunk_append(b,(function (){var G__12477 = (idx + i_12483);
var G__12478 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_12483);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12477,G__12478) : f.call(null,G__12477,G__12478));
})());

var G__12484 = (i_12483 + (1));
i_12483 = G__12484;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__12479 = idx;
var G__12480 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12479,G__12480) : f.call(null,G__12479,G__12480));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__12503 = null;
var G__12503__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12503__1 = (function (result){
var G__12497 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12497) : rf.call(null,G__12497));
});
var G__12503__2 = (function (result,input){
var v = (function (){var G__12498 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12498) : f.call(null,G__12498));
})();
if((v == null)){
return result;
} else {
var G__12499 = result;
var G__12500 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12499,G__12500) : rf.call(null,G__12499,G__12500));
}
});
G__12503 = function(result,input){
switch(arguments.length){
case 0:
return G__12503__0.call(this);
case 1:
return G__12503__1.call(this,result);
case 2:
return G__12503__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12503.cljs$core$IFn$_invoke$arity$0 = G__12503__0;
G__12503.cljs$core$IFn$_invoke$arity$1 = G__12503__1;
G__12503.cljs$core$IFn$_invoke$arity$2 = G__12503__2;
return G__12503;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4963__auto___12504 = size;
var i_12505 = (0);
while(true){
if((i_12505 < n__4963__auto___12504)){
var x_12506 = (function (){var G__12501 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_12505);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12501) : f.call(null,G__12501));
})();
if((x_12506 == null)){
} else {
cljs.core.chunk_append(b,x_12506);
}

var G__12507 = (i_12505 + (1));
i_12505 = G__12507;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__12502 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12502) : f.call(null,G__12502));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition1$ = 16386;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
})
cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__12508 = cljs.core.seq(self__.watches);
var chunk__12509 = null;
var count__12510 = (0);
var i__12511 = (0);
while(true){
if((i__12511 < count__12510)){
var vec__12512 = chunk__12509.cljs$core$IIndexed$_nth$arity$2(null,i__12511);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12512,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12512,(1),null);
var G__12513_12523 = key;
var G__12514_12524 = this$__$1;
var G__12515_12525 = oldval;
var G__12516_12526 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12513_12523,G__12514_12524,G__12515_12525,G__12516_12526) : f.call(null,G__12513_12523,G__12514_12524,G__12515_12525,G__12516_12526));

var G__12527 = seq__12508;
var G__12528 = chunk__12509;
var G__12529 = count__12510;
var G__12530 = (i__12511 + (1));
seq__12508 = G__12527;
chunk__12509 = G__12528;
count__12510 = G__12529;
i__12511 = G__12530;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__12508);
if(temp__4425__auto__){
var seq__12508__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__12508__$1)){
var c__4863__auto__ = cljs.core.chunk_first(seq__12508__$1);
var G__12531 = cljs.core.chunk_rest(seq__12508__$1);
var G__12532 = c__4863__auto__;
var G__12533 = cljs.core.count(c__4863__auto__);
var G__12534 = (0);
seq__12508 = G__12531;
chunk__12509 = G__12532;
count__12510 = G__12533;
i__12511 = G__12534;
continue;
} else {
var vec__12517 = cljs.core.first(seq__12508__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12517,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12517,(1),null);
var G__12518_12535 = key;
var G__12519_12536 = this$__$1;
var G__12520_12537 = oldval;
var G__12521_12538 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12518_12535,G__12519_12536,G__12520_12537,G__12521_12538) : f.call(null,G__12518_12535,G__12519_12536,G__12520_12537,G__12521_12538));

var G__12539 = cljs.core.next(seq__12508__$1);
var G__12540 = null;
var G__12541 = (0);
var G__12542 = (0);
seq__12508 = G__12539;
chunk__12509 = G__12540;
count__12510 = G__12541;
i__12511 = G__12542;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12522 = this$__$1;
return goog.getUid(G__12522);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__12546__delegate = function (x,p__12543){
var map__12545 = p__12543;
var map__12545__$1 = ((cljs.core.seq_QMARK_(map__12545))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12545):map__12545);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12545__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12545__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__12546 = function (x,var_args){
var p__12543 = null;
if (arguments.length > 1) {
var G__12547__i = 0, G__12547__a = new Array(arguments.length -  1);
while (G__12547__i < G__12547__a.length) {G__12547__a[G__12547__i] = arguments[G__12547__i + 1]; ++G__12547__i;}
  p__12543 = new cljs.core.IndexedSeq(G__12547__a,0);
} 
return G__12546__delegate.call(this,x,p__12543);};
G__12546.cljs$lang$maxFixedArity = 1;
G__12546.cljs$lang$applyTo = (function (arglist__12548){
var x = cljs.core.first(arglist__12548);
var p__12543 = cljs.core.rest(arglist__12548);
return G__12546__delegate(x,p__12543);
});
G__12546.cljs$core$IFn$_invoke$arity$variadic = G__12546__delegate;
return G__12546;
})()
;
cljs$core$atom = function(x,var_args){
var p__12543 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__12549 = null;
if (arguments.length > 1) {
var G__12550__i = 0, G__12550__a = new Array(arguments.length -  1);
while (G__12550__i < G__12550__a.length) {G__12550__a[G__12550__i] = arguments[G__12550__i + 1]; ++G__12550__i;}
G__12549 = new cljs.core.IndexedSeq(G__12550__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12549);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__12553 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__12553) : validate.call(null,G__12553));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__12554 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__12554) : cljs.core.pr_str.call(null,G__12554));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12561 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12561) : f.call(null,G__12561));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12562 = a.state;
var G__12563 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12562,G__12563) : f.call(null,G__12562,G__12563));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12564 = a.state;
var G__12565 = x;
var G__12566 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12564,G__12565,G__12566) : f.call(null,G__12564,G__12565,G__12566));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__12567__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__12567 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__12568__i = 0, G__12568__a = new Array(arguments.length -  4);
while (G__12568__i < G__12568__a.length) {G__12568__a[G__12568__i] = arguments[G__12568__i + 4]; ++G__12568__i;}
  more = new cljs.core.IndexedSeq(G__12568__a,0);
} 
return G__12567__delegate.call(this,a,f,x,y,more);};
G__12567.cljs$lang$maxFixedArity = 4;
G__12567.cljs$lang$applyTo = (function (arglist__12569){
var a = cljs.core.first(arglist__12569);
arglist__12569 = cljs.core.next(arglist__12569);
var f = cljs.core.first(arglist__12569);
arglist__12569 = cljs.core.next(arglist__12569);
var x = cljs.core.first(arglist__12569);
arglist__12569 = cljs.core.next(arglist__12569);
var y = cljs.core.first(arglist__12569);
var more = cljs.core.rest(arglist__12569);
return G__12567__delegate(a,f,x,y,more);
});
G__12567.cljs$core$IFn$_invoke$arity$variadic = G__12567__delegate;
return G__12567;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__12570 = null;
if (arguments.length > 4) {
var G__12571__i = 0, G__12571__a = new Array(arguments.length -  4);
while (G__12571__i < G__12571__a.length) {G__12571__a[G__12571__i] = arguments[G__12571__i + 4]; ++G__12571__i;}
G__12570 = new cljs.core.IndexedSeq(G__12571__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__12570);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__12638 = null;
var G__12638__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12638__1 = (function (result){
var G__12605 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12605) : rf.call(null,G__12605));
});
var G__12638__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__12606 = i;
var G__12607 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12606,G__12607) : f.call(null,G__12606,G__12607));
})();
if((v == null)){
return result;
} else {
var G__12608 = result;
var G__12609 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12608,G__12609) : rf.call(null,G__12608,G__12609));
}
});
G__12638 = function(result,input){
switch(arguments.length){
case 0:
return G__12638__0.call(this);
case 1:
return G__12638__1.call(this,result);
case 2:
return G__12638__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12638.cljs$core$IFn$_invoke$arity$0 = G__12638__0;
G__12638.cljs$core$IFn$_invoke$arity$1 = G__12638__1;
G__12638.cljs$core$IFn$_invoke$arity$2 = G__12638__2;
return G__12638;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4963__auto___12639 = size;
var i_12640 = (0);
while(true){
if((i_12640 < n__4963__auto___12639)){
var x_12641 = (function (){var G__12634 = (idx + i_12640);
var G__12635 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_12640);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12634,G__12635) : f.call(null,G__12634,G__12635));
})();
if((x_12641 == null)){
} else {
cljs.core.chunk_append(b,x_12641);
}

var G__12642 = (i_12640 + (1));
i_12640 = G__12642;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__12636 = idx;
var G__12637 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12636,G__12637) : f.call(null,G__12636,G__12637));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__12856 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12856) : p.call(null,G__12856));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4064__auto__ = (function (){var G__12858 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12858) : p.call(null,G__12858));
})();
if(cljs.core.truth_(and__4064__auto__)){
var G__12859 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12859) : p.call(null,G__12859));
} else {
return and__4064__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4064__auto__ = (function (){var G__12861 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12861) : p.call(null,G__12861));
})();
if(cljs.core.truth_(and__4064__auto__)){
var and__4064__auto____$1 = (function (){var G__12863 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12863) : p.call(null,G__12863));
})();
if(cljs.core.truth_(and__4064__auto____$1)){
var G__12864 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12864) : p.call(null,G__12864));
} else {
return and__4064__auto____$1;
}
} else {
return and__4064__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__13033__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__13033 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13034__i = 0, G__13034__a = new Array(arguments.length -  3);
while (G__13034__i < G__13034__a.length) {G__13034__a[G__13034__i] = arguments[G__13034__i + 3]; ++G__13034__i;}
  args = new cljs.core.IndexedSeq(G__13034__a,0);
} 
return G__13033__delegate.call(this,x,y,z,args);};
G__13033.cljs$lang$maxFixedArity = 3;
G__13033.cljs$lang$applyTo = (function (arglist__13035){
var x = cljs.core.first(arglist__13035);
arglist__13035 = cljs.core.next(arglist__13035);
var y = cljs.core.first(arglist__13035);
arglist__13035 = cljs.core.next(arglist__13035);
var z = cljs.core.first(arglist__13035);
var args = cljs.core.rest(arglist__13035);
return G__13033__delegate(x,y,z,args);
});
G__13033.cljs$core$IFn$_invoke$arity$variadic = G__13033__delegate;
return G__13033;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__13036 = null;
if (arguments.length > 3) {
var G__13037__i = 0, G__13037__a = new Array(arguments.length -  3);
while (G__13037__i < G__13037__a.length) {G__13037__a[G__13037__i] = arguments[G__13037__i + 3]; ++G__13037__i;}
G__13036 = new cljs.core.IndexedSeq(G__13037__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13036);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__4064__auto__ = (function (){var G__12896 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12896) : p1.call(null,G__12896));
})();
if(cljs.core.truth_(and__4064__auto__)){
var G__12897 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12897) : p2.call(null,G__12897));
} else {
return and__4064__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4064__auto__ = (function (){var G__12899 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12899) : p1.call(null,G__12899));
})();
if(cljs.core.truth_(and__4064__auto__)){
var and__4064__auto____$1 = (function (){var G__12901 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12901) : p1.call(null,G__12901));
})();
if(cljs.core.truth_(and__4064__auto____$1)){
var and__4064__auto____$2 = (function (){var G__12903 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12903) : p2.call(null,G__12903));
})();
if(cljs.core.truth_(and__4064__auto____$2)){
var G__12904 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12904) : p2.call(null,G__12904));
} else {
return and__4064__auto____$2;
}
} else {
return and__4064__auto____$1;
}
} else {
return and__4064__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4064__auto__ = (function (){var G__12906 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12906) : p1.call(null,G__12906));
})();
if(cljs.core.truth_(and__4064__auto__)){
var and__4064__auto____$1 = (function (){var G__12908 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12908) : p1.call(null,G__12908));
})();
if(cljs.core.truth_(and__4064__auto____$1)){
var and__4064__auto____$2 = (function (){var G__12910 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12910) : p1.call(null,G__12910));
})();
if(cljs.core.truth_(and__4064__auto____$2)){
var and__4064__auto____$3 = (function (){var G__12912 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12912) : p2.call(null,G__12912));
})();
if(cljs.core.truth_(and__4064__auto____$3)){
var and__4064__auto____$4 = (function (){var G__12914 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12914) : p2.call(null,G__12914));
})();
if(cljs.core.truth_(and__4064__auto____$4)){
var G__12915 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12915) : p2.call(null,G__12915));
} else {
return and__4064__auto____$4;
}
} else {
return and__4064__auto____$3;
}
} else {
return and__4064__auto____$2;
}
} else {
return and__4064__auto____$1;
}
} else {
return and__4064__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__13038__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__12643_SHARP_){
var and__4064__auto__ = (function (){var G__12920 = p1__12643_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12920) : p1.call(null,G__12920));
})();
if(cljs.core.truth_(and__4064__auto__)){
var G__12921 = p1__12643_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12921) : p2.call(null,G__12921));
} else {
return and__4064__auto__;
}
}),args)));
};
var G__13038 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13039__i = 0, G__13039__a = new Array(arguments.length -  3);
while (G__13039__i < G__13039__a.length) {G__13039__a[G__13039__i] = arguments[G__13039__i + 3]; ++G__13039__i;}
  args = new cljs.core.IndexedSeq(G__13039__a,0);
} 
return G__13038__delegate.call(this,x,y,z,args);};
G__13038.cljs$lang$maxFixedArity = 3;
G__13038.cljs$lang$applyTo = (function (arglist__13040){
var x = cljs.core.first(arglist__13040);
arglist__13040 = cljs.core.next(arglist__13040);
var y = cljs.core.first(arglist__13040);
arglist__13040 = cljs.core.next(arglist__13040);
var z = cljs.core.first(arglist__13040);
var args = cljs.core.rest(arglist__13040);
return G__13038__delegate(x,y,z,args);
});
G__13038.cljs$core$IFn$_invoke$arity$variadic = G__13038__delegate;
return G__13038;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__13041 = null;
if (arguments.length > 3) {
var G__13042__i = 0, G__13042__a = new Array(arguments.length -  3);
while (G__13042__i < G__13042__a.length) {G__13042__a[G__13042__i] = arguments[G__13042__i + 3]; ++G__13042__i;}
G__13041 = new cljs.core.IndexedSeq(G__13042__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13041);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__4064__auto__ = (function (){var G__12967 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12967) : p1.call(null,G__12967));
})();
if(cljs.core.truth_(and__4064__auto__)){
var and__4064__auto____$1 = (function (){var G__12969 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12969) : p2.call(null,G__12969));
})();
if(cljs.core.truth_(and__4064__auto____$1)){
var G__12970 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12970) : p3.call(null,G__12970));
} else {
return and__4064__auto____$1;
}
} else {
return and__4064__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4064__auto__ = (function (){var G__12972 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12972) : p1.call(null,G__12972));
})();
if(cljs.core.truth_(and__4064__auto__)){
var and__4064__auto____$1 = (function (){var G__12974 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12974) : p2.call(null,G__12974));
})();
if(cljs.core.truth_(and__4064__auto____$1)){
var and__4064__auto____$2 = (function (){var G__12976 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12976) : p3.call(null,G__12976));
})();
if(cljs.core.truth_(and__4064__auto____$2)){
var and__4064__auto____$3 = (function (){var G__12978 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12978) : p1.call(null,G__12978));
})();
if(cljs.core.truth_(and__4064__auto____$3)){
var and__4064__auto____$4 = (function (){var G__12980 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12980) : p2.call(null,G__12980));
})();
if(cljs.core.truth_(and__4064__auto____$4)){
var G__12981 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12981) : p3.call(null,G__12981));
} else {
return and__4064__auto____$4;
}
} else {
return and__4064__auto____$3;
}
} else {
return and__4064__auto____$2;
}
} else {
return and__4064__auto____$1;
}
} else {
return and__4064__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4064__auto__ = (function (){var G__12983 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12983) : p1.call(null,G__12983));
})();
if(cljs.core.truth_(and__4064__auto__)){
var and__4064__auto____$1 = (function (){var G__12985 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12985) : p2.call(null,G__12985));
})();
if(cljs.core.truth_(and__4064__auto____$1)){
var and__4064__auto____$2 = (function (){var G__12987 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12987) : p3.call(null,G__12987));
})();
if(cljs.core.truth_(and__4064__auto____$2)){
var and__4064__auto____$3 = (function (){var G__12989 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12989) : p1.call(null,G__12989));
})();
if(cljs.core.truth_(and__4064__auto____$3)){
var and__4064__auto____$4 = (function (){var G__12991 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12991) : p2.call(null,G__12991));
})();
if(cljs.core.truth_(and__4064__auto____$4)){
var and__4064__auto____$5 = (function (){var G__12993 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12993) : p3.call(null,G__12993));
})();
if(cljs.core.truth_(and__4064__auto____$5)){
var and__4064__auto____$6 = (function (){var G__12995 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12995) : p1.call(null,G__12995));
})();
if(cljs.core.truth_(and__4064__auto____$6)){
var and__4064__auto____$7 = (function (){var G__12997 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12997) : p2.call(null,G__12997));
})();
if(cljs.core.truth_(and__4064__auto____$7)){
var G__12998 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12998) : p3.call(null,G__12998));
} else {
return and__4064__auto____$7;
}
} else {
return and__4064__auto____$6;
}
} else {
return and__4064__auto____$5;
}
} else {
return and__4064__auto____$4;
}
} else {
return and__4064__auto____$3;
}
} else {
return and__4064__auto____$2;
}
} else {
return and__4064__auto____$1;
}
} else {
return and__4064__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__13043__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__12644_SHARP_){
var and__4064__auto__ = (function (){var G__13005 = p1__12644_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13005) : p1.call(null,G__13005));
})();
if(cljs.core.truth_(and__4064__auto__)){
var and__4064__auto____$1 = (function (){var G__13007 = p1__12644_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13007) : p2.call(null,G__13007));
})();
if(cljs.core.truth_(and__4064__auto____$1)){
var G__13008 = p1__12644_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13008) : p3.call(null,G__13008));
} else {
return and__4064__auto____$1;
}
} else {
return and__4064__auto__;
}
}),args)));
};
var G__13043 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13044__i = 0, G__13044__a = new Array(arguments.length -  3);
while (G__13044__i < G__13044__a.length) {G__13044__a[G__13044__i] = arguments[G__13044__i + 3]; ++G__13044__i;}
  args = new cljs.core.IndexedSeq(G__13044__a,0);
} 
return G__13043__delegate.call(this,x,y,z,args);};
G__13043.cljs$lang$maxFixedArity = 3;
G__13043.cljs$lang$applyTo = (function (arglist__13045){
var x = cljs.core.first(arglist__13045);
arglist__13045 = cljs.core.next(arglist__13045);
var y = cljs.core.first(arglist__13045);
arglist__13045 = cljs.core.next(arglist__13045);
var z = cljs.core.first(arglist__13045);
var args = cljs.core.rest(arglist__13045);
return G__13043__delegate(x,y,z,args);
});
G__13043.cljs$core$IFn$_invoke$arity$variadic = G__13043__delegate;
return G__13043;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__13046 = null;
if (arguments.length > 3) {
var G__13047__i = 0, G__13047__a = new Array(arguments.length -  3);
while (G__13047__i < G__13047__a.length) {G__13047__a[G__13047__i] = arguments[G__13047__i + 3]; ++G__13047__i;}
G__13046 = new cljs.core.IndexedSeq(G__13047__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__13048__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12645_SHARP_){
var G__13024 = x;
return (p1__12645_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12645_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13024) : p1__12645_SHARP_.call(null,G__13024));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12646_SHARP_){
var and__4064__auto__ = (function (){var G__13026 = x;
return (p1__12646_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12646_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13026) : p1__12646_SHARP_.call(null,G__13026));
})();
if(cljs.core.truth_(and__4064__auto__)){
var G__13027 = y;
return (p1__12646_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12646_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13027) : p1__12646_SHARP_.call(null,G__13027));
} else {
return and__4064__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12647_SHARP_){
var and__4064__auto__ = (function (){var G__13029 = x;
return (p1__12647_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12647_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13029) : p1__12647_SHARP_.call(null,G__13029));
})();
if(cljs.core.truth_(and__4064__auto__)){
var and__4064__auto____$1 = (function (){var G__13031 = y;
return (p1__12647_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12647_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13031) : p1__12647_SHARP_.call(null,G__13031));
})();
if(cljs.core.truth_(and__4064__auto____$1)){
var G__13032 = z;
return (p1__12647_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12647_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13032) : p1__12647_SHARP_.call(null,G__13032));
} else {
return and__4064__auto____$1;
}
} else {
return and__4064__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__13049__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12648_SHARP_){
return cljs.core.every_QMARK_(p1__12648_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__13049 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13050__i = 0, G__13050__a = new Array(arguments.length -  3);
while (G__13050__i < G__13050__a.length) {G__13050__a[G__13050__i] = arguments[G__13050__i + 3]; ++G__13050__i;}
  args = new cljs.core.IndexedSeq(G__13050__a,0);
} 
return G__13049__delegate.call(this,x,y,z,args);};
G__13049.cljs$lang$maxFixedArity = 3;
G__13049.cljs$lang$applyTo = (function (arglist__13051){
var x = cljs.core.first(arglist__13051);
arglist__13051 = cljs.core.next(arglist__13051);
var y = cljs.core.first(arglist__13051);
arglist__13051 = cljs.core.next(arglist__13051);
var z = cljs.core.first(arglist__13051);
var args = cljs.core.rest(arglist__13051);
return G__13049__delegate(x,y,z,args);
});
G__13049.cljs$core$IFn$_invoke$arity$variadic = G__13049__delegate;
return G__13049;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__13052 = null;
if (arguments.length > 3) {
var G__13053__i = 0, G__13053__a = new Array(arguments.length -  3);
while (G__13053__i < G__13053__a.length) {G__13053__a[G__13053__i] = arguments[G__13053__i + 3]; ++G__13053__i;}
G__13052 = new cljs.core.IndexedSeq(G__13053__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__13048 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__13054__i = 0, G__13054__a = new Array(arguments.length -  3);
while (G__13054__i < G__13054__a.length) {G__13054__a[G__13054__i] = arguments[G__13054__i + 3]; ++G__13054__i;}
  ps = new cljs.core.IndexedSeq(G__13054__a,0);
} 
return G__13048__delegate.call(this,p1,p2,p3,ps);};
G__13048.cljs$lang$maxFixedArity = 3;
G__13048.cljs$lang$applyTo = (function (arglist__13055){
var p1 = cljs.core.first(arglist__13055);
arglist__13055 = cljs.core.next(arglist__13055);
var p2 = cljs.core.first(arglist__13055);
arglist__13055 = cljs.core.next(arglist__13055);
var p3 = cljs.core.first(arglist__13055);
var ps = cljs.core.rest(arglist__13055);
return G__13048__delegate(p1,p2,p3,ps);
});
G__13048.cljs$core$IFn$_invoke$arity$variadic = G__13048__delegate;
return G__13048;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__13056 = null;
if (arguments.length > 3) {
var G__13057__i = 0, G__13057__a = new Array(arguments.length -  3);
while (G__13057__i < G__13057__a.length) {G__13057__a[G__13057__i] = arguments[G__13057__i + 3]; ++G__13057__i;}
G__13056 = new cljs.core.IndexedSeq(G__13057__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__13056);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__13263 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13263) : p.call(null,G__13263));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__4076__auto__ = (function (){var G__13265 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13265) : p.call(null,G__13265));
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var G__13266 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13266) : p.call(null,G__13266));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__4076__auto__ = (function (){var G__13268 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13268) : p.call(null,G__13268));
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (function (){var G__13270 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13270) : p.call(null,G__13270));
})();
if(cljs.core.truth_(or__4076__auto____$1)){
return or__4076__auto____$1;
} else {
var G__13271 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13271) : p.call(null,G__13271));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__13432__delegate = function (x,y,z,args){
var or__4076__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__13432 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13433__i = 0, G__13433__a = new Array(arguments.length -  3);
while (G__13433__i < G__13433__a.length) {G__13433__a[G__13433__i] = arguments[G__13433__i + 3]; ++G__13433__i;}
  args = new cljs.core.IndexedSeq(G__13433__a,0);
} 
return G__13432__delegate.call(this,x,y,z,args);};
G__13432.cljs$lang$maxFixedArity = 3;
G__13432.cljs$lang$applyTo = (function (arglist__13434){
var x = cljs.core.first(arglist__13434);
arglist__13434 = cljs.core.next(arglist__13434);
var y = cljs.core.first(arglist__13434);
arglist__13434 = cljs.core.next(arglist__13434);
var z = cljs.core.first(arglist__13434);
var args = cljs.core.rest(arglist__13434);
return G__13432__delegate(x,y,z,args);
});
G__13432.cljs$core$IFn$_invoke$arity$variadic = G__13432__delegate;
return G__13432;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__13435 = null;
if (arguments.length > 3) {
var G__13436__i = 0, G__13436__a = new Array(arguments.length -  3);
while (G__13436__i < G__13436__a.length) {G__13436__a[G__13436__i] = arguments[G__13436__i + 3]; ++G__13436__i;}
G__13435 = new cljs.core.IndexedSeq(G__13436__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13435);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__4076__auto__ = (function (){var G__13303 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13303) : p1.call(null,G__13303));
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var G__13304 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13304) : p2.call(null,G__13304));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__4076__auto__ = (function (){var G__13306 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13306) : p1.call(null,G__13306));
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (function (){var G__13308 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13308) : p1.call(null,G__13308));
})();
if(cljs.core.truth_(or__4076__auto____$1)){
return or__4076__auto____$1;
} else {
var or__4076__auto____$2 = (function (){var G__13310 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13310) : p2.call(null,G__13310));
})();
if(cljs.core.truth_(or__4076__auto____$2)){
return or__4076__auto____$2;
} else {
var G__13311 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13311) : p2.call(null,G__13311));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__4076__auto__ = (function (){var G__13313 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13313) : p1.call(null,G__13313));
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (function (){var G__13315 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13315) : p1.call(null,G__13315));
})();
if(cljs.core.truth_(or__4076__auto____$1)){
return or__4076__auto____$1;
} else {
var or__4076__auto____$2 = (function (){var G__13317 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13317) : p1.call(null,G__13317));
})();
if(cljs.core.truth_(or__4076__auto____$2)){
return or__4076__auto____$2;
} else {
var or__4076__auto____$3 = (function (){var G__13319 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13319) : p2.call(null,G__13319));
})();
if(cljs.core.truth_(or__4076__auto____$3)){
return or__4076__auto____$3;
} else {
var or__4076__auto____$4 = (function (){var G__13321 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13321) : p2.call(null,G__13321));
})();
if(cljs.core.truth_(or__4076__auto____$4)){
return or__4076__auto____$4;
} else {
var G__13322 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13322) : p2.call(null,G__13322));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__13437__delegate = function (x,y,z,args){
var or__4076__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return cljs.core.some(((function (or__4076__auto__){
return (function (p1__13058_SHARP_){
var or__4076__auto____$1 = (function (){var G__13324 = p1__13058_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13324) : p1.call(null,G__13324));
})();
if(cljs.core.truth_(or__4076__auto____$1)){
return or__4076__auto____$1;
} else {
var G__13325 = p1__13058_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13325) : p2.call(null,G__13325));
}
});})(or__4076__auto__))
,args);
}
};
var G__13437 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13438__i = 0, G__13438__a = new Array(arguments.length -  3);
while (G__13438__i < G__13438__a.length) {G__13438__a[G__13438__i] = arguments[G__13438__i + 3]; ++G__13438__i;}
  args = new cljs.core.IndexedSeq(G__13438__a,0);
} 
return G__13437__delegate.call(this,x,y,z,args);};
G__13437.cljs$lang$maxFixedArity = 3;
G__13437.cljs$lang$applyTo = (function (arglist__13439){
var x = cljs.core.first(arglist__13439);
arglist__13439 = cljs.core.next(arglist__13439);
var y = cljs.core.first(arglist__13439);
arglist__13439 = cljs.core.next(arglist__13439);
var z = cljs.core.first(arglist__13439);
var args = cljs.core.rest(arglist__13439);
return G__13437__delegate(x,y,z,args);
});
G__13437.cljs$core$IFn$_invoke$arity$variadic = G__13437__delegate;
return G__13437;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__13440 = null;
if (arguments.length > 3) {
var G__13441__i = 0, G__13441__a = new Array(arguments.length -  3);
while (G__13441__i < G__13441__a.length) {G__13441__a[G__13441__i] = arguments[G__13441__i + 3]; ++G__13441__i;}
G__13440 = new cljs.core.IndexedSeq(G__13441__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13440);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__4076__auto__ = (function (){var G__13371 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13371) : p1.call(null,G__13371));
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (function (){var G__13373 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13373) : p2.call(null,G__13373));
})();
if(cljs.core.truth_(or__4076__auto____$1)){
return or__4076__auto____$1;
} else {
var G__13374 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13374) : p3.call(null,G__13374));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__4076__auto__ = (function (){var G__13376 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13376) : p1.call(null,G__13376));
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (function (){var G__13378 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13378) : p2.call(null,G__13378));
})();
if(cljs.core.truth_(or__4076__auto____$1)){
return or__4076__auto____$1;
} else {
var or__4076__auto____$2 = (function (){var G__13380 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13380) : p3.call(null,G__13380));
})();
if(cljs.core.truth_(or__4076__auto____$2)){
return or__4076__auto____$2;
} else {
var or__4076__auto____$3 = (function (){var G__13382 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13382) : p1.call(null,G__13382));
})();
if(cljs.core.truth_(or__4076__auto____$3)){
return or__4076__auto____$3;
} else {
var or__4076__auto____$4 = (function (){var G__13384 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13384) : p2.call(null,G__13384));
})();
if(cljs.core.truth_(or__4076__auto____$4)){
return or__4076__auto____$4;
} else {
var G__13385 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13385) : p3.call(null,G__13385));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__4076__auto__ = (function (){var G__13387 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13387) : p1.call(null,G__13387));
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (function (){var G__13389 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13389) : p2.call(null,G__13389));
})();
if(cljs.core.truth_(or__4076__auto____$1)){
return or__4076__auto____$1;
} else {
var or__4076__auto____$2 = (function (){var G__13391 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13391) : p3.call(null,G__13391));
})();
if(cljs.core.truth_(or__4076__auto____$2)){
return or__4076__auto____$2;
} else {
var or__4076__auto____$3 = (function (){var G__13393 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13393) : p1.call(null,G__13393));
})();
if(cljs.core.truth_(or__4076__auto____$3)){
return or__4076__auto____$3;
} else {
var or__4076__auto____$4 = (function (){var G__13395 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13395) : p2.call(null,G__13395));
})();
if(cljs.core.truth_(or__4076__auto____$4)){
return or__4076__auto____$4;
} else {
var or__4076__auto____$5 = (function (){var G__13397 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13397) : p3.call(null,G__13397));
})();
if(cljs.core.truth_(or__4076__auto____$5)){
return or__4076__auto____$5;
} else {
var or__4076__auto____$6 = (function (){var G__13399 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13399) : p1.call(null,G__13399));
})();
if(cljs.core.truth_(or__4076__auto____$6)){
return or__4076__auto____$6;
} else {
var or__4076__auto____$7 = (function (){var G__13401 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13401) : p2.call(null,G__13401));
})();
if(cljs.core.truth_(or__4076__auto____$7)){
return or__4076__auto____$7;
} else {
var G__13402 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13402) : p3.call(null,G__13402));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__13442__delegate = function (x,y,z,args){
var or__4076__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return cljs.core.some(((function (or__4076__auto__){
return (function (p1__13059_SHARP_){
var or__4076__auto____$1 = (function (){var G__13404 = p1__13059_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13404) : p1.call(null,G__13404));
})();
if(cljs.core.truth_(or__4076__auto____$1)){
return or__4076__auto____$1;
} else {
var or__4076__auto____$2 = (function (){var G__13406 = p1__13059_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13406) : p2.call(null,G__13406));
})();
if(cljs.core.truth_(or__4076__auto____$2)){
return or__4076__auto____$2;
} else {
var G__13407 = p1__13059_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13407) : p3.call(null,G__13407));
}
}
});})(or__4076__auto__))
,args);
}
};
var G__13442 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13443__i = 0, G__13443__a = new Array(arguments.length -  3);
while (G__13443__i < G__13443__a.length) {G__13443__a[G__13443__i] = arguments[G__13443__i + 3]; ++G__13443__i;}
  args = new cljs.core.IndexedSeq(G__13443__a,0);
} 
return G__13442__delegate.call(this,x,y,z,args);};
G__13442.cljs$lang$maxFixedArity = 3;
G__13442.cljs$lang$applyTo = (function (arglist__13444){
var x = cljs.core.first(arglist__13444);
arglist__13444 = cljs.core.next(arglist__13444);
var y = cljs.core.first(arglist__13444);
arglist__13444 = cljs.core.next(arglist__13444);
var z = cljs.core.first(arglist__13444);
var args = cljs.core.rest(arglist__13444);
return G__13442__delegate(x,y,z,args);
});
G__13442.cljs$core$IFn$_invoke$arity$variadic = G__13442__delegate;
return G__13442;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__13445 = null;
if (arguments.length > 3) {
var G__13446__i = 0, G__13446__a = new Array(arguments.length -  3);
while (G__13446__i < G__13446__a.length) {G__13446__a[G__13446__i] = arguments[G__13446__i + 3]; ++G__13446__i;}
G__13445 = new cljs.core.IndexedSeq(G__13446__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13445);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__13447__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__13060_SHARP_){
var G__13423 = x;
return (p1__13060_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13060_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13423) : p1__13060_SHARP_.call(null,G__13423));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__13061_SHARP_){
var or__4076__auto__ = (function (){var G__13425 = x;
return (p1__13061_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13061_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13425) : p1__13061_SHARP_.call(null,G__13425));
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var G__13426 = y;
return (p1__13061_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13061_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13426) : p1__13061_SHARP_.call(null,G__13426));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__13062_SHARP_){
var or__4076__auto__ = (function (){var G__13428 = x;
return (p1__13062_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13062_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13428) : p1__13062_SHARP_.call(null,G__13428));
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (function (){var G__13430 = y;
return (p1__13062_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13062_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13430) : p1__13062_SHARP_.call(null,G__13430));
})();
if(cljs.core.truth_(or__4076__auto____$1)){
return or__4076__auto____$1;
} else {
var G__13431 = z;
return (p1__13062_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13062_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13431) : p1__13062_SHARP_.call(null,G__13431));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__13448__delegate = function (x,y,z,args){
var or__4076__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return cljs.core.some(((function (or__4076__auto__,ps__$1){
return (function (p1__13063_SHARP_){
return cljs.core.some(p1__13063_SHARP_,args);
});})(or__4076__auto__,ps__$1))
,ps__$1);
}
};
var G__13448 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13449__i = 0, G__13449__a = new Array(arguments.length -  3);
while (G__13449__i < G__13449__a.length) {G__13449__a[G__13449__i] = arguments[G__13449__i + 3]; ++G__13449__i;}
  args = new cljs.core.IndexedSeq(G__13449__a,0);
} 
return G__13448__delegate.call(this,x,y,z,args);};
G__13448.cljs$lang$maxFixedArity = 3;
G__13448.cljs$lang$applyTo = (function (arglist__13450){
var x = cljs.core.first(arglist__13450);
arglist__13450 = cljs.core.next(arglist__13450);
var y = cljs.core.first(arglist__13450);
arglist__13450 = cljs.core.next(arglist__13450);
var z = cljs.core.first(arglist__13450);
var args = cljs.core.rest(arglist__13450);
return G__13448__delegate(x,y,z,args);
});
G__13448.cljs$core$IFn$_invoke$arity$variadic = G__13448__delegate;
return G__13448;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__13451 = null;
if (arguments.length > 3) {
var G__13452__i = 0, G__13452__a = new Array(arguments.length -  3);
while (G__13452__i < G__13452__a.length) {G__13452__a[G__13452__i] = arguments[G__13452__i + 3]; ++G__13452__i;}
G__13451 = new cljs.core.IndexedSeq(G__13452__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13451);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__13447 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__13453__i = 0, G__13453__a = new Array(arguments.length -  3);
while (G__13453__i < G__13453__a.length) {G__13453__a[G__13453__i] = arguments[G__13453__i + 3]; ++G__13453__i;}
  ps = new cljs.core.IndexedSeq(G__13453__a,0);
} 
return G__13447__delegate.call(this,p1,p2,p3,ps);};
G__13447.cljs$lang$maxFixedArity = 3;
G__13447.cljs$lang$applyTo = (function (arglist__13454){
var p1 = cljs.core.first(arglist__13454);
arglist__13454 = cljs.core.next(arglist__13454);
var p2 = cljs.core.first(arglist__13454);
arglist__13454 = cljs.core.next(arglist__13454);
var p3 = cljs.core.first(arglist__13454);
var ps = cljs.core.rest(arglist__13454);
return G__13447__delegate(p1,p2,p3,ps);
});
G__13447.cljs$core$IFn$_invoke$arity$variadic = G__13447__delegate;
return G__13447;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__13455 = null;
if (arguments.length > 3) {
var G__13456__i = 0, G__13456__a = new Array(arguments.length -  3);
while (G__13456__i < G__13456__a.length) {G__13456__a[G__13456__i] = arguments[G__13456__i + 3]; ++G__13456__i;}
G__13455 = new cljs.core.IndexedSeq(G__13456__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__13455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__13511 = null;
var G__13511__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13511__1 = (function (result){
var G__13497 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13497) : rf.call(null,G__13497));
});
var G__13511__2 = (function (result,input){
var G__13498 = result;
var G__13499 = (function (){var G__13500 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13500) : f.call(null,G__13500));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13498,G__13499) : rf.call(null,G__13498,G__13499));
});
var G__13511__3 = (function() { 
var G__13512__delegate = function (result,input,inputs){
var G__13501 = result;
var G__13502 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13501,G__13502) : rf.call(null,G__13501,G__13502));
};
var G__13512 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__13513__i = 0, G__13513__a = new Array(arguments.length -  2);
while (G__13513__i < G__13513__a.length) {G__13513__a[G__13513__i] = arguments[G__13513__i + 2]; ++G__13513__i;}
  inputs = new cljs.core.IndexedSeq(G__13513__a,0);
} 
return G__13512__delegate.call(this,result,input,inputs);};
G__13512.cljs$lang$maxFixedArity = 2;
G__13512.cljs$lang$applyTo = (function (arglist__13514){
var result = cljs.core.first(arglist__13514);
arglist__13514 = cljs.core.next(arglist__13514);
var input = cljs.core.first(arglist__13514);
var inputs = cljs.core.rest(arglist__13514);
return G__13512__delegate(result,input,inputs);
});
G__13512.cljs$core$IFn$_invoke$arity$variadic = G__13512__delegate;
return G__13512;
})()
;
G__13511 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__13511__0.call(this);
case 1:
return G__13511__1.call(this,result);
case 2:
return G__13511__2.call(this,result,input);
default:
var G__13515 = null;
if (arguments.length > 2) {
var G__13516__i = 0, G__13516__a = new Array(arguments.length -  2);
while (G__13516__i < G__13516__a.length) {G__13516__a[G__13516__i] = arguments[G__13516__i + 2]; ++G__13516__i;}
G__13515 = new cljs.core.IndexedSeq(G__13516__a,0);
}
return G__13511__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__13515);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13511.cljs$lang$maxFixedArity = 2;
G__13511.cljs$lang$applyTo = G__13511__3.cljs$lang$applyTo;
G__13511.cljs$core$IFn$_invoke$arity$0 = G__13511__0;
G__13511.cljs$core$IFn$_invoke$arity$1 = G__13511__1;
G__13511.cljs$core$IFn$_invoke$arity$2 = G__13511__2;
G__13511.cljs$core$IFn$_invoke$arity$variadic = G__13511__3.cljs$core$IFn$_invoke$arity$variadic;
return G__13511;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4963__auto___13517 = size;
var i_13518 = (0);
while(true){
if((i_13518 < n__4963__auto___13517)){
cljs.core.chunk_append(b,(function (){var G__13503 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13518);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13503) : f.call(null,G__13503));
})());

var G__13519 = (i_13518 + (1));
i_13518 = G__13519;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__13504 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13504) : f.call(null,G__13504));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__13505 = cljs.core.first(s1);
var G__13506 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13505,G__13506) : f.call(null,G__13505,G__13506));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__13507 = cljs.core.first(s1);
var G__13508 = cljs.core.first(s2);
var G__13509 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13507,G__13508,G__13509) : f.call(null,G__13507,G__13508,G__13509));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__13520__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__13457_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__13457_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__13520 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__13521__i = 0, G__13521__a = new Array(arguments.length -  4);
while (G__13521__i < G__13521__a.length) {G__13521__a[G__13521__i] = arguments[G__13521__i + 4]; ++G__13521__i;}
  colls = new cljs.core.IndexedSeq(G__13521__a,0);
} 
return G__13520__delegate.call(this,f,c1,c2,c3,colls);};
G__13520.cljs$lang$maxFixedArity = 4;
G__13520.cljs$lang$applyTo = (function (arglist__13522){
var f = cljs.core.first(arglist__13522);
arglist__13522 = cljs.core.next(arglist__13522);
var c1 = cljs.core.first(arglist__13522);
arglist__13522 = cljs.core.next(arglist__13522);
var c2 = cljs.core.first(arglist__13522);
arglist__13522 = cljs.core.next(arglist__13522);
var c3 = cljs.core.first(arglist__13522);
var colls = cljs.core.rest(arglist__13522);
return G__13520__delegate(f,c1,c2,c3,colls);
});
G__13520.cljs$core$IFn$_invoke$arity$variadic = G__13520__delegate;
return G__13520;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__13523 = null;
if (arguments.length > 4) {
var G__13524__i = 0, G__13524__a = new Array(arguments.length -  4);
while (G__13524__i < G__13524__a.length) {G__13524__a[G__13524__i] = arguments[G__13524__i + 4]; ++G__13524__i;}
G__13523 = new cljs.core.IndexedSeq(G__13524__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__13523);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__13533 = null;
var G__13533__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13533__1 = (function (result){
var G__13530 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13530) : rf.call(null,G__13530));
});
var G__13533__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__13531 = result;
var G__13532 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13531,G__13532) : rf.call(null,G__13531,G__13532));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__13533 = function(result,input){
switch(arguments.length){
case 0:
return G__13533__0.call(this);
case 1:
return G__13533__1.call(this,result);
case 2:
return G__13533__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13533.cljs$core$IFn$_invoke$arity$0 = G__13533__0;
G__13533.cljs$core$IFn$_invoke$arity$1 = G__13533__1;
G__13533.cljs$core$IFn$_invoke$arity$2 = G__13533__2;
return G__13533;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__13540 = null;
var G__13540__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13540__1 = (function (result){
var G__13537 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13537) : rf.call(null,G__13537));
});
var G__13540__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__13538 = result;
var G__13539 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13538,G__13539) : rf.call(null,G__13538,G__13539));
}
});
G__13540 = function(result,input){
switch(arguments.length){
case 0:
return G__13540__0.call(this);
case 1:
return G__13540__1.call(this,result);
case 2:
return G__13540__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13540.cljs$core$IFn$_invoke$arity$0 = G__13540__0;
G__13540.cljs$core$IFn$_invoke$arity$1 = G__13540__1;
G__13540.cljs$core$IFn$_invoke$arity$2 = G__13540__2;
return G__13540;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__13541 = (n__$1 - (1));
var G__13542 = cljs.core.rest(s);
n__$1 = G__13541;
coll__$1 = G__13542;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__13545 = cljs.core.next(s);
var G__13546 = cljs.core.next(lead);
s = G__13545;
lead = G__13546;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__13559 = null;
var G__13559__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13559__1 = (function (result){
var G__13553 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13553) : rf.call(null,G__13553));
});
var G__13559__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__4064__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__4064__auto__)){
var G__13554 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13554) : pred.call(null,G__13554));
} else {
return and__4064__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__13555 = result;
var G__13556 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13555,G__13556) : rf.call(null,G__13555,G__13556));
}
});
G__13559 = function(result,input){
switch(arguments.length){
case 0:
return G__13559__0.call(this);
case 1:
return G__13559__1.call(this,result);
case 2:
return G__13559__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13559.cljs$core$IFn$_invoke$arity$0 = G__13559__0;
G__13559.cljs$core$IFn$_invoke$arity$1 = G__13559__1;
G__13559.cljs$core$IFn$_invoke$arity$2 = G__13559__2;
return G__13559;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__4064__auto__ = s;
if(and__4064__auto__){
var G__13558 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__13558) : pred__$1.call(null,G__13558));
} else {
return and__4064__auto__;
}
})())){
var G__13560 = pred__$1;
var G__13561 = cljs.core.rest(s);
pred__$1 = G__13560;
coll__$1 = G__13561;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__13570 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13570) : f.call(null,G__13570));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__13573__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__13573 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__13574__i = 0, G__13574__a = new Array(arguments.length -  2);
while (G__13574__i < G__13574__a.length) {G__13574__a[G__13574__i] = arguments[G__13574__i + 2]; ++G__13574__i;}
  colls = new cljs.core.IndexedSeq(G__13574__a,0);
} 
return G__13573__delegate.call(this,c1,c2,colls);};
G__13573.cljs$lang$maxFixedArity = 2;
G__13573.cljs$lang$applyTo = (function (arglist__13575){
var c1 = cljs.core.first(arglist__13575);
arglist__13575 = cljs.core.next(arglist__13575);
var c2 = cljs.core.first(arglist__13575);
var colls = cljs.core.rest(arglist__13575);
return G__13573__delegate(c1,c2,colls);
});
G__13573.cljs$core$IFn$_invoke$arity$variadic = G__13573__delegate;
return G__13573;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__13576 = null;
if (arguments.length > 2) {
var G__13577__i = 0, G__13577__a = new Array(arguments.length -  2);
while (G__13577__i < G__13577__a.length) {G__13577__a[G__13577__i] = arguments[G__13577__i + 2]; ++G__13577__i;}
G__13576 = new cljs.core.IndexedSeq(G__13577__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__13576);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__13592 = null;
var G__13592__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13592__1 = (function (result){
var G__13585 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13585) : rf.call(null,G__13585));
});
var G__13592__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__13586 = result;
var G__13587 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13586,G__13587) : rf.call(null,G__13586,G__13587));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__13588 = sepr;
var G__13589 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13588,G__13589) : rf.call(null,G__13588,G__13589));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__13590 = result;
var G__13591 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13590,G__13591) : rf.call(null,G__13590,G__13591));
}
});
G__13592 = function(result,input){
switch(arguments.length){
case 0:
return G__13592__0.call(this);
case 1:
return G__13592__1.call(this,result);
case 2:
return G__13592__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13592.cljs$core$IFn$_invoke$arity$0 = G__13592__0;
G__13592.cljs$core$IFn$_invoke$arity$1 = G__13592__1;
G__13592.cljs$core$IFn$_invoke$arity$2 = G__13592__2;
return G__13592;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var coll__$1 = temp__4423__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__13601__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__13601 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__13602__i = 0, G__13602__a = new Array(arguments.length -  1);
while (G__13602__i < G__13602__a.length) {G__13602__a[G__13602__i] = arguments[G__13602__i + 1]; ++G__13602__i;}
  colls = new cljs.core.IndexedSeq(G__13602__a,0);
} 
return G__13601__delegate.call(this,f,colls);};
G__13601.cljs$lang$maxFixedArity = 1;
G__13601.cljs$lang$applyTo = (function (arglist__13603){
var f = cljs.core.first(arglist__13603);
var colls = cljs.core.rest(arglist__13603);
return G__13601__delegate(f,colls);
});
G__13601.cljs$core$IFn$_invoke$arity$variadic = G__13601__delegate;
return G__13601;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__13604 = null;
if (arguments.length > 1) {
var G__13605__i = 0, G__13605__a = new Array(arguments.length -  1);
while (G__13605__i < G__13605__a.length) {G__13605__a[G__13605__i] = arguments[G__13605__i + 1]; ++G__13605__i;}
G__13604 = new cljs.core.IndexedSeq(G__13605__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__13604);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__13624 = null;
var G__13624__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13624__1 = (function (result){
var G__13618 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13618) : rf.call(null,G__13618));
});
var G__13624__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__13619 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13619) : pred.call(null,G__13619));
})())){
var G__13620 = result;
var G__13621 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13620,G__13621) : rf.call(null,G__13620,G__13621));
} else {
return result;
}
});
G__13624 = function(result,input){
switch(arguments.length){
case 0:
return G__13624__0.call(this);
case 1:
return G__13624__1.call(this,result);
case 2:
return G__13624__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13624.cljs$core$IFn$_invoke$arity$0 = G__13624__0;
G__13624.cljs$core$IFn$_invoke$arity$1 = G__13624__1;
G__13624.cljs$core$IFn$_invoke$arity$2 = G__13624__2;
return G__13624;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4963__auto___13625 = size;
var i_13626 = (0);
while(true){
if((i_13626 < n__4963__auto___13625)){
if(cljs.core.truth_((function (){var G__13622 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13626);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13622) : pred.call(null,G__13622));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13626));
} else {
}

var G__13627 = (i_13626 + (1));
i_13626 = G__13627;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__13623 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13623) : pred.call(null,G__13623));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__13634 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__13634) : branch_QMARK_.call(null,G__13634));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__13635 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__13635) : children.call(null,G__13635));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__13636_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__13636_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__13639 = to;
if(G__13639){
var bit__4750__auto__ = (G__13639.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4750__auto__) || (G__13639.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__13640 = to;
if(G__13640){
var bit__4750__auto__ = (G__13640.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4750__auto__) || (G__13640.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__13642 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13642) : f.call(null,G__13642));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__13643__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__13643 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__13644__i = 0, G__13644__a = new Array(arguments.length -  4);
while (G__13644__i < G__13644__a.length) {G__13644__a[G__13644__i] = arguments[G__13644__i + 4]; ++G__13644__i;}
  colls = new cljs.core.IndexedSeq(G__13644__a,0);
} 
return G__13643__delegate.call(this,f,c1,c2,c3,colls);};
G__13643.cljs$lang$maxFixedArity = 4;
G__13643.cljs$lang$applyTo = (function (arglist__13645){
var f = cljs.core.first(arglist__13645);
arglist__13645 = cljs.core.next(arglist__13645);
var c1 = cljs.core.first(arglist__13645);
arglist__13645 = cljs.core.next(arglist__13645);
var c2 = cljs.core.first(arglist__13645);
arglist__13645 = cljs.core.next(arglist__13645);
var c3 = cljs.core.first(arglist__13645);
var colls = cljs.core.rest(arglist__13645);
return G__13643__delegate(f,c1,c2,c3,colls);
});
G__13643.cljs$core$IFn$_invoke$arity$variadic = G__13643__delegate;
return G__13643;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__13646 = null;
if (arguments.length > 4) {
var G__13647__i = 0, G__13647__a = new Array(arguments.length -  4);
while (G__13647__i < G__13647__a.length) {G__13647__a[G__13647__i] = arguments[G__13647__i + 4]; ++G__13647__i;}
G__13646 = new cljs.core.IndexedSeq(G__13647__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__13646);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__13649 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13649) : pred.call(null,G__13649));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__13664 = m__$1;
if(G__13664){
var bit__4757__auto__ = (G__13664.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4757__auto__) || (G__13664.cljs$core$ILookup$)){
return true;
} else {
if((!G__13664.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__13664);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__13664);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__13665 = sentinel;
var G__13666 = m__$2;
var G__13667 = cljs.core.next(ks__$1);
sentinel = G__13665;
m__$1 = G__13666;
ks__$1 = G__13667;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__13668,v){
var vec__13673 = p__13668;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13673,(0),null);
var ks = cljs.core.nthnext(vec__13673,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__13674,f){
var vec__13712 = p__13674;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13712,(0),null);
var ks = cljs.core.nthnext(vec__13712,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13713 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13713) : f.call(null,G__13713));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__13675,f,a){
var vec__13714 = p__13675;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13714,(0),null);
var ks = cljs.core.nthnext(vec__13714,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13715 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13716 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13715,G__13716) : f.call(null,G__13715,G__13716));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__13676,f,a,b){
var vec__13717 = p__13676;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13717,(0),null);
var ks = cljs.core.nthnext(vec__13717,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13718 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13719 = a;
var G__13720 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13718,G__13719,G__13720) : f.call(null,G__13718,G__13719,G__13720));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__13677,f,a,b,c){
var vec__13721 = p__13677;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13721,(0),null);
var ks = cljs.core.nthnext(vec__13721,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13722 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13723 = a;
var G__13724 = b;
var G__13725 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13722,G__13723,G__13724,G__13725) : f.call(null,G__13722,G__13723,G__13724,G__13725));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__13727__delegate = function (m,p__13678,f,a,b,c,args){
var vec__13726 = p__13678;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13726,(0),null);
var ks = cljs.core.nthnext(vec__13726,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__13727 = function (m,p__13678,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__13728__i = 0, G__13728__a = new Array(arguments.length -  6);
while (G__13728__i < G__13728__a.length) {G__13728__a[G__13728__i] = arguments[G__13728__i + 6]; ++G__13728__i;}
  args = new cljs.core.IndexedSeq(G__13728__a,0);
} 
return G__13727__delegate.call(this,m,p__13678,f,a,b,c,args);};
G__13727.cljs$lang$maxFixedArity = 6;
G__13727.cljs$lang$applyTo = (function (arglist__13729){
var m = cljs.core.first(arglist__13729);
arglist__13729 = cljs.core.next(arglist__13729);
var p__13678 = cljs.core.first(arglist__13729);
arglist__13729 = cljs.core.next(arglist__13729);
var f = cljs.core.first(arglist__13729);
arglist__13729 = cljs.core.next(arglist__13729);
var a = cljs.core.first(arglist__13729);
arglist__13729 = cljs.core.next(arglist__13729);
var b = cljs.core.first(arglist__13729);
arglist__13729 = cljs.core.next(arglist__13729);
var c = cljs.core.first(arglist__13729);
var args = cljs.core.rest(arglist__13729);
return G__13727__delegate(m,p__13678,f,a,b,c,args);
});
G__13727.cljs$core$IFn$_invoke$arity$variadic = G__13727__delegate;
return G__13727;
})()
;
cljs$core$update_in = function(m,p__13678,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__13678,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__13678,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__13678,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__13678,f,a,b,c);
default:
var G__13730 = null;
if (arguments.length > 6) {
var G__13731__i = 0, G__13731__a = new Array(arguments.length -  6);
while (G__13731__i < G__13731__a.length) {G__13731__a[G__13731__i] = arguments[G__13731__i + 6]; ++G__13731__i;}
G__13730 = new cljs.core.IndexedSeq(G__13731__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__13678,f,a,b,c, G__13730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13742 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13742) : f.call(null,G__13742));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13743 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13744 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13743,G__13744) : f.call(null,G__13743,G__13744));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13745 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13746 = x;
var G__13747 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13745,G__13746,G__13747) : f.call(null,G__13745,G__13746,G__13747));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13748 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13749 = x;
var G__13750 = y;
var G__13751 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13748,G__13749,G__13750,G__13751) : f.call(null,G__13748,G__13749,G__13750,G__13751));
})());
});
var cljs$core$update__7 = (function() { 
var G__13752__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__13752 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__13753__i = 0, G__13753__a = new Array(arguments.length -  6);
while (G__13753__i < G__13753__a.length) {G__13753__a[G__13753__i] = arguments[G__13753__i + 6]; ++G__13753__i;}
  more = new cljs.core.IndexedSeq(G__13753__a,0);
} 
return G__13752__delegate.call(this,m,k,f,x,y,z,more);};
G__13752.cljs$lang$maxFixedArity = 6;
G__13752.cljs$lang$applyTo = (function (arglist__13754){
var m = cljs.core.first(arglist__13754);
arglist__13754 = cljs.core.next(arglist__13754);
var k = cljs.core.first(arglist__13754);
arglist__13754 = cljs.core.next(arglist__13754);
var f = cljs.core.first(arglist__13754);
arglist__13754 = cljs.core.next(arglist__13754);
var x = cljs.core.first(arglist__13754);
arglist__13754 = cljs.core.next(arglist__13754);
var y = cljs.core.first(arglist__13754);
arglist__13754 = cljs.core.next(arglist__13754);
var z = cljs.core.first(arglist__13754);
var more = cljs.core.rest(arglist__13754);
return G__13752__delegate(m,k,f,x,y,z,more);
});
G__13752.cljs$core$IFn$_invoke$arity$variadic = G__13752__delegate;
return G__13752;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__13755 = null;
if (arguments.length > 6) {
var G__13756__i = 0, G__13756__a = new Array(arguments.length -  6);
while (G__13756__i < G__13756__a.length) {G__13756__a[G__13756__i] = arguments[G__13756__i + 6]; ++G__13756__i;}
G__13755 = new cljs.core.IndexedSeq(G__13756__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__13755);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__13757 = (ll - (5));
var G__13758 = r;
ll = G__13757;
ret = G__13758;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__13763 = cljs.core.pv_aget(node,(0));
var G__13764 = (level - (5));
node = G__13763;
level = G__13764;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__13765 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__13766 = (level - (5));
node = G__13765;
level = G__13766;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__13776 = init__$2;
var G__13777 = (j + i);
var G__13778 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13776,G__13777,G__13778) : f.call(null,G__13776,G__13777,G__13778));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__13789 = (j + (1));
var G__13790 = init__$3;
j = G__13789;
init__$2 = G__13790;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13779 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13779) : cljs.core.deref.call(null,G__13779));
} else {
var G__13791 = (i + len);
var G__13792 = init__$2;
i = G__13791;
init__$1 = G__13792;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__13780 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__13780) : cljs.core.tv_editable_root.call(null,G__13780));
})(),(function (){var G__13781 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__13781) : cljs.core.tv_editable_tail.call(null,G__13781));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__13782 = init__$2;
var G__13783 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13782,G__13783) : f.call(null,G__13782,G__13783));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__13793 = (j + (1));
var G__13794 = init__$3;
j = G__13793;
init__$2 = G__13794;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13784 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13784) : cljs.core.deref.call(null,G__13784));
} else {
var G__13795 = (i + len);
var G__13796 = init__$2;
i = G__13795;
init__$1 = G__13796;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__13785 = coll__$1;
var G__13786 = cljs.core.first_array_for_longvec(coll__$1);
var G__13787 = (0);
var G__13788 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13785,G__13786,G__13787,G__13788) : cljs.core.chunked_seq.call(null,G__13785,G__13786,G__13787,G__13788));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4963__auto___13797 = len;
var i_13798 = (0);
while(true){
if((i_13798 < n__4963__auto___13797)){
(new_tail[i_13798] = (self__.tail[i_13798]));

var G__13799 = (i_13798 + (1));
i_13798 = G__13799;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__13800 = null;
var G__13800__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__13800__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__13800 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13800__2.call(this,self__,k);
case 3:
return G__13800__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13800.cljs$core$IFn$_invoke$arity$2 = G__13800__2;
G__13800.cljs$core$IFn$_invoke$arity$3 = G__13800__3;
return G__13800;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args13775){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13775)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__13801 = (i + (1));
var G__13802 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__13801;
out = G__13802;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13803__i = 0, G__13803__a = new Array(arguments.length -  0);
while (G__13803__i < G__13803__a.length) {G__13803__a[G__13803__i] = arguments[G__13803__i + 0]; ++G__13803__i;}
  args = new cljs.core.IndexedSeq(G__13803__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__13804){
var args = cljs.core.seq(arglist__13804);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__13805 = self__.vec;
var G__13806 = self__.node;
var G__13807 = self__.i;
var G__13808 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13805,G__13806,G__13807,G__13808) : cljs.core.chunked_seq.call(null,G__13805,G__13806,G__13807,G__13808));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__13809 = self__.vec;
var G__13810 = (self__.i + self__.off);
var G__13811 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13809,G__13810,G__13811) : cljs.core.subvec.call(null,G__13809,G__13810,G__13811));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__13812 = self__.vec;
var G__13813 = (self__.i + self__.off);
var G__13814 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13812,G__13813,G__13814) : cljs.core.subvec.call(null,G__13812,G__13813,G__13814));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__13815 = self__.vec;
var G__13816 = self__.node;
var G__13817 = self__.i;
var G__13818 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13815,G__13816,G__13817,G__13818) : cljs.core.chunked_seq.call(null,G__13815,G__13816,G__13817,G__13818));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__13819 = self__.vec;
var G__13820 = cljs.core.unchecked_array_for(self__.vec,end);
var G__13821 = end;
var G__13822 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13819,G__13820,G__13821,G__13822) : cljs.core.chunked_seq.call(null,G__13819,G__13820,G__13821,G__13822));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__13823 = self__.vec;
var G__13824 = self__.node;
var G__13825 = self__.i;
var G__13826 = self__.off;
var G__13827 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__13823,G__13824,G__13825,G__13826,G__13827) : cljs.core.chunked_seq.call(null,G__13823,G__13824,G__13825,G__13826,G__13827));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__13828 = self__.vec;
var G__13829 = cljs.core.unchecked_array_for(self__.vec,end);
var G__13830 = end;
var G__13831 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13828,G__13829,G__13830,G__13831) : cljs.core.chunked_seq.call(null,G__13828,G__13829,G__13830,G__13831));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__13833 = self__.meta;
var G__13834 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__13835 = self__.start;
var G__13836 = (function (){var x__4393__auto__ = self__.end;
var y__4394__auto__ = (v_pos + (1));
return ((x__4393__auto__ > y__4394__auto__) ? x__4393__auto__ : y__4394__auto__);
})();
var G__13837 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13833,G__13834,G__13835,G__13836,G__13837) : cljs.core.build_subvec.call(null,G__13833,G__13834,G__13835,G__13836,G__13837));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__13838 = self__.meta;
var G__13839 = self__.v;
var G__13840 = self__.start;
var G__13841 = (self__.end - (1));
var G__13842 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13838,G__13839,G__13840,G__13841,G__13842) : cljs.core.build_subvec.call(null,G__13838,G__13839,G__13840,G__13841,G__13842));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__13844 = meta__$1;
var G__13845 = self__.v;
var G__13846 = self__.start;
var G__13847 = self__.end;
var G__13848 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13844,G__13845,G__13846,G__13847,G__13848) : cljs.core.build_subvec.call(null,G__13844,G__13845,G__13846,G__13847,G__13848));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13849 = self__.meta;
var G__13850 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__13851 = self__.start;
var G__13852 = (self__.end + (1));
var G__13853 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13849,G__13850,G__13851,G__13852,G__13853) : cljs.core.build_subvec.call(null,G__13849,G__13850,G__13851,G__13852,G__13853));
});

cljs.core.Subvec.prototype.call = (function() {
var G__13854 = null;
var G__13854__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__13854__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__13854 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13854__2.call(this,self__,k);
case 3:
return G__13854__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13854.cljs$core$IFn$_invoke$arity$2 = G__13854__2;
G__13854.cljs$core$IFn$_invoke$arity$3 = G__13854__3;
return G__13854;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args13832){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13832)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__13855 = meta;
var G__13856 = v.v;
var G__13857 = (v.start + start);
var G__13858 = (v.start + end);
var G__13859 = __hash;
meta = G__13855;
v = G__13856;
start = G__13857;
end = G__13858;
__hash = G__13859;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj13866 = {};
return obj13866;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__13874 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__13875 = (level - (5));
node = G__13874;
level = G__13875;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition1$ = 88;
this.cljs$lang$protocol_mask$partition0$ = 275;
})
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.call = (function() {
var G__13879 = null;
var G__13879__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13879__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13879 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13879__2.call(this,self__,k);
case 3:
return G__13879__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13879.cljs$core$IFn$_invoke$arity$2 = G__13879__2;
G__13879.cljs$core$IFn$_invoke$arity$3 = G__13879__3;
return G__13879;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args13876){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13876)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4423__auto__ = cljs.core.next(self__.front);
if(temp__4423__auto__){
var f1 = temp__4423__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4423__auto__ = cljs.core.next(self__.front);
if(temp__4423__auto__){
var f1 = temp__4423__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__4076__auto__ = self__.front;
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4076__auto__ = self__.rear;
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition0$ = 2097152;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__13880 = (i + incr);
i = G__13880;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__13881 = (i + (1));
var G__13882 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__13881;
out = G__13882;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj13886 = {};
return obj13886;
})();
var l = ks.length;
var i_13887 = (0);
while(true){
if((i_13887 < l)){
var k_13888 = (ks[i_13887]);
(new_obj[k_13888] = (obj[k_13888]));

var G__13889 = (i_13887 + (1));
i_13887 = G__13889;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4064__auto__ = (function (){var G__13893 = k;
return goog.isString(G__13893);
})();
if(cljs.core.truth_(and__4064__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4064__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__13894 = init__$1;
var G__13895 = k;
var G__13896 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13894,G__13895,G__13896) : f.call(null,G__13894,G__13895,G__13896));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13897 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13897) : cljs.core.deref.call(null,G__13897));
} else {
var G__13903 = cljs.core.rest(keys__$1);
var G__13904 = init__$2;
keys__$1 = G__13903;
init__$1 = G__13904;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4064__auto__ = (function (){var G__13899 = k;
return goog.isString(G__13899);
})();
if(cljs.core.truth_(and__4064__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4064__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__13900 = k;
return goog.isString(G__13900);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4064__auto__ = (function (){var G__13902 = k;
return goog.isString(G__13902);
})();
if(cljs.core.truth_(and__4064__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4064__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__13890_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__13890_SHARP_,(self__.strobj[p1__13890_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__13905 = null;
var G__13905__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13905__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13905 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13905__2.call(this,self__,k);
case 3:
return G__13905__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13905.cljs$core$IFn$_invoke$arity$2 = G__13905__2;
G__13905.cljs$core$IFn$_invoke$arity$3 = G__13905__3;
return G__13905;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args13891){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13891)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj13907 = {};
return obj13907;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__13908 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13908,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13908,(1),null);
self__.s = cljs.core.next(self__.s);

return {"value": [k,v], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": [x,x], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__13909 = (i + (2));
i = G__13909;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__13910 = (i + (2));
i = G__13910;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__13911 = (i + (2));
i = G__13911;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__13912 = (i + (2));
i = G__13912;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__13913 = (i + (2));
i = G__13913;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__4076__auto__ = (function (){var G__13917 = k;
return goog.isString(G__13917);
})();
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_13918 = (0);
while(true){
if((i_13918 < l)){
(narr[i_13918] = (arr[i_13918]));

var G__13919 = (i_13918 + (1));
i_13918 = G__13919;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13921 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13921) : cljs.core.keys.call(null,G__13921));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13922 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13922) : cljs.core.vals.call(null,G__13922));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13923 = cljs.core.seq(coll);
var chunk__13924 = null;
var count__13925 = (0);
var i__13926 = (0);
while(true){
if((i__13926 < count__13925)){
var vec__13927 = chunk__13924.cljs$core$IIndexed$_nth$arity$2(null,i__13926);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13927,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13927,(1),null);
var G__13928_13941 = v;
var G__13929_13942 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13928_13941,G__13929_13942) : f.call(null,G__13928_13941,G__13929_13942));

var G__13943 = seq__13923;
var G__13944 = chunk__13924;
var G__13945 = count__13925;
var G__13946 = (i__13926 + (1));
seq__13923 = G__13943;
chunk__13924 = G__13944;
count__13925 = G__13945;
i__13926 = G__13946;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__13923);
if(temp__4425__auto__){
var seq__13923__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13923__$1)){
var c__4863__auto__ = cljs.core.chunk_first(seq__13923__$1);
var G__13947 = cljs.core.chunk_rest(seq__13923__$1);
var G__13948 = c__4863__auto__;
var G__13949 = cljs.core.count(c__4863__auto__);
var G__13950 = (0);
seq__13923 = G__13947;
chunk__13924 = G__13948;
count__13925 = G__13949;
i__13926 = G__13950;
continue;
} else {
var vec__13930 = cljs.core.first(seq__13923__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13930,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13930,(1),null);
var G__13931_13951 = v;
var G__13932_13952 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13931_13951,G__13932_13952) : f.call(null,G__13931_13951,G__13932_13952));

var G__13953 = cljs.core.next(seq__13923__$1);
var G__13954 = null;
var G__13955 = (0);
var G__13956 = (0);
seq__13923 = G__13953;
chunk__13924 = G__13954;
count__13925 = G__13955;
i__13926 = G__13956;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__13933 = init__$1;
var G__13934 = (self__.arr[i]);
var G__13935 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13933,G__13934,G__13935) : f.call(null,G__13933,G__13934,G__13935));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13936 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13936) : cljs.core.deref.call(null,G__13936));
} else {
var G__13957 = (i + (2));
var G__13958 = init__$2;
i = G__13957;
init__$1 = G__13958;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__13937 = other;
if(G__13937){
var bit__4750__auto__ = (G__13937.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4750__auto__) || (G__13937.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__13959 = (i + (2));
i = G__13959;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj13939 = {};
return obj13939;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__13960 = (s + (2));
var G__13961 = d;
s = G__13960;
d = G__13961;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__13962 = (s + (2));
var G__13963 = (d + (2));
s = G__13962;
d = G__13963;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__13940 = cljs.core.aclone(self__.arr);
(G__13940[(idx + (1))] = v);

return G__13940;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__13964 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__13965 = cljs.core.next(es);
ret = G__13964;
es = G__13965;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__13966 = null;
var G__13966__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13966__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13966 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13966__2.call(this,self__,k);
case 3:
return G__13966__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13966.cljs$core$IFn$_invoke$arity$2 = G__13966__2;
G__13966.cljs$core$IFn$_invoke$arity$3 = G__13966__3;
return G__13966;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args13920){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13920)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__13967 = (i + (2));
var G__13968 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__13967;
ret = G__13968;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__13969 = o;
if(G__13969){
var bit__4757__auto__ = (G__13969.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4757__auto__) || (G__13969.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__13969.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13969);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13969);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__13970 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13970) : cljs.core.key.call(null,G__13970));
})(),(function (){var G__13971 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13971) : cljs.core.val.call(null,G__13971));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4423__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
var G__13977 = cljs.core.next(es);
var G__13978 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__13972 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13972) : cljs.core.key.call(null,G__13972));
})(),(function (){var G__13973 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13973) : cljs.core.val.call(null,G__13973));
})());
es = G__13977;
tcoll__$2 = G__13978;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__13974 = self__.len;
var G__13975 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__13974,G__13975) : cljs.core.array__GT_transient_hash_map.call(null,G__13974,G__13975));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__13976_13979 = self__.arr;
G__13976_13979.pop();

G__13976_13979.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__13980 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__13981 = (i + (2));
out = G__13980;
i = G__13981;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__13984 = cljs.core.aclone(arr);
(G__13984[i] = a);

return G__13984;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__13985 = cljs.core.aclone(arr);
(G__13985[i] = a);

(G__13985[j] = b);

return G__13985;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__13990 = init__$1;
var G__13991 = k;
var G__13992 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13990,G__13991,G__13992) : f.call(null,G__13990,G__13991,G__13992));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13993 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13993) : cljs.core.deref.call(null,G__13993));
} else {
var G__13994 = (i + (2));
var G__13995 = init__$2;
i = G__13994;
init__$1 = G__13995;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__13996 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__13996) : cljs.core.create_inode_seq.call(null,G__13996));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_14010 = (0);
var j_14011 = (0);
while(true){
if((i_14010 < (32))){
if((((self__.bitmap >>> i_14010) & (1)) === (0))){
var G__14012 = (i_14010 + (1));
var G__14013 = j_14011;
i_14010 = G__14012;
j_14011 = G__14013;
continue;
} else {
(nodes[i_14010] = ((!(((self__.arr[j_14011]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_14011])),(self__.arr[j_14011]),(self__.arr[(j_14011 + (1))]),added_leaf_QMARK_):(self__.arr[(j_14011 + (1))])));

var G__14014 = (i_14010 + (1));
var G__14015 = (j_14011 + (2));
i_14010 = G__14014;
j_14011 = G__14015;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__13997 = edit__$1;
var G__13998 = (shift + (5));
var G__13999 = key_or_nil;
var G__14000 = val_or_node;
var G__14001 = hash;
var G__14002 = key;
var G__14003 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__13997,G__13998,G__13999,G__14000,G__14001,G__14002,G__14003) : cljs.core.create_node.call(null,G__13997,G__13998,G__13999,G__14000,G__14001,G__14002,G__14003));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_14016 = (0);
var j_14017 = (0);
while(true){
if((i_14016 < (32))){
if((((self__.bitmap >>> i_14016) & (1)) === (0))){
var G__14018 = (i_14016 + (1));
var G__14019 = j_14017;
i_14016 = G__14018;
j_14017 = G__14019;
continue;
} else {
(nodes[i_14016] = ((!(((self__.arr[j_14017]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_14017])),(self__.arr[j_14017]),(self__.arr[(j_14017 + (1))]),added_leaf_QMARK_):(self__.arr[(j_14017 + (1))])));

var G__14020 = (i_14016 + (1));
var G__14021 = (j_14017 + (2));
i_14016 = G__14020;
j_14017 = G__14021;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__14004 = (shift + (5));
var G__14005 = key_or_nil;
var G__14006 = val_or_node;
var G__14007 = hash;
var G__14008 = key;
var G__14009 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__14004,G__14005,G__14006,G__14007,G__14008,G__14009) : cljs.core.create_node.call(null,G__14004,G__14005,G__14006,G__14007,G__14008,G__14009));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__14022 = (i + (1));
var G__14023 = (j + (2));
var G__14024 = (bitmap | ((1) << i));
i = G__14022;
j = G__14023;
bitmap = G__14024;
continue;
} else {
var G__14025 = (i + (1));
var G__14026 = j;
var G__14027 = bitmap;
i = G__14025;
j = G__14026;
bitmap = G__14027;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__14028 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__14028) : cljs.core.create_array_node_seq.call(null,G__14028));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14029 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14029) : cljs.core.deref.call(null,G__14029));
} else {
var G__14030 = (i + (1));
var G__14031 = init__$2;
i = G__14030;
init__$1 = G__14031;
continue;
}
} else {
var G__14032 = (i + (1));
var G__14033 = init__$1;
i = G__14032;
init__$1 = G__14033;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__14034 = (i + (2));
i = G__14034;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__14035 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__14035) : cljs.core.create_inode_seq.call(null,G__14035));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__14036 = self__.nodes;
var G__14037 = (self__.i + (2));
var G__14038 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14036,G__14037,G__14038) : cljs.core.create_inode_seq.call(null,G__14036,G__14037,G__14038));
} else {
var G__14039 = self__.nodes;
var G__14040 = self__.i;
var G__14041 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14039,G__14040,G__14041) : cljs.core.create_inode_seq.call(null,G__14039,G__14040,G__14041));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4423__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4423__auto__)){
var node = temp__4423__auto__;
var temp__4423__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4423__auto____$1)){
var node_seq = temp__4423__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__14045 = (j + (2));
j = G__14045;
continue;
}
} else {
var G__14046 = (j + (2));
j = G__14046;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__14047 = null;
var G__14048 = self__.nodes;
var G__14049 = self__.i;
var G__14050 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__14047,G__14048,G__14049,G__14050) : cljs.core.create_array_node_seq.call(null,G__14047,G__14048,G__14049,G__14050));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4423__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4423__auto__)){
var nj = temp__4423__auto__;
var temp__4423__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4423__auto____$1)){
var ns = temp__4423__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__14055 = (j + (1));
j = G__14055;
continue;
}
} else {
var G__14056 = (j + (1));
j = G__14056;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14058 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14058) : cljs.core.keys.call(null,G__14058));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14059 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14059) : cljs.core.vals.call(null,G__14059));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14060 = cljs.core.seq(coll);
var chunk__14061 = null;
var count__14062 = (0);
var i__14063 = (0);
while(true){
if((i__14063 < count__14062)){
var vec__14064 = chunk__14061.cljs$core$IIndexed$_nth$arity$2(null,i__14063);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14064,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14064,(1),null);
var G__14065_14076 = v;
var G__14066_14077 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14065_14076,G__14066_14077) : f.call(null,G__14065_14076,G__14066_14077));

var G__14078 = seq__14060;
var G__14079 = chunk__14061;
var G__14080 = count__14062;
var G__14081 = (i__14063 + (1));
seq__14060 = G__14078;
chunk__14061 = G__14079;
count__14062 = G__14080;
i__14063 = G__14081;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__14060);
if(temp__4425__auto__){
var seq__14060__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14060__$1)){
var c__4863__auto__ = cljs.core.chunk_first(seq__14060__$1);
var G__14082 = cljs.core.chunk_rest(seq__14060__$1);
var G__14083 = c__4863__auto__;
var G__14084 = cljs.core.count(c__4863__auto__);
var G__14085 = (0);
seq__14060 = G__14082;
chunk__14061 = G__14083;
count__14062 = G__14084;
i__14063 = G__14085;
continue;
} else {
var vec__14067 = cljs.core.first(seq__14060__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14067,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14067,(1),null);
var G__14068_14086 = v;
var G__14069_14087 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14068_14086,G__14069_14087) : f.call(null,G__14068_14086,G__14069_14087));

var G__14088 = cljs.core.next(seq__14060__$1);
var G__14089 = null;
var G__14090 = (0);
var G__14091 = (0);
seq__14060 = G__14088;
chunk__14061 = G__14089;
count__14062 = G__14090;
i__14063 = G__14091;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__14070 = init;
var G__14071 = null;
var G__14072 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14070,G__14071,G__14072) : f.call(null,G__14070,G__14071,G__14072));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__14073 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14073) : cljs.core.deref.call(null,G__14073));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj14075 = {};
return obj14075;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__14092 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__14093 = cljs.core.next(es);
ret = G__14092;
es = G__14093;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__14094 = null;
var G__14094__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14094__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14094 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14094__2.call(this,self__,k);
case 3:
return G__14094__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14094.cljs$core$IFn$_invoke$arity$2 = G__14094__2;
G__14094.cljs$core$IFn$_invoke$arity$3 = G__14094__3;
return G__14094;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args14057){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14057)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__14095 = (i + (2));
var G__14096 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__14095;
ret = G__14096;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__14097 = (i + (1));
var G__14098 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__14097;
out = G__14098;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__14099 = o;
if(G__14099){
var bit__4757__auto__ = (G__14099.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4757__auto__) || (G__14099.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__14099.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14099);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14099);
}
})()){
return tcoll.assoc_BANG_((function (){var G__14100 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14100) : cljs.core.key.call(null,G__14100));
})(),(function (){var G__14101 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14101) : cljs.core.val.call(null,G__14101));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4423__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
var G__14104 = cljs.core.next(es);
var G__14105 = tcoll__$1.assoc_BANG_((function (){var G__14102 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14102) : cljs.core.key.call(null,G__14102));
})(),(function (){var G__14103 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14103) : cljs.core.val.call(null,G__14103));
})());
es = G__14104;
tcoll__$1 = G__14105;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__14106 = ((ascending_QMARK_)?t.left:t.right);
var G__14107 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__14106;
stack__$1 = G__14107;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__14120 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14120) : cljs.core.deref.call(null,G__14120));
} else {
var init__$2 = (function (){var G__14121 = init__$1;
var G__14122 = node.key;
var G__14123 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14121,G__14122,G__14123) : f.call(null,G__14121,G__14122,G__14123));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14124 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14124) : cljs.core.deref.call(null,G__14124));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__14125 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14125) : cljs.core.deref.call(null,G__14125));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__14127 = null;
var G__14127__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14127__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14127 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14127__2.call(this,self__,k);
case 3:
return G__14127__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14127.cljs$core$IFn$_invoke$arity$2 = G__14127__2;
G__14127.cljs$core$IFn$_invoke$arity$3 = G__14127__3;
return G__14127;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args14126){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14126)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__14129 = null;
var G__14129__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14129__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14129 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14129__2.call(this,self__,k);
case 3:
return G__14129__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14129.cljs$core$IFn$_invoke$arity$2 = G__14129__2;
G__14129.cljs$core$IFn$_invoke$arity$3 = G__14129__3;
return G__14129;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args14128){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14128)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__14142 = k;
var G__14143 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14142,G__14143) : comp.call(null,G__14142,G__14143));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__14162 = k;
var G__14163 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14162,G__14163) : comp.call(null,G__14162,G__14163));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__14174 = k;
var G__14175 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14174,G__14175) : comp.call(null,G__14174,G__14175));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14177 = cljs.core.seq(coll);
var chunk__14178 = null;
var count__14179 = (0);
var i__14180 = (0);
while(true){
if((i__14180 < count__14179)){
var vec__14181 = chunk__14178.cljs$core$IIndexed$_nth$arity$2(null,i__14180);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14181,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14181,(1),null);
var G__14182_14194 = v;
var G__14183_14195 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14182_14194,G__14183_14195) : f.call(null,G__14182_14194,G__14183_14195));

var G__14196 = seq__14177;
var G__14197 = chunk__14178;
var G__14198 = count__14179;
var G__14199 = (i__14180 + (1));
seq__14177 = G__14196;
chunk__14178 = G__14197;
count__14179 = G__14198;
i__14180 = G__14199;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__14177);
if(temp__4425__auto__){
var seq__14177__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14177__$1)){
var c__4863__auto__ = cljs.core.chunk_first(seq__14177__$1);
var G__14200 = cljs.core.chunk_rest(seq__14177__$1);
var G__14201 = c__4863__auto__;
var G__14202 = cljs.core.count(c__4863__auto__);
var G__14203 = (0);
seq__14177 = G__14200;
chunk__14178 = G__14201;
count__14179 = G__14202;
i__14180 = G__14203;
continue;
} else {
var vec__14184 = cljs.core.first(seq__14177__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14184,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14184,(1),null);
var G__14185_14204 = v;
var G__14186_14205 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14185_14204,G__14186_14205) : f.call(null,G__14185_14204,G__14186_14205));

var G__14206 = cljs.core.next(seq__14177__$1);
var G__14207 = null;
var G__14208 = (0);
var G__14209 = (0);
seq__14177 = G__14206;
chunk__14178 = G__14207;
count__14179 = G__14208;
i__14180 = G__14209;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14187 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14187) : cljs.core.keys.call(null,G__14187));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14188 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14188) : cljs.core.vals.call(null,G__14188));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__14189 = k;
var G__14190 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14189,G__14190) : self__.comp.call(null,G__14189,G__14190));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__14210 = t.left;
t = G__14210;
continue;
} else {
var G__14211 = t.right;
t = G__14211;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__14212 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__14213 = cljs.core.next(es);
ret = G__14212;
es = G__14213;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__14214 = null;
var G__14214__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14214__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14214 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14214__2.call(this,self__,k);
case 3:
return G__14214__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14214.cljs$core$IFn$_invoke$arity$2 = G__14214__2;
G__14214.cljs$core$IFn$_invoke$arity$3 = G__14214__3;
return G__14214;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args14176){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14176)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__14191 = k;
var G__14192 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14191,G__14192) : self__.comp.call(null,G__14191,G__14192));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__14215 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__14216 = t.left;
stack = G__14215;
t = G__14216;
continue;
} else {
var G__14217 = stack;
var G__14218 = t.right;
stack = G__14217;
t = G__14218;
continue;
}
} else {
if((c > (0))){
var G__14219 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__14220 = t.right;
stack = G__14219;
t = G__14220;
continue;
} else {
var G__14221 = stack;
var G__14222 = t.left;
stack = G__14221;
t = G__14222;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__14193 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14193) : cljs.core.key.call(null,G__14193));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__14223 = cljs.core.nnext(in$);
var G__14224 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14223;
out = G__14224;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14225__i = 0, G__14225__a = new Array(arguments.length -  0);
while (G__14225__i < G__14225__a.length) {G__14225__a[G__14225__i] = arguments[G__14225__i + 0]; ++G__14225__i;}
  keyvals = new cljs.core.IndexedSeq(G__14225__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__14226){
var keyvals = cljs.core.seq(arglist__14226);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14227__i = 0, G__14227__a = new Array(arguments.length -  0);
while (G__14227__i < G__14227__a.length) {G__14227__a[G__14227__i] = arguments[G__14227__i + 0]; ++G__14227__i;}
  keyvals = new cljs.core.IndexedSeq(G__14227__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__14228){
var keyvals = cljs.core.seq(arglist__14228);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj14232 = {};
return obj14232;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__14233 = cljs.core.nnext(kvs);
kvs = G__14233;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14234__i = 0, G__14234__a = new Array(arguments.length -  0);
while (G__14234__i < G__14234__a.length) {G__14234__a[G__14234__i] = arguments[G__14234__i + 0]; ++G__14234__i;}
  keyvals = new cljs.core.IndexedSeq(G__14234__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__14235){
var keyvals = cljs.core.seq(arglist__14235);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__14236 = cljs.core.nnext(in$);
var G__14237 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14236;
out = G__14237;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14238__i = 0, G__14238__a = new Array(arguments.length -  0);
while (G__14238__i < G__14238__a.length) {G__14238__a[G__14238__i] = arguments[G__14238__i + 0]; ++G__14238__i;}
  keyvals = new cljs.core.IndexedSeq(G__14238__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__14239){
var keyvals = cljs.core.seq(arglist__14239);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__14240 = cljs.core.nnext(in$);
var G__14241 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14240;
out = G__14241;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__14242__i = 0, G__14242__a = new Array(arguments.length -  1);
while (G__14242__i < G__14242__a.length) {G__14242__a[G__14242__i] = arguments[G__14242__i + 1]; ++G__14242__i;}
  keyvals = new cljs.core.IndexedSeq(G__14242__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__14243){
var comparator = cljs.core.first(arglist__14243);
var keyvals = cljs.core.rest(arglist__14243);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14244 = self__.mseq;
if(G__14244){
var bit__4757__auto__ = (G__14244.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4757__auto__) || (G__14244.cljs$core$INext$)){
return true;
} else {
if((!G__14244.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14244);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14244);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14245 = self__.mseq;
if(G__14245){
var bit__4757__auto__ = (G__14245.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4757__auto__) || (G__14245.cljs$core$INext$)){
return true;
} else {
if((!G__14245.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14245);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14245);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4425__auto__ = cljs.core.seq(hash_map);
if(temp__4425__auto__){
var mseq = temp__4425__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14246 = self__.mseq;
if(G__14246){
var bit__4757__auto__ = (G__14246.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4757__auto__) || (G__14246.cljs$core$INext$)){
return true;
} else {
if((!G__14246.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14246);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14246);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14247 = self__.mseq;
if(G__14247){
var bit__4757__auto__ = (G__14247.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4757__auto__) || (G__14247.cljs$core$INext$)){
return true;
} else {
if((!G__14247.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14247);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14247);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4425__auto__ = cljs.core.seq(hash_map);
if(temp__4425__auto__){
var mseq = temp__4425__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__14248_SHARP_,p2__14249_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4076__auto__ = p1__14248_SHARP_;
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__14249_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__14250__i = 0, G__14250__a = new Array(arguments.length -  0);
while (G__14250__i < G__14250__a.length) {G__14250__a[G__14250__i] = arguments[G__14250__i + 0]; ++G__14250__i;}
  maps = new cljs.core.IndexedSeq(G__14250__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__14251){
var maps = cljs.core.seq(arglist__14251);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14254 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14255 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14254,G__14255) : f.call(null,G__14254,G__14255));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__4076__auto__ = m1;
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__14256__i = 0, G__14256__a = new Array(arguments.length -  1);
while (G__14256__i < G__14256__a.length) {G__14256__a[G__14256__i] = arguments[G__14256__i + 1]; ++G__14256__i;}
  maps = new cljs.core.IndexedSeq(G__14256__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__14257){
var f = cljs.core.first(arglist__14257);
var maps = cljs.core.rest(arglist__14257);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__14258 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__14259 = cljs.core.next(keys);
ret = G__14258;
keys = G__14259;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14262 = cljs.core.seq(coll);
var chunk__14263 = null;
var count__14264 = (0);
var i__14265 = (0);
while(true){
if((i__14265 < count__14264)){
var vec__14266 = chunk__14263.cljs$core$IIndexed$_nth$arity$2(null,i__14265);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14266,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14266,(1),null);
var G__14267_14272 = v;
var G__14268_14273 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14267_14272,G__14268_14273) : f.call(null,G__14267_14272,G__14268_14273));

var G__14274 = seq__14262;
var G__14275 = chunk__14263;
var G__14276 = count__14264;
var G__14277 = (i__14265 + (1));
seq__14262 = G__14274;
chunk__14263 = G__14275;
count__14264 = G__14276;
i__14265 = G__14277;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__14262);
if(temp__4425__auto__){
var seq__14262__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14262__$1)){
var c__4863__auto__ = cljs.core.chunk_first(seq__14262__$1);
var G__14278 = cljs.core.chunk_rest(seq__14262__$1);
var G__14279 = c__4863__auto__;
var G__14280 = cljs.core.count(c__4863__auto__);
var G__14281 = (0);
seq__14262 = G__14278;
chunk__14263 = G__14279;
count__14264 = G__14280;
i__14265 = G__14281;
continue;
} else {
var vec__14269 = cljs.core.first(seq__14262__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14269,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14269,(1),null);
var G__14270_14282 = v;
var G__14271_14283 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14270_14282,G__14271_14283) : f.call(null,G__14270_14282,G__14271_14283));

var G__14284 = cljs.core.next(seq__14262__$1);
var G__14285 = null;
var G__14286 = (0);
var G__14287 = (0);
seq__14262 = G__14284;
chunk__14263 = G__14285;
count__14264 = G__14286;
i__14265 = G__14287;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__14260_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__14260_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__14288 = null;
var G__14288__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14288__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14288 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14288__2.call(this,self__,k);
case 3:
return G__14288__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14288.cljs$core$IFn$_invoke$arity$2 = G__14288__2;
G__14288.cljs$core$IFn$_invoke$arity$3 = G__14288__3;
return G__14288;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args14261){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14261)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__14289 = (i + (1));
var G__14290 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__14289;
out = G__14290;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__14291 = (i + (1));
var G__14292 = cljs.core._conj_BANG_(out,(items[i]));
i = G__14291;
out = G__14292;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition1$ = 136;
this.cljs$lang$protocol_mask$partition0$ = 259;
})
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.call = (function() {
var G__14294 = null;
var G__14294__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__14294__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__14294 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14294__2.call(this,self__,k);
case 3:
return G__14294__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14294.cljs$core$IFn$_invoke$arity$2 = G__14294__2;
G__14294.cljs$core$IFn$_invoke$arity$3 = G__14294__3;
return G__14294;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args14293){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14293)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14297 = cljs.core.seq(coll);
var chunk__14298 = null;
var count__14299 = (0);
var i__14300 = (0);
while(true){
if((i__14300 < count__14299)){
var vec__14301 = chunk__14298.cljs$core$IIndexed$_nth$arity$2(null,i__14300);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14301,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14301,(1),null);
var G__14302_14307 = v;
var G__14303_14308 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14302_14307,G__14303_14308) : f.call(null,G__14302_14307,G__14303_14308));

var G__14309 = seq__14297;
var G__14310 = chunk__14298;
var G__14311 = count__14299;
var G__14312 = (i__14300 + (1));
seq__14297 = G__14309;
chunk__14298 = G__14310;
count__14299 = G__14311;
i__14300 = G__14312;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__14297);
if(temp__4425__auto__){
var seq__14297__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14297__$1)){
var c__4863__auto__ = cljs.core.chunk_first(seq__14297__$1);
var G__14313 = cljs.core.chunk_rest(seq__14297__$1);
var G__14314 = c__4863__auto__;
var G__14315 = cljs.core.count(c__4863__auto__);
var G__14316 = (0);
seq__14297 = G__14313;
chunk__14298 = G__14314;
count__14299 = G__14315;
i__14300 = G__14316;
continue;
} else {
var vec__14304 = cljs.core.first(seq__14297__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14304,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14304,(1),null);
var G__14305_14317 = v;
var G__14306_14318 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14305_14317,G__14306_14318) : f.call(null,G__14305_14317,G__14306_14318));

var G__14319 = cljs.core.next(seq__14297__$1);
var G__14320 = null;
var G__14321 = (0);
var G__14322 = (0);
seq__14297 = G__14319;
chunk__14298 = G__14320;
count__14299 = G__14321;
i__14300 = G__14322;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__14295_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__14295_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__14323 = null;
var G__14323__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14323__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14323 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14323__2.call(this,self__,k);
case 3:
return G__14323__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14323.cljs$core$IFn$_invoke$arity$2 = G__14323__2;
G__14323.cljs$core$IFn$_invoke$arity$3 = G__14323__3;
return G__14323;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args14296){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14296)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4957__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4957__auto__.length)){
var G__14324 = (i + (1));
var G__14325 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__14324;
res = G__14325;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__14326 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__14327 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__14326;
out = G__14327;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__14328__delegate = function (keys){
return cljs.core.set(keys);
};
var G__14328 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__14329__i = 0, G__14329__a = new Array(arguments.length -  0);
while (G__14329__i < G__14329__a.length) {G__14329__a[G__14329__i] = arguments[G__14329__i + 0]; ++G__14329__i;}
  keys = new cljs.core.IndexedSeq(G__14329__a,0);
} 
return G__14328__delegate.call(this,keys);};
G__14328.cljs$lang$maxFixedArity = 0;
G__14328.cljs$lang$applyTo = (function (arglist__14330){
var keys = cljs.core.seq(arglist__14330);
return G__14328__delegate(keys);
});
G__14328.cljs$core$IFn$_invoke$arity$variadic = G__14328__delegate;
return G__14328;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__14331 = null;
if (arguments.length > 0) {
var G__14332__i = 0, G__14332__a = new Array(arguments.length -  0);
while (G__14332__i < G__14332__a.length) {G__14332__a[G__14332__i] = arguments[G__14332__i + 0]; ++G__14332__i;}
G__14331 = new cljs.core.IndexedSeq(G__14332__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__14331);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__14333__i = 0, G__14333__a = new Array(arguments.length -  0);
while (G__14333__i < G__14333__a.length) {G__14333__a[G__14333__i] = arguments[G__14333__i + 0]; ++G__14333__i;}
  keys = new cljs.core.IndexedSeq(G__14333__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__14334){
var keys = cljs.core.seq(arglist__14334);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__14335__i = 0, G__14335__a = new Array(arguments.length -  1);
while (G__14335__i < G__14335__a.length) {G__14335__a[G__14335__i] = arguments[G__14335__i + 1]; ++G__14335__i;}
  keys = new cljs.core.IndexedSeq(G__14335__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__14336){
var comparator = cljs.core.first(arglist__14336);
var keys = cljs.core.rest(arglist__14336);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__14337_SHARP_){
var temp__4423__auto__ = cljs.core.find(smap,p1__14337_SHARP_);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.val(e);
} else {
return p1__14337_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4423__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__14338_SHARP_){
var temp__4423__auto__ = cljs.core.find(smap,p1__14338_SHARP_);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.second(e);
} else {
return p1__14338_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__14359 = null;
var G__14359__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14359__1 = (function (result){
var G__14349 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14349) : rf.call(null,G__14349));
});
var G__14359__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__14350 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14350) : cljs.core.deref.call(null,G__14350));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__14351 = result;
var G__14352 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14351,G__14352) : rf.call(null,G__14351,G__14352));
}
});
G__14359 = function(result,input){
switch(arguments.length){
case 0:
return G__14359__0.call(this);
case 1:
return G__14359__1.call(this,result);
case 2:
return G__14359__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14359.cljs$core$IFn$_invoke$arity$0 = G__14359__0;
G__14359.cljs$core$IFn$_invoke$arity$1 = G__14359__1;
G__14359.cljs$core$IFn$_invoke$arity$2 = G__14359__2;
return G__14359;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__14357,seen__$1){
while(true){
var vec__14358 = p__14357;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14358,(0),null);
var xs__$1 = vec__14358;
var temp__4425__auto__ = cljs.core.seq(xs__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__14360 = cljs.core.rest(s);
var G__14361 = seen__$1;
p__14357 = G__14360;
seen__$1 = G__14361;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__14362 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__14363 = cljs.core.next(s__$1);
ret = G__14362;
s__$1 = G__14363;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__14365 = x;
if(G__14365){
var bit__4750__auto__ = (G__14365.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4750__auto__) || (G__14365.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__14366 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__14367 = cljs.core.next(ks);
var G__14368 = cljs.core.next(vs);
map = G__14366;
ks = G__14367;
vs = G__14368;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__14379 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14379) : k.call(null,G__14379));
})() > (function (){var G__14380 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14380) : k.call(null,G__14380));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__14381__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__14369_SHARP_,p2__14370_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__14369_SHARP_,p2__14370_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__14381 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__14382__i = 0, G__14382__a = new Array(arguments.length -  3);
while (G__14382__i < G__14382__a.length) {G__14382__a[G__14382__i] = arguments[G__14382__i + 3]; ++G__14382__i;}
  more = new cljs.core.IndexedSeq(G__14382__a,0);
} 
return G__14381__delegate.call(this,k,x,y,more);};
G__14381.cljs$lang$maxFixedArity = 3;
G__14381.cljs$lang$applyTo = (function (arglist__14383){
var k = cljs.core.first(arglist__14383);
arglist__14383 = cljs.core.next(arglist__14383);
var x = cljs.core.first(arglist__14383);
arglist__14383 = cljs.core.next(arglist__14383);
var y = cljs.core.first(arglist__14383);
var more = cljs.core.rest(arglist__14383);
return G__14381__delegate(k,x,y,more);
});
G__14381.cljs$core$IFn$_invoke$arity$variadic = G__14381__delegate;
return G__14381;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__14384 = null;
if (arguments.length > 3) {
var G__14385__i = 0, G__14385__a = new Array(arguments.length -  3);
while (G__14385__i < G__14385__a.length) {G__14385__a[G__14385__i] = arguments[G__14385__i + 3]; ++G__14385__i;}
G__14384 = new cljs.core.IndexedSeq(G__14385__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__14384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__14396 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14396) : k.call(null,G__14396));
})() < (function (){var G__14397 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14397) : k.call(null,G__14397));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__14398__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__14386_SHARP_,p2__14387_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__14386_SHARP_,p2__14387_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__14398 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__14399__i = 0, G__14399__a = new Array(arguments.length -  3);
while (G__14399__i < G__14399__a.length) {G__14399__a[G__14399__i] = arguments[G__14399__i + 3]; ++G__14399__i;}
  more = new cljs.core.IndexedSeq(G__14399__a,0);
} 
return G__14398__delegate.call(this,k,x,y,more);};
G__14398.cljs$lang$maxFixedArity = 3;
G__14398.cljs$lang$applyTo = (function (arglist__14400){
var k = cljs.core.first(arglist__14400);
arglist__14400 = cljs.core.next(arglist__14400);
var x = cljs.core.first(arglist__14400);
arglist__14400 = cljs.core.next(arglist__14400);
var y = cljs.core.first(arglist__14400);
var more = cljs.core.rest(arglist__14400);
return G__14398__delegate(k,x,y,more);
});
G__14398.cljs$core$IFn$_invoke$arity$variadic = G__14398__delegate;
return G__14398;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__14401 = null;
if (arguments.length > 3) {
var G__14402__i = 0, G__14402__a = new Array(arguments.length -  3);
while (G__14402__i < G__14402__a.length) {G__14402__a[G__14402__i] = arguments[G__14402__i + 3]; ++G__14402__i;}
G__14401 = new cljs.core.IndexedSeq(G__14402__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__14401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__14419 = null;
var G__14419__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14419__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__14414 = result;
var G__14415 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14414,G__14415) : rf.call(null,G__14414,G__14415));
})());
})());
var G__14416 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14416) : rf.call(null,G__14416));
});
var G__14419__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__14417 = result;
var G__14418 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14417,G__14418) : rf.call(null,G__14417,G__14418));
} else {
return result;
}
});
G__14419 = function(result,input){
switch(arguments.length){
case 0:
return G__14419__0.call(this);
case 1:
return G__14419__1.call(this,result);
case 2:
return G__14419__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14419.cljs$core$IFn$_invoke$arity$0 = G__14419__0;
G__14419.cljs$core$IFn$_invoke$arity$1 = G__14419__1;
G__14419.cljs$core$IFn$_invoke$arity$2 = G__14419__2;
return G__14419;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__14432 = null;
var G__14432__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14432__1 = (function (result){
var G__14427 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14427) : rf.call(null,G__14427));
});
var G__14432__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__14428 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14428) : pred.call(null,G__14428));
})())){
var G__14429 = result;
var G__14430 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14429,G__14430) : rf.call(null,G__14429,G__14430));
} else {
return cljs.core.reduced(result);
}
});
G__14432 = function(result,input){
switch(arguments.length){
case 0:
return G__14432__0.call(this);
case 1:
return G__14432__1.call(this,result);
case 2:
return G__14432__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14432.cljs$core$IFn$_invoke$arity$0 = G__14432__0;
G__14432.cljs$core$IFn$_invoke$arity$1 = G__14432__1;
G__14432.cljs$core$IFn$_invoke$arity$2 = G__14432__2;
return G__14432;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.truth_((function (){var G__14431 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14431) : pred.call(null,G__14431));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__14437 = (function (){var G__14439 = cljs.core._entry_key(sc,e);
var G__14440 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14439,G__14440) : comp.call(null,G__14439,G__14440));
})();
var G__14438 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__14437,G__14438) : test.call(null,G__14437,G__14438));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__14444 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14444,(0),null);
var s = vec__14444;
if(cljs.core.truth_((function (){var G__14445 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14445) : include.call(null,G__14445));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__14446 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14446,(0),null);
var s = vec__14446;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__14450 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14450,(0),null);
var s = vec__14450;
if(cljs.core.truth_((function (){var G__14451 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14451) : include.call(null,G__14451));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__14452 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14452,(0),null);
var s = vec__14452;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__14453 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__14453) : Math.ceil.call(null,G__14453));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4497__auto__ = self__.__hash;
if(!((h__4497__auto__ == null))){
return h__4497__auto__;
} else {
var h__4497__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4497__auto____$1;

return h__4497__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__14454 = ret;
var G__14455 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14454,G__14455) : f.call(null,G__14454,G__14455));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__14456 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14456) : cljs.core.deref.call(null,G__14456));
} else {
var G__14457 = (i + self__.step);
var G__14458 = ret__$1;
i = G__14457;
ret = G__14458;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__14476 = null;
var G__14476__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14476__1 = (function (result){
var G__14473 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14473) : rf.call(null,G__14473));
});
var G__14476__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__14474 = result;
var G__14475 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14474,G__14475) : rf.call(null,G__14474,G__14475));
} else {
return result;
}
});
G__14476 = function(result,input){
switch(arguments.length){
case 0:
return G__14476__0.call(this);
case 1:
return G__14476__1.call(this,result);
case 2:
return G__14476__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14476.cljs$core$IFn$_invoke$arity$0 = G__14476__0;
G__14476.cljs$core$IFn$_invoke$arity$1 = G__14476__1;
G__14476.cljs$core$IFn$_invoke$arity$2 = G__14476__2;
return G__14476;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__14498 = null;
var G__14498__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14498__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__14489 = result;
var G__14490 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14489,G__14490) : rf.call(null,G__14489,G__14490));
})());
})());
var G__14491 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14491) : rf.call(null,G__14491));
});
var G__14498__2 = (function (result,input){
var pval = (function (){var G__14492 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14492) : cljs.core.deref.call(null,G__14492));
})();
var val = (function (){var G__14493 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14493) : f.call(null,G__14493));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__14494 = result;
var G__14495 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14494,G__14495) : rf.call(null,G__14494,G__14495));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__14498 = function(result,input){
switch(arguments.length){
case 0:
return G__14498__0.call(this);
case 1:
return G__14498__1.call(this,result);
case 2:
return G__14498__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14498.cljs$core$IFn$_invoke$arity$0 = G__14498__0;
G__14498.cljs$core$IFn$_invoke$arity$1 = G__14498__1;
G__14498.cljs$core$IFn$_invoke$arity$2 = G__14498__2;
return G__14498;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__14496 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14496) : f.call(null,G__14496));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4425__auto__){
return (function (p1__14477_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__14497 = p1__14477_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14497) : f.call(null,G__14497));
})());
});})(fst,fv,s,temp__4425__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__14507 = init;
var G__14508 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14507,G__14508) : f.call(null,G__14507,G__14508));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__14603 = null;
var G__14603__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__14603__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14561 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14561) : f.call(null,G__14561));
})()],null));
});
var G__14603__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14562 = x;
var G__14563 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14562,G__14563) : f.call(null,G__14562,G__14563));
})()],null));
});
var G__14603__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14564 = x;
var G__14565 = y;
var G__14566 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14564,G__14565,G__14566) : f.call(null,G__14564,G__14565,G__14566));
})()],null));
});
var G__14603__4 = (function() { 
var G__14604__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__14604 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14605__i = 0, G__14605__a = new Array(arguments.length -  3);
while (G__14605__i < G__14605__a.length) {G__14605__a[G__14605__i] = arguments[G__14605__i + 3]; ++G__14605__i;}
  args = new cljs.core.IndexedSeq(G__14605__a,0);
} 
return G__14604__delegate.call(this,x,y,z,args);};
G__14604.cljs$lang$maxFixedArity = 3;
G__14604.cljs$lang$applyTo = (function (arglist__14606){
var x = cljs.core.first(arglist__14606);
arglist__14606 = cljs.core.next(arglist__14606);
var y = cljs.core.first(arglist__14606);
arglist__14606 = cljs.core.next(arglist__14606);
var z = cljs.core.first(arglist__14606);
var args = cljs.core.rest(arglist__14606);
return G__14604__delegate(x,y,z,args);
});
G__14604.cljs$core$IFn$_invoke$arity$variadic = G__14604__delegate;
return G__14604;
})()
;
G__14603 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14603__0.call(this);
case 1:
return G__14603__1.call(this,x);
case 2:
return G__14603__2.call(this,x,y);
case 3:
return G__14603__3.call(this,x,y,z);
default:
var G__14607 = null;
if (arguments.length > 3) {
var G__14608__i = 0, G__14608__a = new Array(arguments.length -  3);
while (G__14608__i < G__14608__a.length) {G__14608__a[G__14608__i] = arguments[G__14608__i + 3]; ++G__14608__i;}
G__14607 = new cljs.core.IndexedSeq(G__14608__a,0);
}
return G__14603__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14603.cljs$lang$maxFixedArity = 3;
G__14603.cljs$lang$applyTo = G__14603__4.cljs$lang$applyTo;
G__14603.cljs$core$IFn$_invoke$arity$0 = G__14603__0;
G__14603.cljs$core$IFn$_invoke$arity$1 = G__14603__1;
G__14603.cljs$core$IFn$_invoke$arity$2 = G__14603__2;
G__14603.cljs$core$IFn$_invoke$arity$3 = G__14603__3;
G__14603.cljs$core$IFn$_invoke$arity$variadic = G__14603__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14603;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__14609 = null;
var G__14609__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__14609__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14567 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14567) : f.call(null,G__14567));
})(),(function (){var G__14568 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14568) : g.call(null,G__14568));
})()],null));
});
var G__14609__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14569 = x;
var G__14570 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14569,G__14570) : f.call(null,G__14569,G__14570));
})(),(function (){var G__14571 = x;
var G__14572 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14571,G__14572) : g.call(null,G__14571,G__14572));
})()],null));
});
var G__14609__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14573 = x;
var G__14574 = y;
var G__14575 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14573,G__14574,G__14575) : f.call(null,G__14573,G__14574,G__14575));
})(),(function (){var G__14576 = x;
var G__14577 = y;
var G__14578 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14576,G__14577,G__14578) : g.call(null,G__14576,G__14577,G__14578));
})()],null));
});
var G__14609__4 = (function() { 
var G__14610__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__14610 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14611__i = 0, G__14611__a = new Array(arguments.length -  3);
while (G__14611__i < G__14611__a.length) {G__14611__a[G__14611__i] = arguments[G__14611__i + 3]; ++G__14611__i;}
  args = new cljs.core.IndexedSeq(G__14611__a,0);
} 
return G__14610__delegate.call(this,x,y,z,args);};
G__14610.cljs$lang$maxFixedArity = 3;
G__14610.cljs$lang$applyTo = (function (arglist__14612){
var x = cljs.core.first(arglist__14612);
arglist__14612 = cljs.core.next(arglist__14612);
var y = cljs.core.first(arglist__14612);
arglist__14612 = cljs.core.next(arglist__14612);
var z = cljs.core.first(arglist__14612);
var args = cljs.core.rest(arglist__14612);
return G__14610__delegate(x,y,z,args);
});
G__14610.cljs$core$IFn$_invoke$arity$variadic = G__14610__delegate;
return G__14610;
})()
;
G__14609 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14609__0.call(this);
case 1:
return G__14609__1.call(this,x);
case 2:
return G__14609__2.call(this,x,y);
case 3:
return G__14609__3.call(this,x,y,z);
default:
var G__14613 = null;
if (arguments.length > 3) {
var G__14614__i = 0, G__14614__a = new Array(arguments.length -  3);
while (G__14614__i < G__14614__a.length) {G__14614__a[G__14614__i] = arguments[G__14614__i + 3]; ++G__14614__i;}
G__14613 = new cljs.core.IndexedSeq(G__14614__a,0);
}
return G__14609__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14613);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14609.cljs$lang$maxFixedArity = 3;
G__14609.cljs$lang$applyTo = G__14609__4.cljs$lang$applyTo;
G__14609.cljs$core$IFn$_invoke$arity$0 = G__14609__0;
G__14609.cljs$core$IFn$_invoke$arity$1 = G__14609__1;
G__14609.cljs$core$IFn$_invoke$arity$2 = G__14609__2;
G__14609.cljs$core$IFn$_invoke$arity$3 = G__14609__3;
G__14609.cljs$core$IFn$_invoke$arity$variadic = G__14609__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14609;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__14615 = null;
var G__14615__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__14615__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14579 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14579) : f.call(null,G__14579));
})(),(function (){var G__14580 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14580) : g.call(null,G__14580));
})(),(function (){var G__14581 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14581) : h.call(null,G__14581));
})()],null));
});
var G__14615__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14582 = x;
var G__14583 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14582,G__14583) : f.call(null,G__14582,G__14583));
})(),(function (){var G__14584 = x;
var G__14585 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14584,G__14585) : g.call(null,G__14584,G__14585));
})(),(function (){var G__14586 = x;
var G__14587 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14586,G__14587) : h.call(null,G__14586,G__14587));
})()],null));
});
var G__14615__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14588 = x;
var G__14589 = y;
var G__14590 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14588,G__14589,G__14590) : f.call(null,G__14588,G__14589,G__14590));
})(),(function (){var G__14591 = x;
var G__14592 = y;
var G__14593 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14591,G__14592,G__14593) : g.call(null,G__14591,G__14592,G__14593));
})(),(function (){var G__14594 = x;
var G__14595 = y;
var G__14596 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14594,G__14595,G__14596) : h.call(null,G__14594,G__14595,G__14596));
})()],null));
});
var G__14615__4 = (function() { 
var G__14616__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__14616 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14617__i = 0, G__14617__a = new Array(arguments.length -  3);
while (G__14617__i < G__14617__a.length) {G__14617__a[G__14617__i] = arguments[G__14617__i + 3]; ++G__14617__i;}
  args = new cljs.core.IndexedSeq(G__14617__a,0);
} 
return G__14616__delegate.call(this,x,y,z,args);};
G__14616.cljs$lang$maxFixedArity = 3;
G__14616.cljs$lang$applyTo = (function (arglist__14618){
var x = cljs.core.first(arglist__14618);
arglist__14618 = cljs.core.next(arglist__14618);
var y = cljs.core.first(arglist__14618);
arglist__14618 = cljs.core.next(arglist__14618);
var z = cljs.core.first(arglist__14618);
var args = cljs.core.rest(arglist__14618);
return G__14616__delegate(x,y,z,args);
});
G__14616.cljs$core$IFn$_invoke$arity$variadic = G__14616__delegate;
return G__14616;
})()
;
G__14615 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14615__0.call(this);
case 1:
return G__14615__1.call(this,x);
case 2:
return G__14615__2.call(this,x,y);
case 3:
return G__14615__3.call(this,x,y,z);
default:
var G__14619 = null;
if (arguments.length > 3) {
var G__14620__i = 0, G__14620__a = new Array(arguments.length -  3);
while (G__14620__i < G__14620__a.length) {G__14620__a[G__14620__i] = arguments[G__14620__i + 3]; ++G__14620__i;}
G__14619 = new cljs.core.IndexedSeq(G__14620__a,0);
}
return G__14615__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14615.cljs$lang$maxFixedArity = 3;
G__14615.cljs$lang$applyTo = G__14615__4.cljs$lang$applyTo;
G__14615.cljs$core$IFn$_invoke$arity$0 = G__14615__0;
G__14615.cljs$core$IFn$_invoke$arity$1 = G__14615__1;
G__14615.cljs$core$IFn$_invoke$arity$2 = G__14615__2;
G__14615.cljs$core$IFn$_invoke$arity$3 = G__14615__3;
G__14615.cljs$core$IFn$_invoke$arity$variadic = G__14615__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14615;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__14621__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__14622 = null;
var G__14622__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14509_SHARP_,p2__14510_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14509_SHARP_,(function (){return (p2__14510_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__14510_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__14510_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14622__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14511_SHARP_,p2__14512_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14511_SHARP_,(function (){var G__14597 = x;
return (p2__14512_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__14512_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14597) : p2__14512_SHARP_.call(null,G__14597));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14622__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14513_SHARP_,p2__14514_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14513_SHARP_,(function (){var G__14598 = x;
var G__14599 = y;
return (p2__14514_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__14514_SHARP_.cljs$core$IFn$_invoke$arity$2(G__14598,G__14599) : p2__14514_SHARP_.call(null,G__14598,G__14599));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14622__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14515_SHARP_,p2__14516_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14515_SHARP_,(function (){var G__14600 = x;
var G__14601 = y;
var G__14602 = z;
return (p2__14516_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__14516_SHARP_.cljs$core$IFn$_invoke$arity$3(G__14600,G__14601,G__14602) : p2__14516_SHARP_.call(null,G__14600,G__14601,G__14602));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14622__4 = (function() { 
var G__14623__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14517_SHARP_,p2__14518_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14517_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__14518_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__14623 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14624__i = 0, G__14624__a = new Array(arguments.length -  3);
while (G__14624__i < G__14624__a.length) {G__14624__a[G__14624__i] = arguments[G__14624__i + 3]; ++G__14624__i;}
  args = new cljs.core.IndexedSeq(G__14624__a,0);
} 
return G__14623__delegate.call(this,x,y,z,args);};
G__14623.cljs$lang$maxFixedArity = 3;
G__14623.cljs$lang$applyTo = (function (arglist__14625){
var x = cljs.core.first(arglist__14625);
arglist__14625 = cljs.core.next(arglist__14625);
var y = cljs.core.first(arglist__14625);
arglist__14625 = cljs.core.next(arglist__14625);
var z = cljs.core.first(arglist__14625);
var args = cljs.core.rest(arglist__14625);
return G__14623__delegate(x,y,z,args);
});
G__14623.cljs$core$IFn$_invoke$arity$variadic = G__14623__delegate;
return G__14623;
})()
;
G__14622 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14622__0.call(this);
case 1:
return G__14622__1.call(this,x);
case 2:
return G__14622__2.call(this,x,y);
case 3:
return G__14622__3.call(this,x,y,z);
default:
var G__14626 = null;
if (arguments.length > 3) {
var G__14627__i = 0, G__14627__a = new Array(arguments.length -  3);
while (G__14627__i < G__14627__a.length) {G__14627__a[G__14627__i] = arguments[G__14627__i + 3]; ++G__14627__i;}
G__14626 = new cljs.core.IndexedSeq(G__14627__a,0);
}
return G__14622__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14626);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14622.cljs$lang$maxFixedArity = 3;
G__14622.cljs$lang$applyTo = G__14622__4.cljs$lang$applyTo;
G__14622.cljs$core$IFn$_invoke$arity$0 = G__14622__0;
G__14622.cljs$core$IFn$_invoke$arity$1 = G__14622__1;
G__14622.cljs$core$IFn$_invoke$arity$2 = G__14622__2;
G__14622.cljs$core$IFn$_invoke$arity$3 = G__14622__3;
G__14622.cljs$core$IFn$_invoke$arity$variadic = G__14622__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14622;
})()
;})(fs__$1))
};
var G__14621 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__14628__i = 0, G__14628__a = new Array(arguments.length -  3);
while (G__14628__i < G__14628__a.length) {G__14628__a[G__14628__i] = arguments[G__14628__i + 3]; ++G__14628__i;}
  fs = new cljs.core.IndexedSeq(G__14628__a,0);
} 
return G__14621__delegate.call(this,f,g,h,fs);};
G__14621.cljs$lang$maxFixedArity = 3;
G__14621.cljs$lang$applyTo = (function (arglist__14629){
var f = cljs.core.first(arglist__14629);
arglist__14629 = cljs.core.next(arglist__14629);
var g = cljs.core.first(arglist__14629);
arglist__14629 = cljs.core.next(arglist__14629);
var h = cljs.core.first(arglist__14629);
var fs = cljs.core.rest(arglist__14629);
return G__14621__delegate(f,g,h,fs);
});
G__14621.cljs$core$IFn$_invoke$arity$variadic = G__14621__delegate;
return G__14621;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__14630 = null;
if (arguments.length > 3) {
var G__14631__i = 0, G__14631__a = new Array(arguments.length -  3);
while (G__14631__i < G__14631__a.length) {G__14631__a[G__14631__i] = arguments[G__14631__i + 3]; ++G__14631__i;}
G__14630 = new cljs.core.IndexedSeq(G__14631__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__14630);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__14632 = cljs.core.next(coll);
coll = G__14632;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__14633 = (n - (1));
var G__14634 = cljs.core.next(coll);
n = G__14633;
coll = G__14634;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__14638 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14638,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14638,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14638,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_14646 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__4076__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__14647_14653 = cljs.core.first(coll);
var G__14648_14654 = writer;
var G__14649_14655 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14647_14653,G__14648_14654,G__14649_14655) : print_one.call(null,G__14647_14653,G__14648_14654,G__14649_14655));
} else {
}

var coll_14656__$1 = cljs.core.next(coll);
var n_14657 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_14656__$1) && (((n_14657 == null)) || (!((n_14657 === (0)))))){
cljs.core._write(writer,sep);

var G__14650_14658 = cljs.core.first(coll_14656__$1);
var G__14651_14659 = writer;
var G__14652_14660 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14650_14658,G__14651_14659,G__14652_14660) : print_one.call(null,G__14650_14658,G__14651_14659,G__14652_14660));

var G__14661 = cljs.core.next(coll_14656__$1);
var G__14662 = (n_14657 - (1));
coll_14656__$1 = G__14661;
n_14657 = G__14662;
continue;
} else {
if((cljs.core.seq(coll_14656__$1)) && ((n_14657 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__4076__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_14646;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__14667 = cljs.core.seq(ss);
var chunk__14668 = null;
var count__14669 = (0);
var i__14670 = (0);
while(true){
if((i__14670 < count__14669)){
var s = chunk__14668.cljs$core$IIndexed$_nth$arity$2(null,i__14670);
cljs.core._write(writer,s);

var G__14671 = seq__14667;
var G__14672 = chunk__14668;
var G__14673 = count__14669;
var G__14674 = (i__14670 + (1));
seq__14667 = G__14671;
chunk__14668 = G__14672;
count__14669 = G__14673;
i__14670 = G__14674;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__14667);
if(temp__4425__auto__){
var seq__14667__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14667__$1)){
var c__4863__auto__ = cljs.core.chunk_first(seq__14667__$1);
var G__14675 = cljs.core.chunk_rest(seq__14667__$1);
var G__14676 = c__4863__auto__;
var G__14677 = cljs.core.count(c__4863__auto__);
var G__14678 = (0);
seq__14667 = G__14675;
chunk__14668 = G__14676;
count__14669 = G__14677;
i__14670 = G__14678;
continue;
} else {
var s = cljs.core.first(seq__14667__$1);
cljs.core._write(writer,s);

var G__14679 = cljs.core.next(seq__14667__$1);
var G__14680 = null;
var G__14681 = (0);
var G__14682 = (0);
seq__14667 = G__14679;
chunk__14668 = G__14680;
count__14669 = G__14681;
i__14670 = G__14682;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__14683__i = 0, G__14683__a = new Array(arguments.length -  1);
while (G__14683__i < G__14683__a.length) {G__14683__a[G__14683__i] = arguments[G__14683__i + 1]; ++G__14683__i;}
  ss = new cljs.core.IndexedSeq(G__14683__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__14684){
var writer = cljs.core.first(arglist__14684);
var ss = cljs.core.rest(arglist__14684);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj14686 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj14686;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__14689 = "[\\\\\"\b\f\n\r\t]";
var G__14690 = "g";
return RegExp(G__14689,G__14690);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__4064__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__4064__auto__)){
var and__4064__auto____$1 = (function (){var G__14704 = obj;
if(G__14704){
var bit__4757__auto__ = (G__14704.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4757__auto__) || (G__14704.cljs$core$IMeta$)){
return true;
} else {
if((!G__14704.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14704);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14704);
}
})();
if(and__4064__auto____$1){
return cljs.core.meta(obj);
} else {
return and__4064__auto____$1;
}
} else {
return and__4064__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__14705_14715 = cljs.core.meta(obj);
var G__14706_14716 = writer;
var G__14707_14717 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__14705_14715,G__14706_14716,G__14707_14717) : cljs.core.pr_writer.call(null,G__14705_14715,G__14706_14716,G__14707_14717));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__14708 = obj;
if(G__14708){
var bit__4750__auto__ = (G__14708.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4750__auto__) || (G__14708.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__14709 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__14710 = cljs.core.pr_writer;
var G__14711 = writer;
var G__14712 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__14709,G__14710,G__14711,G__14712) : cljs.core.print_map.call(null,G__14709,G__14710,G__14711,G__14712));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__14713 = obj;
return goog.isString(G__14713);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__14718 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__14718;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__14714 = obj;
if(G__14714){
var bit__4757__auto__ = (G__14714.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4757__auto__) || (G__14714.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__14714.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__14714);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__14714);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4423__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4423__auto__)){
var alt_impl = temp__4423__auto__;
var G__14722 = obj;
var G__14723 = writer;
var G__14724 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__14722,G__14723,G__14724) : alt_impl.call(null,G__14722,G__14723,G__14724));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__14729 = cljs.core.seq(cljs.core.next(objs));
var chunk__14730 = null;
var count__14731 = (0);
var i__14732 = (0);
while(true){
if((i__14732 < count__14731)){
var obj = chunk__14730.cljs$core$IIndexed$_nth$arity$2(null,i__14732);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__14733 = seq__14729;
var G__14734 = chunk__14730;
var G__14735 = count__14731;
var G__14736 = (i__14732 + (1));
seq__14729 = G__14733;
chunk__14730 = G__14734;
count__14731 = G__14735;
i__14732 = G__14736;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__14729);
if(temp__4425__auto__){
var seq__14729__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14729__$1)){
var c__4863__auto__ = cljs.core.chunk_first(seq__14729__$1);
var G__14737 = cljs.core.chunk_rest(seq__14729__$1);
var G__14738 = c__4863__auto__;
var G__14739 = cljs.core.count(c__4863__auto__);
var G__14740 = (0);
seq__14729 = G__14737;
chunk__14730 = G__14738;
count__14731 = G__14739;
i__14732 = G__14740;
continue;
} else {
var obj = cljs.core.first(seq__14729__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__14741 = cljs.core.next(seq__14729__$1);
var G__14742 = null;
var G__14743 = (0);
var G__14744 = (0);
seq__14729 = G__14741;
chunk__14730 = G__14742;
count__14731 = G__14743;
i__14732 = G__14744;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14745__i = 0, G__14745__a = new Array(arguments.length -  0);
while (G__14745__i < G__14745__a.length) {G__14745__a[G__14745__i] = arguments[G__14745__i + 0]; ++G__14745__i;}
  objs = new cljs.core.IndexedSeq(G__14745__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__14746){
var objs = cljs.core.seq(arglist__14746);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14747__i = 0, G__14747__a = new Array(arguments.length -  0);
while (G__14747__i < G__14747__a.length) {G__14747__a[G__14747__i] = arguments[G__14747__i + 0]; ++G__14747__i;}
  objs = new cljs.core.IndexedSeq(G__14747__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__14748){
var objs = cljs.core.seq(arglist__14748);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14749__i = 0, G__14749__a = new Array(arguments.length -  0);
while (G__14749__i < G__14749__a.length) {G__14749__a[G__14749__i] = arguments[G__14749__i + 0]; ++G__14749__i;}
  objs = new cljs.core.IndexedSeq(G__14749__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__14750){
var objs = cljs.core.seq(arglist__14750);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14751__i = 0, G__14751__a = new Array(arguments.length -  0);
while (G__14751__i < G__14751__a.length) {G__14751__a[G__14751__i] = arguments[G__14751__i + 0]; ++G__14751__i;}
  objs = new cljs.core.IndexedSeq(G__14751__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__14752){
var objs = cljs.core.seq(arglist__14752);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14753__i = 0, G__14753__a = new Array(arguments.length -  0);
while (G__14753__i < G__14753__a.length) {G__14753__a[G__14753__i] = arguments[G__14753__i + 0]; ++G__14753__i;}
  objs = new cljs.core.IndexedSeq(G__14753__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__14754){
var objs = cljs.core.seq(arglist__14754);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14755__i = 0, G__14755__a = new Array(arguments.length -  0);
while (G__14755__i < G__14755__a.length) {G__14755__a[G__14755__i] = arguments[G__14755__i + 0]; ++G__14755__i;}
  objs = new cljs.core.IndexedSeq(G__14755__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__14756){
var objs = cljs.core.seq(arglist__14756);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14757__i = 0, G__14757__a = new Array(arguments.length -  0);
while (G__14757__i < G__14757__a.length) {G__14757__a[G__14757__i] = arguments[G__14757__i + 0]; ++G__14757__i;}
  objs = new cljs.core.IndexedSeq(G__14757__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__14758){
var objs = cljs.core.seq(arglist__14758);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14759__i = 0, G__14759__a = new Array(arguments.length -  0);
while (G__14759__i < G__14759__a.length) {G__14759__a[G__14759__i] = arguments[G__14759__i + 0]; ++G__14759__i;}
  objs = new cljs.core.IndexedSeq(G__14759__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__14760){
var objs = cljs.core.seq(arglist__14760);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__14767_14773 = cljs.core.key(e);
var G__14768_14774 = w;
var G__14769_14775 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14767_14773,G__14768_14774,G__14769_14775) : print_one.call(null,G__14767_14773,G__14768_14774,G__14769_14775));

cljs.core._write(w," ");

var G__14770 = cljs.core.val(e);
var G__14771 = w;
var G__14772 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14770,G__14771,G__14772) : print_one.call(null,G__14770,G__14771,G__14772));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__14776__i = 0, G__14776__a = new Array(arguments.length -  2);
while (G__14776__i < G__14776__a.length) {G__14776__a[G__14776__i] = arguments[G__14776__i + 2]; ++G__14776__i;}
  args = new cljs.core.IndexedSeq(G__14776__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__14777){
var iref = cljs.core.first(arglist__14777);
arglist__14777 = cljs.core.next(arglist__14777);
var f = cljs.core.first(arglist__14777);
var args = cljs.core.rest(arglist__14777);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__14780 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14780) : cljs.core.atom.call(null,G__14780));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 1;
})
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__14782 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14782) : cljs.core.deref.call(null,G__14782));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__14783_SHARP_,p2__14784_SHARP_){
var ret = (function (){var G__14787 = p1__14783_SHARP_;
var G__14788 = p2__14784_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14787,G__14788) : rf.call(null,G__14787,G__14788));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__14791 = null;
var G__14791__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14791__1 = (function (result){
var G__14790 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14790) : rf.call(null,G__14790));
});
var G__14791__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__14791 = function(result,input){
switch(arguments.length){
case 0:
return G__14791__0.call(this);
case 1:
return G__14791__1.call(this,result);
case 2:
return G__14791__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14791.cljs$core$IFn$_invoke$arity$0 = G__14791__0;
G__14791.cljs$core$IFn$_invoke$arity$1 = G__14791__1;
G__14791.cljs$core$IFn$_invoke$arity$2 = G__14791__2;
return G__14791;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__14800 = null;
var G__14800__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14800__1 = (function (result){
var G__14796 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14796) : rf.call(null,G__14796));
});
var G__14800__2 = (function (result,input){
var prior = (function (){var G__14797 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14797) : cljs.core.deref.call(null,G__14797));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__14798 = result;
var G__14799 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14798,G__14799) : rf.call(null,G__14798,G__14799));
}
});
G__14800 = function(result,input){
switch(arguments.length){
case 0:
return G__14800__0.call(this);
case 1:
return G__14800__1.call(this,result);
case 2:
return G__14800__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14800.cljs$core$IFn$_invoke$arity$0 = G__14800__0;
G__14800.cljs$core$IFn$_invoke$arity$1 = G__14800__1;
G__14800.cljs$core$IFn$_invoke$arity$2 = G__14800__2;
return G__14800;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5054__auto__ = this;
return cljs.core.es6_iterator(this__5054__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__14802_SHARP_,p2__14801_SHARP_){
var G__14804 = p2__14801_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__14804) : proc.call(null,G__14804));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj14806 = {};
return obj14806;
})();

cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__4064__auto__ = x;
if(and__4064__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__4064__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4720__auto__ = (((x == null))?null:x);
return (function (){var or__4076__auto__ = (cljs.core._clj__GT_js[(function (){var G__14810 = x__4720__auto__;
return goog.typeOf(G__14810);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__4064__auto__ = x;
if(and__4064__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__4064__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4720__auto__ = (((x == null))?null:x);
return (function (){var or__4076__auto__ = (cljs.core._key__GT_js[(function (){var G__14814 = x__4720__auto__;
return goog.typeOf(G__14814);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__14817 = k;
if(G__14817){
var bit__4757__auto__ = null;
if(cljs.core.truth_((function (){var or__4076__auto__ = bit__4757__auto__;
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return G__14817.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__14817.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14817);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14817);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__14818 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__14818) : cljs.core.clj__GT_js.call(null,G__14818));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__14834 = x;
if(G__14834){
var bit__4757__auto__ = null;
if(cljs.core.truth_((function (){var or__4076__auto__ = bit__4757__auto__;
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return G__14834.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__14834.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14834);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14834);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj14836 = {};
return obj14836;
})();
var seq__14837_14847 = cljs.core.seq(x);
var chunk__14838_14848 = null;
var count__14839_14849 = (0);
var i__14840_14850 = (0);
while(true){
if((i__14840_14850 < count__14839_14849)){
var vec__14841_14851 = chunk__14838_14848.cljs$core$IIndexed$_nth$arity$2(null,i__14840_14850);
var k_14852 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14841_14851,(0),null);
var v_14853 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14841_14851,(1),null);
(m[cljs.core.key__GT_js(k_14852)] = cljs$core$clj__GT_js(v_14853));

var G__14854 = seq__14837_14847;
var G__14855 = chunk__14838_14848;
var G__14856 = count__14839_14849;
var G__14857 = (i__14840_14850 + (1));
seq__14837_14847 = G__14854;
chunk__14838_14848 = G__14855;
count__14839_14849 = G__14856;
i__14840_14850 = G__14857;
continue;
} else {
var temp__4425__auto___14858 = cljs.core.seq(seq__14837_14847);
if(temp__4425__auto___14858){
var seq__14837_14859__$1 = temp__4425__auto___14858;
if(cljs.core.chunked_seq_QMARK_(seq__14837_14859__$1)){
var c__4863__auto___14860 = cljs.core.chunk_first(seq__14837_14859__$1);
var G__14861 = cljs.core.chunk_rest(seq__14837_14859__$1);
var G__14862 = c__4863__auto___14860;
var G__14863 = cljs.core.count(c__4863__auto___14860);
var G__14864 = (0);
seq__14837_14847 = G__14861;
chunk__14838_14848 = G__14862;
count__14839_14849 = G__14863;
i__14840_14850 = G__14864;
continue;
} else {
var vec__14842_14865 = cljs.core.first(seq__14837_14859__$1);
var k_14866 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14842_14865,(0),null);
var v_14867 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14842_14865,(1),null);
(m[cljs.core.key__GT_js(k_14866)] = cljs$core$clj__GT_js(v_14867));

var G__14868 = cljs.core.next(seq__14837_14859__$1);
var G__14869 = null;
var G__14870 = (0);
var G__14871 = (0);
seq__14837_14847 = G__14868;
chunk__14838_14848 = G__14869;
count__14839_14849 = G__14870;
i__14840_14850 = G__14871;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__14843_14872 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__14844_14873 = null;
var count__14845_14874 = (0);
var i__14846_14875 = (0);
while(true){
if((i__14846_14875 < count__14845_14874)){
var x_14876__$1 = chunk__14844_14873.cljs$core$IIndexed$_nth$arity$2(null,i__14846_14875);
arr.push(x_14876__$1);

var G__14877 = seq__14843_14872;
var G__14878 = chunk__14844_14873;
var G__14879 = count__14845_14874;
var G__14880 = (i__14846_14875 + (1));
seq__14843_14872 = G__14877;
chunk__14844_14873 = G__14878;
count__14845_14874 = G__14879;
i__14846_14875 = G__14880;
continue;
} else {
var temp__4425__auto___14881 = cljs.core.seq(seq__14843_14872);
if(temp__4425__auto___14881){
var seq__14843_14882__$1 = temp__4425__auto___14881;
if(cljs.core.chunked_seq_QMARK_(seq__14843_14882__$1)){
var c__4863__auto___14883 = cljs.core.chunk_first(seq__14843_14882__$1);
var G__14884 = cljs.core.chunk_rest(seq__14843_14882__$1);
var G__14885 = c__4863__auto___14883;
var G__14886 = cljs.core.count(c__4863__auto___14883);
var G__14887 = (0);
seq__14843_14872 = G__14884;
chunk__14844_14873 = G__14885;
count__14845_14874 = G__14886;
i__14846_14875 = G__14887;
continue;
} else {
var x_14888__$1 = cljs.core.first(seq__14843_14882__$1);
arr.push(x_14888__$1);

var G__14889 = cljs.core.next(seq__14843_14882__$1);
var G__14890 = null;
var G__14891 = (0);
var G__14892 = (0);
seq__14843_14872 = G__14889;
chunk__14844_14873 = G__14890;
count__14845_14874 = G__14891;
i__14846_14875 = G__14892;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj14894 = {};
return obj14894;
})();

cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__4064__auto__ = x;
if(and__4064__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__4064__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4720__auto__ = (((x == null))?null:x);
return (function (){var or__4076__auto__ = (cljs.core._js__GT_clj[(function (){var G__14898 = x__4720__auto__;
return goog.typeOf(G__14898);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__14955__delegate = function (x,opts){
var map__14928 = opts;
var map__14928__$1 = ((cljs.core.seq_QMARK_(map__14928))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__14928):map__14928);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14928__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__14928,map__14928__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__14944 = x__$1;
if(G__14944){
var bit__4757__auto__ = null;
if(cljs.core.truth_((function (){var or__4076__auto__ = bit__4757__auto__;
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return G__14944.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__14944.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__14944);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__14944);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4832__auto__ = ((function (map__14928,map__14928__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__14945(s__14946){
return (new cljs.core.LazySeq(null,((function (map__14928,map__14928__$1,keywordize_keys,keyfn){
return (function (){
var s__14946__$1 = s__14946;
while(true){
var temp__4425__auto__ = cljs.core.seq(s__14946__$1);
if(temp__4425__auto__){
var s__14946__$2 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s__14946__$2)){
var c__4830__auto__ = cljs.core.chunk_first(s__14946__$2);
var size__4831__auto__ = cljs.core.count(c__4830__auto__);
var b__14948 = cljs.core.chunk_buffer(size__4831__auto__);
if((function (){var i__14947 = (0);
while(true){
if((i__14947 < size__4831__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4830__auto__,i__14947);
cljs.core.chunk_append(b__14948,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__14953 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14953) : keyfn.call(null,G__14953));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__14956 = (i__14947 + (1));
i__14947 = G__14956;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__14948),cljs$core$js__GT_clj_$_thisfn_$_iter__14945(cljs.core.chunk_rest(s__14946__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__14948),null);
}
} else {
var k = cljs.core.first(s__14946__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__14954 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14954) : keyfn.call(null,G__14954));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__14945(cljs.core.rest(s__14946__$2)));
}
} else {
return null;
}
break;
}
});})(map__14928,map__14928__$1,keywordize_keys,keyfn))
,null,null));
});})(map__14928,map__14928__$1,keywordize_keys,keyfn))
;
return iter__4832__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__14928,map__14928__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__14955 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__14957__i = 0, G__14957__a = new Array(arguments.length -  1);
while (G__14957__i < G__14957__a.length) {G__14957__a[G__14957__i] = arguments[G__14957__i + 1]; ++G__14957__i;}
  opts = new cljs.core.IndexedSeq(G__14957__a,0);
} 
return G__14955__delegate.call(this,x,opts);};
G__14955.cljs$lang$maxFixedArity = 1;
G__14955.cljs$lang$applyTo = (function (arglist__14958){
var x = cljs.core.first(arglist__14958);
var opts = cljs.core.rest(arglist__14958);
return G__14955__delegate(x,opts);
});
G__14955.cljs$core$IFn$_invoke$arity$variadic = G__14955__delegate;
return G__14955;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__14959 = null;
if (arguments.length > 1) {
var G__14960__i = 0, G__14960__a = new Array(arguments.length -  1);
while (G__14960__i < G__14960__a.length) {G__14960__a[G__14960__i] = arguments[G__14960__i + 1]; ++G__14960__i;}
G__14959 = new cljs.core.IndexedSeq(G__14960__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14959);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__14963 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14963) : cljs.core.atom.call(null,G__14963));
})();
return ((function (mem){
return (function() { 
var G__14965__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__14964 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14964) : cljs.core.deref.call(null,G__14964));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__14965 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14966__i = 0, G__14966__a = new Array(arguments.length -  0);
while (G__14966__i < G__14966__a.length) {G__14966__a[G__14966__i] = arguments[G__14966__i + 0]; ++G__14966__i;}
  args = new cljs.core.IndexedSeq(G__14966__a,0);
} 
return G__14965__delegate.call(this,args);};
G__14965.cljs$lang$maxFixedArity = 0;
G__14965.cljs$lang$applyTo = (function (arglist__14967){
var args = cljs.core.seq(arglist__14967);
return G__14965__delegate(args);
});
G__14965.cljs$core$IFn$_invoke$arity$variadic = G__14965__delegate;
return G__14965;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__14969 = ret;
f = G__14969;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__14970__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__14970 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__14971__i = 0, G__14971__a = new Array(arguments.length -  1);
while (G__14971__i < G__14971__a.length) {G__14971__a[G__14971__i] = arguments[G__14971__i + 1]; ++G__14971__i;}
  args = new cljs.core.IndexedSeq(G__14971__a,0);
} 
return G__14970__delegate.call(this,f,args);};
G__14970.cljs$lang$maxFixedArity = 1;
G__14970.cljs$lang$applyTo = (function (arglist__14972){
var f = cljs.core.first(arglist__14972);
var args = cljs.core.rest(arglist__14972);
return G__14970__delegate(f,args);
});
G__14970.cljs$core$IFn$_invoke$arity$variadic = G__14970__delegate;
return G__14970;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__14973 = null;
if (arguments.length > 1) {
var G__14974__i = 0, G__14974__a = new Array(arguments.length -  1);
while (G__14974__i < G__14974__a.length) {G__14974__a[G__14974__i] = arguments[G__14974__i + 1]; ++G__14974__i;}
G__14973 = new cljs.core.IndexedSeq(G__14974__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__14977 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__14977) : Math.floor.call(null,G__14977));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__14979 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14979) : f.call(null,G__14979));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__14981 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14981) : cljs.core.atom.call(null,G__14981));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__14982__i = 0, G__14982__a = new Array(arguments.length -  1);
while (G__14982__i < G__14982__a.length) {G__14982__a[G__14982__i] = arguments[G__14982__i + 1]; ++G__14982__i;}
  args = new cljs.core.IndexedSeq(G__14982__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__14983){
var f = cljs.core.first(arglist__14983);
var args = cljs.core.rest(arglist__14983);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__15048 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15048) : cljs.core.deref.call(null,G__15048));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__4076__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
var and__4064__auto__ = cljs.core.vector_QMARK_(parent);
if(and__4064__auto__){
var and__4064__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__4064__auto____$1){
var and__4064__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__4064__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__15073 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__15071 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__15071) : child.call(null,G__15071));
})(),(function (){var G__15072 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__15072) : parent.call(null,G__15072));
})());
var G__15074 = (i + (1));
ret = G__15073;
i = G__15074;
continue;
}
break;
}
} else {
return and__4064__auto____$2;
}
} else {
return and__4064__auto____$1;
}
} else {
return and__4064__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__15078 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15078) : cljs.core.deref.call(null,G__15078));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__15082 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15082) : cljs.core.deref.call(null,G__15082));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__15086 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15086) : cljs.core.deref.call(null,G__15086));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__15095 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__15095) : targets.call(null,G__15095));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__15096 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__15096) : sources.call(null,G__15096));
})()));
});})(tp,td,ta))
;
var or__4076__auto__ = ((cljs.core.contains_QMARK_((function (){var G__15100 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__15100) : tp.call(null,G__15100));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__15101 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15101) : ta.call(null,G__15101));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__15102 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15102) : ta.call(null,G__15102));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__15109 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15109) : parentMap.call(null,G__15109));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__15110 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15110) : parentMap.call(null,G__15110));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__15103_SHARP_){
return cljs.core.cons(cljs.core.first(p1__15103_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__15103_SHARP_),cljs.core.second(p1__15103_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__15111 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15111) : parentMap.call(null,G__15111));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__15104_SHARP_,p2__15105_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__15104_SHARP_,p2__15105_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__15114 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15114) : cljs.core.deref.call(null,G__15114));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__15115 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15115) : cljs.core.deref.call(null,G__15115));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__15131 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15131) : cljs.core.deref.call(null,G__15131));
})().call(null,x);
var or__4076__auto__ = (cljs.core.truth_((function (){var and__4064__auto__ = xprefs;
if(cljs.core.truth_(and__4064__auto__)){
var G__15133 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__15133) : xprefs.call(null,G__15133));
} else {
return and__4064__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__15134 = cljs.core.rest(ps);
ps = G__15134;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4076__auto____$1)){
return or__4076__auto____$1;
} else {
var or__4076__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__15135 = cljs.core.rest(ps);
ps = G__15135;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4076__auto____$2)){
return or__4076__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__4076__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__4076__auto__)){
return or__4076__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__15149){
var vec__15150 = p__15149;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15150,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15150,(1),null);
var e = vec__15150;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__15151 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15151) : cljs.core.deref.call(null,G__15151));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__4076__auto__ = (be == null);
if(or__4076__auto__){
return or__4076__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__15152 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15152) : cljs.core.deref.call(null,G__15152));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__15153 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15153) : cljs.core.deref.call(null,G__15153));
})(),(function (){var G__15154 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15154) : cljs.core.deref.call(null,G__15154));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj15156 = {};
return obj15156;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__4064__auto__ = mf;
if(and__4064__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__4064__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4720__auto__ = (((mf == null))?null:mf);
return (function (){var or__4076__auto__ = (cljs.core._reset[(function (){var G__15160 = x__4720__auto__;
return goog.typeOf(G__15160);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._reset["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__4064__auto__ = mf;
if(and__4064__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__4064__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4720__auto__ = (((mf == null))?null:mf);
return (function (){var or__4076__auto__ = (cljs.core._add_method[(function (){var G__15164 = x__4720__auto__;
return goog.typeOf(G__15164);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._add_method["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__4064__auto__ = mf;
if(and__4064__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__4064__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4720__auto__ = (((mf == null))?null:mf);
return (function (){var or__4076__auto__ = (cljs.core._remove_method[(function (){var G__15168 = x__4720__auto__;
return goog.typeOf(G__15168);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._remove_method["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__4064__auto__ = mf;
if(and__4064__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__4064__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4720__auto__ = (((mf == null))?null:mf);
return (function (){var or__4076__auto__ = (cljs.core._prefer_method[(function (){var G__15172 = x__4720__auto__;
return goog.typeOf(G__15172);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__4064__auto__ = mf;
if(and__4064__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__4064__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4720__auto__ = (((mf == null))?null:mf);
return (function (){var or__4076__auto__ = (cljs.core._get_method[(function (){var G__15176 = x__4720__auto__;
return goog.typeOf(G__15176);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._get_method["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__4064__auto__ = mf;
if(and__4064__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__4064__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4720__auto__ = (((mf == null))?null:mf);
return (function (){var or__4076__auto__ = (cljs.core._methods[(function (){var G__15180 = x__4720__auto__;
return goog.typeOf(G__15180);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._methods["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__4064__auto__ = mf;
if(and__4064__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__4064__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4720__auto__ = (((mf == null))?null:mf);
return (function (){var or__4076__auto__ = (cljs.core._prefers[(function (){var G__15184 = x__4720__auto__;
return goog.typeOf(G__15184);
})()]);
if(or__4076__auto__){
return or__4076__auto__;
} else {
var or__4076__auto____$1 = (cljs.core._prefers["_"]);
if(or__4076__auto____$1){
return or__4076__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.call = (function() {
var G__16033 = null;
var G__16033__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__16033__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15186 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15186) : self__.dispatch_fn.call(null,G__15186));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15187 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15187) : target_fn.call(null,G__15187));
});
var G__16033__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15188 = a;
var G__15189 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15188,G__15189) : self__.dispatch_fn.call(null,G__15188,G__15189));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15190 = a;
var G__15191 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15190,G__15191) : target_fn.call(null,G__15190,G__15191));
});
var G__16033__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15192 = a;
var G__15193 = b;
var G__15194 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15192,G__15193,G__15194) : self__.dispatch_fn.call(null,G__15192,G__15193,G__15194));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15195 = a;
var G__15196 = b;
var G__15197 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15195,G__15196,G__15197) : target_fn.call(null,G__15195,G__15196,G__15197));
});
var G__16033__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15198 = a;
var G__15199 = b;
var G__15200 = c;
var G__15201 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15198,G__15199,G__15200,G__15201) : self__.dispatch_fn.call(null,G__15198,G__15199,G__15200,G__15201));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15202 = a;
var G__15203 = b;
var G__15204 = c;
var G__15205 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15202,G__15203,G__15204,G__15205) : target_fn.call(null,G__15202,G__15203,G__15204,G__15205));
});
var G__16033__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15206 = a;
var G__15207 = b;
var G__15208 = c;
var G__15209 = d;
var G__15210 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15206,G__15207,G__15208,G__15209,G__15210) : self__.dispatch_fn.call(null,G__15206,G__15207,G__15208,G__15209,G__15210));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15211 = a;
var G__15212 = b;
var G__15213 = c;
var G__15214 = d;
var G__15215 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15211,G__15212,G__15213,G__15214,G__15215) : target_fn.call(null,G__15211,G__15212,G__15213,G__15214,G__15215));
});
var G__16033__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15216 = a;
var G__15217 = b;
var G__15218 = c;
var G__15219 = d;
var G__15220 = e;
var G__15221 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15216,G__15217,G__15218,G__15219,G__15220,G__15221) : self__.dispatch_fn.call(null,G__15216,G__15217,G__15218,G__15219,G__15220,G__15221));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15222 = a;
var G__15223 = b;
var G__15224 = c;
var G__15225 = d;
var G__15226 = e;
var G__15227 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15222,G__15223,G__15224,G__15225,G__15226,G__15227) : target_fn.call(null,G__15222,G__15223,G__15224,G__15225,G__15226,G__15227));
});
var G__16033__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15228 = a;
var G__15229 = b;
var G__15230 = c;
var G__15231 = d;
var G__15232 = e;
var G__15233 = f;
var G__15234 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15228,G__15229,G__15230,G__15231,G__15232,G__15233,G__15234) : self__.dispatch_fn.call(null,G__15228,G__15229,G__15230,G__15231,G__15232,G__15233,G__15234));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15235 = a;
var G__15236 = b;
var G__15237 = c;
var G__15238 = d;
var G__15239 = e;
var G__15240 = f;
var G__15241 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15235,G__15236,G__15237,G__15238,G__15239,G__15240,G__15241) : target_fn.call(null,G__15235,G__15236,G__15237,G__15238,G__15239,G__15240,G__15241));
});
var G__16033__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15242 = a;
var G__15243 = b;
var G__15244 = c;
var G__15245 = d;
var G__15246 = e;
var G__15247 = f;
var G__15248 = g;
var G__15249 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15242,G__15243,G__15244,G__15245,G__15246,G__15247,G__15248,G__15249) : self__.dispatch_fn.call(null,G__15242,G__15243,G__15244,G__15245,G__15246,G__15247,G__15248,G__15249));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15250 = a;
var G__15251 = b;
var G__15252 = c;
var G__15253 = d;
var G__15254 = e;
var G__15255 = f;
var G__15256 = g;
var G__15257 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15250,G__15251,G__15252,G__15253,G__15254,G__15255,G__15256,G__15257) : target_fn.call(null,G__15250,G__15251,G__15252,G__15253,G__15254,G__15255,G__15256,G__15257));
});
var G__16033__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15258 = a;
var G__15259 = b;
var G__15260 = c;
var G__15261 = d;
var G__15262 = e;
var G__15263 = f;
var G__15264 = g;
var G__15265 = h;
var G__15266 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15258,G__15259,G__15260,G__15261,G__15262,G__15263,G__15264,G__15265,G__15266) : self__.dispatch_fn.call(null,G__15258,G__15259,G__15260,G__15261,G__15262,G__15263,G__15264,G__15265,G__15266));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15267 = a;
var G__15268 = b;
var G__15269 = c;
var G__15270 = d;
var G__15271 = e;
var G__15272 = f;
var G__15273 = g;
var G__15274 = h;
var G__15275 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15267,G__15268,G__15269,G__15270,G__15271,G__15272,G__15273,G__15274,G__15275) : target_fn.call(null,G__15267,G__15268,G__15269,G__15270,G__15271,G__15272,G__15273,G__15274,G__15275));
});
var G__16033__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15276 = a;
var G__15277 = b;
var G__15278 = c;
var G__15279 = d;
var G__15280 = e;
var G__15281 = f;
var G__15282 = g;
var G__15283 = h;
var G__15284 = i;
var G__15285 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15276,G__15277,G__15278,G__15279,G__15280,G__15281,G__15282,G__15283,G__15284,G__15285) : self__.dispatch_fn.call(null,G__15276,G__15277,G__15278,G__15279,G__15280,G__15281,G__15282,G__15283,G__15284,G__15285));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15286 = a;
var G__15287 = b;
var G__15288 = c;
var G__15289 = d;
var G__15290 = e;
var G__15291 = f;
var G__15292 = g;
var G__15293 = h;
var G__15294 = i;
var G__15295 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15286,G__15287,G__15288,G__15289,G__15290,G__15291,G__15292,G__15293,G__15294,G__15295) : target_fn.call(null,G__15286,G__15287,G__15288,G__15289,G__15290,G__15291,G__15292,G__15293,G__15294,G__15295));
});
var G__16033__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15296 = a;
var G__15297 = b;
var G__15298 = c;
var G__15299 = d;
var G__15300 = e;
var G__15301 = f;
var G__15302 = g;
var G__15303 = h;
var G__15304 = i;
var G__15305 = j;
var G__15306 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15296,G__15297,G__15298,G__15299,G__15300,G__15301,G__15302,G__15303,G__15304,G__15305,G__15306) : self__.dispatch_fn.call(null,G__15296,G__15297,G__15298,G__15299,G__15300,G__15301,G__15302,G__15303,G__15304,G__15305,G__15306));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15307 = a;
var G__15308 = b;
var G__15309 = c;
var G__15310 = d;
var G__15311 = e;
var G__15312 = f;
var G__15313 = g;
var G__15314 = h;
var G__15315 = i;
var G__15316 = j;
var G__15317 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15307,G__15308,G__15309,G__15310,G__15311,G__15312,G__15313,G__15314,G__15315,G__15316,G__15317) : target_fn.call(null,G__15307,G__15308,G__15309,G__15310,G__15311,G__15312,G__15313,G__15314,G__15315,G__15316,G__15317));
});
var G__16033__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15318 = a;
var G__15319 = b;
var G__15320 = c;
var G__15321 = d;
var G__15322 = e;
var G__15323 = f;
var G__15324 = g;
var G__15325 = h;
var G__15326 = i;
var G__15327 = j;
var G__15328 = k;
var G__15329 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15318,G__15319,G__15320,G__15321,G__15322,G__15323,G__15324,G__15325,G__15326,G__15327,G__15328,G__15329) : self__.dispatch_fn.call(null,G__15318,G__15319,G__15320,G__15321,G__15322,G__15323,G__15324,G__15325,G__15326,G__15327,G__15328,G__15329));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15330 = a;
var G__15331 = b;
var G__15332 = c;
var G__15333 = d;
var G__15334 = e;
var G__15335 = f;
var G__15336 = g;
var G__15337 = h;
var G__15338 = i;
var G__15339 = j;
var G__15340 = k;
var G__15341 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15330,G__15331,G__15332,G__15333,G__15334,G__15335,G__15336,G__15337,G__15338,G__15339,G__15340,G__15341) : target_fn.call(null,G__15330,G__15331,G__15332,G__15333,G__15334,G__15335,G__15336,G__15337,G__15338,G__15339,G__15340,G__15341));
});
var G__16033__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15342 = a;
var G__15343 = b;
var G__15344 = c;
var G__15345 = d;
var G__15346 = e;
var G__15347 = f;
var G__15348 = g;
var G__15349 = h;
var G__15350 = i;
var G__15351 = j;
var G__15352 = k;
var G__15353 = l;
var G__15354 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15342,G__15343,G__15344,G__15345,G__15346,G__15347,G__15348,G__15349,G__15350,G__15351,G__15352,G__15353,G__15354) : self__.dispatch_fn.call(null,G__15342,G__15343,G__15344,G__15345,G__15346,G__15347,G__15348,G__15349,G__15350,G__15351,G__15352,G__15353,G__15354));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15355 = a;
var G__15356 = b;
var G__15357 = c;
var G__15358 = d;
var G__15359 = e;
var G__15360 = f;
var G__15361 = g;
var G__15362 = h;
var G__15363 = i;
var G__15364 = j;
var G__15365 = k;
var G__15366 = l;
var G__15367 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15355,G__15356,G__15357,G__15358,G__15359,G__15360,G__15361,G__15362,G__15363,G__15364,G__15365,G__15366,G__15367) : target_fn.call(null,G__15355,G__15356,G__15357,G__15358,G__15359,G__15360,G__15361,G__15362,G__15363,G__15364,G__15365,G__15366,G__15367));
});
var G__16033__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15368 = a;
var G__15369 = b;
var G__15370 = c;
var G__15371 = d;
var G__15372 = e;
var G__15373 = f;
var G__15374 = g;
var G__15375 = h;
var G__15376 = i;
var G__15377 = j;
var G__15378 = k;
var G__15379 = l;
var G__15380 = m;
var G__15381 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15368,G__15369,G__15370,G__15371,G__15372,G__15373,G__15374,G__15375,G__15376,G__15377,G__15378,G__15379,G__15380,G__15381) : self__.dispatch_fn.call(null,G__15368,G__15369,G__15370,G__15371,G__15372,G__15373,G__15374,G__15375,G__15376,G__15377,G__15378,G__15379,G__15380,G__15381));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15382 = a;
var G__15383 = b;
var G__15384 = c;
var G__15385 = d;
var G__15386 = e;
var G__15387 = f;
var G__15388 = g;
var G__15389 = h;
var G__15390 = i;
var G__15391 = j;
var G__15392 = k;
var G__15393 = l;
var G__15394 = m;
var G__15395 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15382,G__15383,G__15384,G__15385,G__15386,G__15387,G__15388,G__15389,G__15390,G__15391,G__15392,G__15393,G__15394,G__15395) : target_fn.call(null,G__15382,G__15383,G__15384,G__15385,G__15386,G__15387,G__15388,G__15389,G__15390,G__15391,G__15392,G__15393,G__15394,G__15395));
});
var G__16033__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15396 = a;
var G__15397 = b;
var G__15398 = c;
var G__15399 = d;
var G__15400 = e;
var G__15401 = f;
var G__15402 = g;
var G__15403 = h;
var G__15404 = i;
var G__15405 = j;
var G__15406 = k;
var G__15407 = l;
var G__15408 = m;
var G__15409 = n;
var G__15410 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15396,G__15397,G__15398,G__15399,G__15400,G__15401,G__15402,G__15403,G__15404,G__15405,G__15406,G__15407,G__15408,G__15409,G__15410) : self__.dispatch_fn.call(null,G__15396,G__15397,G__15398,G__15399,G__15400,G__15401,G__15402,G__15403,G__15404,G__15405,G__15406,G__15407,G__15408,G__15409,G__15410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15411 = a;
var G__15412 = b;
var G__15413 = c;
var G__15414 = d;
var G__15415 = e;
var G__15416 = f;
var G__15417 = g;
var G__15418 = h;
var G__15419 = i;
var G__15420 = j;
var G__15421 = k;
var G__15422 = l;
var G__15423 = m;
var G__15424 = n;
var G__15425 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15411,G__15412,G__15413,G__15414,G__15415,G__15416,G__15417,G__15418,G__15419,G__15420,G__15421,G__15422,G__15423,G__15424,G__15425) : target_fn.call(null,G__15411,G__15412,G__15413,G__15414,G__15415,G__15416,G__15417,G__15418,G__15419,G__15420,G__15421,G__15422,G__15423,G__15424,G__15425));
});
var G__16033__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15426 = a;
var G__15427 = b;
var G__15428 = c;
var G__15429 = d;
var G__15430 = e;
var G__15431 = f;
var G__15432 = g;
var G__15433 = h;
var G__15434 = i;
var G__15435 = j;
var G__15436 = k;
var G__15437 = l;
var G__15438 = m;
var G__15439 = n;
var G__15440 = o;
var G__15441 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15426,G__15427,G__15428,G__15429,G__15430,G__15431,G__15432,G__15433,G__15434,G__15435,G__15436,G__15437,G__15438,G__15439,G__15440,G__15441) : self__.dispatch_fn.call(null,G__15426,G__15427,G__15428,G__15429,G__15430,G__15431,G__15432,G__15433,G__15434,G__15435,G__15436,G__15437,G__15438,G__15439,G__15440,G__15441));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15442 = a;
var G__15443 = b;
var G__15444 = c;
var G__15445 = d;
var G__15446 = e;
var G__15447 = f;
var G__15448 = g;
var G__15449 = h;
var G__15450 = i;
var G__15451 = j;
var G__15452 = k;
var G__15453 = l;
var G__15454 = m;
var G__15455 = n;
var G__15456 = o;
var G__15457 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15442,G__15443,G__15444,G__15445,G__15446,G__15447,G__15448,G__15449,G__15450,G__15451,G__15452,G__15453,G__15454,G__15455,G__15456,G__15457) : target_fn.call(null,G__15442,G__15443,G__15444,G__15445,G__15446,G__15447,G__15448,G__15449,G__15450,G__15451,G__15452,G__15453,G__15454,G__15455,G__15456,G__15457));
});
var G__16033__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15458 = a;
var G__15459 = b;
var G__15460 = c;
var G__15461 = d;
var G__15462 = e;
var G__15463 = f;
var G__15464 = g;
var G__15465 = h;
var G__15466 = i;
var G__15467 = j;
var G__15468 = k;
var G__15469 = l;
var G__15470 = m;
var G__15471 = n;
var G__15472 = o;
var G__15473 = p;
var G__15474 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15458,G__15459,G__15460,G__15461,G__15462,G__15463,G__15464,G__15465,G__15466,G__15467,G__15468,G__15469,G__15470,G__15471,G__15472,G__15473,G__15474) : self__.dispatch_fn.call(null,G__15458,G__15459,G__15460,G__15461,G__15462,G__15463,G__15464,G__15465,G__15466,G__15467,G__15468,G__15469,G__15470,G__15471,G__15472,G__15473,G__15474));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15475 = a;
var G__15476 = b;
var G__15477 = c;
var G__15478 = d;
var G__15479 = e;
var G__15480 = f;
var G__15481 = g;
var G__15482 = h;
var G__15483 = i;
var G__15484 = j;
var G__15485 = k;
var G__15486 = l;
var G__15487 = m;
var G__15488 = n;
var G__15489 = o;
var G__15490 = p;
var G__15491 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15475,G__15476,G__15477,G__15478,G__15479,G__15480,G__15481,G__15482,G__15483,G__15484,G__15485,G__15486,G__15487,G__15488,G__15489,G__15490,G__15491) : target_fn.call(null,G__15475,G__15476,G__15477,G__15478,G__15479,G__15480,G__15481,G__15482,G__15483,G__15484,G__15485,G__15486,G__15487,G__15488,G__15489,G__15490,G__15491));
});
var G__16033__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15492 = a;
var G__15493 = b;
var G__15494 = c;
var G__15495 = d;
var G__15496 = e;
var G__15497 = f;
var G__15498 = g;
var G__15499 = h;
var G__15500 = i;
var G__15501 = j;
var G__15502 = k;
var G__15503 = l;
var G__15504 = m;
var G__15505 = n;
var G__15506 = o;
var G__15507 = p;
var G__15508 = q;
var G__15509 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15492,G__15493,G__15494,G__15495,G__15496,G__15497,G__15498,G__15499,G__15500,G__15501,G__15502,G__15503,G__15504,G__15505,G__15506,G__15507,G__15508,G__15509) : self__.dispatch_fn.call(null,G__15492,G__15493,G__15494,G__15495,G__15496,G__15497,G__15498,G__15499,G__15500,G__15501,G__15502,G__15503,G__15504,G__15505,G__15506,G__15507,G__15508,G__15509));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15510 = a;
var G__15511 = b;
var G__15512 = c;
var G__15513 = d;
var G__15514 = e;
var G__15515 = f;
var G__15516 = g;
var G__15517 = h;
var G__15518 = i;
var G__15519 = j;
var G__15520 = k;
var G__15521 = l;
var G__15522 = m;
var G__15523 = n;
var G__15524 = o;
var G__15525 = p;
var G__15526 = q;
var G__15527 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15510,G__15511,G__15512,G__15513,G__15514,G__15515,G__15516,G__15517,G__15518,G__15519,G__15520,G__15521,G__15522,G__15523,G__15524,G__15525,G__15526,G__15527) : target_fn.call(null,G__15510,G__15511,G__15512,G__15513,G__15514,G__15515,G__15516,G__15517,G__15518,G__15519,G__15520,G__15521,G__15522,G__15523,G__15524,G__15525,G__15526,G__15527));
});
var G__16033__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15528 = a;
var G__15529 = b;
var G__15530 = c;
var G__15531 = d;
var G__15532 = e;
var G__15533 = f;
var G__15534 = g;
var G__15535 = h;
var G__15536 = i;
var G__15537 = j;
var G__15538 = k;
var G__15539 = l;
var G__15540 = m;
var G__15541 = n;
var G__15542 = o;
var G__15543 = p;
var G__15544 = q;
var G__15545 = r;
var G__15546 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15528,G__15529,G__15530,G__15531,G__15532,G__15533,G__15534,G__15535,G__15536,G__15537,G__15538,G__15539,G__15540,G__15541,G__15542,G__15543,G__15544,G__15545,G__15546) : self__.dispatch_fn.call(null,G__15528,G__15529,G__15530,G__15531,G__15532,G__15533,G__15534,G__15535,G__15536,G__15537,G__15538,G__15539,G__15540,G__15541,G__15542,G__15543,G__15544,G__15545,G__15546));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15547 = a;
var G__15548 = b;
var G__15549 = c;
var G__15550 = d;
var G__15551 = e;
var G__15552 = f;
var G__15553 = g;
var G__15554 = h;
var G__15555 = i;
var G__15556 = j;
var G__15557 = k;
var G__15558 = l;
var G__15559 = m;
var G__15560 = n;
var G__15561 = o;
var G__15562 = p;
var G__15563 = q;
var G__15564 = r;
var G__15565 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15547,G__15548,G__15549,G__15550,G__15551,G__15552,G__15553,G__15554,G__15555,G__15556,G__15557,G__15558,G__15559,G__15560,G__15561,G__15562,G__15563,G__15564,G__15565) : target_fn.call(null,G__15547,G__15548,G__15549,G__15550,G__15551,G__15552,G__15553,G__15554,G__15555,G__15556,G__15557,G__15558,G__15559,G__15560,G__15561,G__15562,G__15563,G__15564,G__15565));
});
var G__16033__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15566 = a;
var G__15567 = b;
var G__15568 = c;
var G__15569 = d;
var G__15570 = e;
var G__15571 = f;
var G__15572 = g;
var G__15573 = h;
var G__15574 = i;
var G__15575 = j;
var G__15576 = k;
var G__15577 = l;
var G__15578 = m;
var G__15579 = n;
var G__15580 = o;
var G__15581 = p;
var G__15582 = q;
var G__15583 = r;
var G__15584 = s;
var G__15585 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15566,G__15567,G__15568,G__15569,G__15570,G__15571,G__15572,G__15573,G__15574,G__15575,G__15576,G__15577,G__15578,G__15579,G__15580,G__15581,G__15582,G__15583,G__15584,G__15585) : self__.dispatch_fn.call(null,G__15566,G__15567,G__15568,G__15569,G__15570,G__15571,G__15572,G__15573,G__15574,G__15575,G__15576,G__15577,G__15578,G__15579,G__15580,G__15581,G__15582,G__15583,G__15584,G__15585));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15586 = a;
var G__15587 = b;
var G__15588 = c;
var G__15589 = d;
var G__15590 = e;
var G__15591 = f;
var G__15592 = g;
var G__15593 = h;
var G__15594 = i;
var G__15595 = j;
var G__15596 = k;
var G__15597 = l;
var G__15598 = m;
var G__15599 = n;
var G__15600 = o;
var G__15601 = p;
var G__15602 = q;
var G__15603 = r;
var G__15604 = s;
var G__15605 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15586,G__15587,G__15588,G__15589,G__15590,G__15591,G__15592,G__15593,G__15594,G__15595,G__15596,G__15597,G__15598,G__15599,G__15600,G__15601,G__15602,G__15603,G__15604,G__15605) : target_fn.call(null,G__15586,G__15587,G__15588,G__15589,G__15590,G__15591,G__15592,G__15593,G__15594,G__15595,G__15596,G__15597,G__15598,G__15599,G__15600,G__15601,G__15602,G__15603,G__15604,G__15605));
});
var G__16033__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__16033 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__16033__1.call(this,self__);
case 2:
return G__16033__2.call(this,self__,a);
case 3:
return G__16033__3.call(this,self__,a,b);
case 4:
return G__16033__4.call(this,self__,a,b,c);
case 5:
return G__16033__5.call(this,self__,a,b,c,d);
case 6:
return G__16033__6.call(this,self__,a,b,c,d,e);
case 7:
return G__16033__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__16033__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__16033__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__16033__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__16033__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__16033__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__16033__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__16033__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__16033__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__16033__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__16033__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__16033__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__16033__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__16033__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__16033__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__16033__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16033.cljs$core$IFn$_invoke$arity$1 = G__16033__1;
G__16033.cljs$core$IFn$_invoke$arity$2 = G__16033__2;
G__16033.cljs$core$IFn$_invoke$arity$3 = G__16033__3;
G__16033.cljs$core$IFn$_invoke$arity$4 = G__16033__4;
G__16033.cljs$core$IFn$_invoke$arity$5 = G__16033__5;
G__16033.cljs$core$IFn$_invoke$arity$6 = G__16033__6;
G__16033.cljs$core$IFn$_invoke$arity$7 = G__16033__7;
G__16033.cljs$core$IFn$_invoke$arity$8 = G__16033__8;
G__16033.cljs$core$IFn$_invoke$arity$9 = G__16033__9;
G__16033.cljs$core$IFn$_invoke$arity$10 = G__16033__10;
G__16033.cljs$core$IFn$_invoke$arity$11 = G__16033__11;
G__16033.cljs$core$IFn$_invoke$arity$12 = G__16033__12;
G__16033.cljs$core$IFn$_invoke$arity$13 = G__16033__13;
G__16033.cljs$core$IFn$_invoke$arity$14 = G__16033__14;
G__16033.cljs$core$IFn$_invoke$arity$15 = G__16033__15;
G__16033.cljs$core$IFn$_invoke$arity$16 = G__16033__16;
G__16033.cljs$core$IFn$_invoke$arity$17 = G__16033__17;
G__16033.cljs$core$IFn$_invoke$arity$18 = G__16033__18;
G__16033.cljs$core$IFn$_invoke$arity$19 = G__16033__19;
G__16033.cljs$core$IFn$_invoke$arity$20 = G__16033__20;
G__16033.cljs$core$IFn$_invoke$arity$21 = G__16033__21;
G__16033.cljs$core$IFn$_invoke$arity$22 = G__16033__22;
return G__16033;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args15185){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15185)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15606 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15606) : self__.dispatch_fn.call(null,G__15606));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15607 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15607) : target_fn.call(null,G__15607));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15608 = a;
var G__15609 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15608,G__15609) : self__.dispatch_fn.call(null,G__15608,G__15609));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15610 = a;
var G__15611 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15610,G__15611) : target_fn.call(null,G__15610,G__15611));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15612 = a;
var G__15613 = b;
var G__15614 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15612,G__15613,G__15614) : self__.dispatch_fn.call(null,G__15612,G__15613,G__15614));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15615 = a;
var G__15616 = b;
var G__15617 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15615,G__15616,G__15617) : target_fn.call(null,G__15615,G__15616,G__15617));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15618 = a;
var G__15619 = b;
var G__15620 = c;
var G__15621 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15618,G__15619,G__15620,G__15621) : self__.dispatch_fn.call(null,G__15618,G__15619,G__15620,G__15621));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15622 = a;
var G__15623 = b;
var G__15624 = c;
var G__15625 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15622,G__15623,G__15624,G__15625) : target_fn.call(null,G__15622,G__15623,G__15624,G__15625));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15626 = a;
var G__15627 = b;
var G__15628 = c;
var G__15629 = d;
var G__15630 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15626,G__15627,G__15628,G__15629,G__15630) : self__.dispatch_fn.call(null,G__15626,G__15627,G__15628,G__15629,G__15630));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15631 = a;
var G__15632 = b;
var G__15633 = c;
var G__15634 = d;
var G__15635 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15631,G__15632,G__15633,G__15634,G__15635) : target_fn.call(null,G__15631,G__15632,G__15633,G__15634,G__15635));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15636 = a;
var G__15637 = b;
var G__15638 = c;
var G__15639 = d;
var G__15640 = e;
var G__15641 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15636,G__15637,G__15638,G__15639,G__15640,G__15641) : self__.dispatch_fn.call(null,G__15636,G__15637,G__15638,G__15639,G__15640,G__15641));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15642 = a;
var G__15643 = b;
var G__15644 = c;
var G__15645 = d;
var G__15646 = e;
var G__15647 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15642,G__15643,G__15644,G__15645,G__15646,G__15647) : target_fn.call(null,G__15642,G__15643,G__15644,G__15645,G__15646,G__15647));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15648 = a;
var G__15649 = b;
var G__15650 = c;
var G__15651 = d;
var G__15652 = e;
var G__15653 = f;
var G__15654 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15648,G__15649,G__15650,G__15651,G__15652,G__15653,G__15654) : self__.dispatch_fn.call(null,G__15648,G__15649,G__15650,G__15651,G__15652,G__15653,G__15654));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15655 = a;
var G__15656 = b;
var G__15657 = c;
var G__15658 = d;
var G__15659 = e;
var G__15660 = f;
var G__15661 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15655,G__15656,G__15657,G__15658,G__15659,G__15660,G__15661) : target_fn.call(null,G__15655,G__15656,G__15657,G__15658,G__15659,G__15660,G__15661));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15662 = a;
var G__15663 = b;
var G__15664 = c;
var G__15665 = d;
var G__15666 = e;
var G__15667 = f;
var G__15668 = g;
var G__15669 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15662,G__15663,G__15664,G__15665,G__15666,G__15667,G__15668,G__15669) : self__.dispatch_fn.call(null,G__15662,G__15663,G__15664,G__15665,G__15666,G__15667,G__15668,G__15669));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15670 = a;
var G__15671 = b;
var G__15672 = c;
var G__15673 = d;
var G__15674 = e;
var G__15675 = f;
var G__15676 = g;
var G__15677 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15670,G__15671,G__15672,G__15673,G__15674,G__15675,G__15676,G__15677) : target_fn.call(null,G__15670,G__15671,G__15672,G__15673,G__15674,G__15675,G__15676,G__15677));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15678 = a;
var G__15679 = b;
var G__15680 = c;
var G__15681 = d;
var G__15682 = e;
var G__15683 = f;
var G__15684 = g;
var G__15685 = h;
var G__15686 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15678,G__15679,G__15680,G__15681,G__15682,G__15683,G__15684,G__15685,G__15686) : self__.dispatch_fn.call(null,G__15678,G__15679,G__15680,G__15681,G__15682,G__15683,G__15684,G__15685,G__15686));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15687 = a;
var G__15688 = b;
var G__15689 = c;
var G__15690 = d;
var G__15691 = e;
var G__15692 = f;
var G__15693 = g;
var G__15694 = h;
var G__15695 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15687,G__15688,G__15689,G__15690,G__15691,G__15692,G__15693,G__15694,G__15695) : target_fn.call(null,G__15687,G__15688,G__15689,G__15690,G__15691,G__15692,G__15693,G__15694,G__15695));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15696 = a;
var G__15697 = b;
var G__15698 = c;
var G__15699 = d;
var G__15700 = e;
var G__15701 = f;
var G__15702 = g;
var G__15703 = h;
var G__15704 = i;
var G__15705 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15696,G__15697,G__15698,G__15699,G__15700,G__15701,G__15702,G__15703,G__15704,G__15705) : self__.dispatch_fn.call(null,G__15696,G__15697,G__15698,G__15699,G__15700,G__15701,G__15702,G__15703,G__15704,G__15705));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15706 = a;
var G__15707 = b;
var G__15708 = c;
var G__15709 = d;
var G__15710 = e;
var G__15711 = f;
var G__15712 = g;
var G__15713 = h;
var G__15714 = i;
var G__15715 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15706,G__15707,G__15708,G__15709,G__15710,G__15711,G__15712,G__15713,G__15714,G__15715) : target_fn.call(null,G__15706,G__15707,G__15708,G__15709,G__15710,G__15711,G__15712,G__15713,G__15714,G__15715));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15716 = a;
var G__15717 = b;
var G__15718 = c;
var G__15719 = d;
var G__15720 = e;
var G__15721 = f;
var G__15722 = g;
var G__15723 = h;
var G__15724 = i;
var G__15725 = j;
var G__15726 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15716,G__15717,G__15718,G__15719,G__15720,G__15721,G__15722,G__15723,G__15724,G__15725,G__15726) : self__.dispatch_fn.call(null,G__15716,G__15717,G__15718,G__15719,G__15720,G__15721,G__15722,G__15723,G__15724,G__15725,G__15726));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15727 = a;
var G__15728 = b;
var G__15729 = c;
var G__15730 = d;
var G__15731 = e;
var G__15732 = f;
var G__15733 = g;
var G__15734 = h;
var G__15735 = i;
var G__15736 = j;
var G__15737 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15727,G__15728,G__15729,G__15730,G__15731,G__15732,G__15733,G__15734,G__15735,G__15736,G__15737) : target_fn.call(null,G__15727,G__15728,G__15729,G__15730,G__15731,G__15732,G__15733,G__15734,G__15735,G__15736,G__15737));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15738 = a;
var G__15739 = b;
var G__15740 = c;
var G__15741 = d;
var G__15742 = e;
var G__15743 = f;
var G__15744 = g;
var G__15745 = h;
var G__15746 = i;
var G__15747 = j;
var G__15748 = k;
var G__15749 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15738,G__15739,G__15740,G__15741,G__15742,G__15743,G__15744,G__15745,G__15746,G__15747,G__15748,G__15749) : self__.dispatch_fn.call(null,G__15738,G__15739,G__15740,G__15741,G__15742,G__15743,G__15744,G__15745,G__15746,G__15747,G__15748,G__15749));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15750 = a;
var G__15751 = b;
var G__15752 = c;
var G__15753 = d;
var G__15754 = e;
var G__15755 = f;
var G__15756 = g;
var G__15757 = h;
var G__15758 = i;
var G__15759 = j;
var G__15760 = k;
var G__15761 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15750,G__15751,G__15752,G__15753,G__15754,G__15755,G__15756,G__15757,G__15758,G__15759,G__15760,G__15761) : target_fn.call(null,G__15750,G__15751,G__15752,G__15753,G__15754,G__15755,G__15756,G__15757,G__15758,G__15759,G__15760,G__15761));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15762 = a;
var G__15763 = b;
var G__15764 = c;
var G__15765 = d;
var G__15766 = e;
var G__15767 = f;
var G__15768 = g;
var G__15769 = h;
var G__15770 = i;
var G__15771 = j;
var G__15772 = k;
var G__15773 = l;
var G__15774 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15762,G__15763,G__15764,G__15765,G__15766,G__15767,G__15768,G__15769,G__15770,G__15771,G__15772,G__15773,G__15774) : self__.dispatch_fn.call(null,G__15762,G__15763,G__15764,G__15765,G__15766,G__15767,G__15768,G__15769,G__15770,G__15771,G__15772,G__15773,G__15774));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15775 = a;
var G__15776 = b;
var G__15777 = c;
var G__15778 = d;
var G__15779 = e;
var G__15780 = f;
var G__15781 = g;
var G__15782 = h;
var G__15783 = i;
var G__15784 = j;
var G__15785 = k;
var G__15786 = l;
var G__15787 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15775,G__15776,G__15777,G__15778,G__15779,G__15780,G__15781,G__15782,G__15783,G__15784,G__15785,G__15786,G__15787) : target_fn.call(null,G__15775,G__15776,G__15777,G__15778,G__15779,G__15780,G__15781,G__15782,G__15783,G__15784,G__15785,G__15786,G__15787));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15788 = a;
var G__15789 = b;
var G__15790 = c;
var G__15791 = d;
var G__15792 = e;
var G__15793 = f;
var G__15794 = g;
var G__15795 = h;
var G__15796 = i;
var G__15797 = j;
var G__15798 = k;
var G__15799 = l;
var G__15800 = m;
var G__15801 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15788,G__15789,G__15790,G__15791,G__15792,G__15793,G__15794,G__15795,G__15796,G__15797,G__15798,G__15799,G__15800,G__15801) : self__.dispatch_fn.call(null,G__15788,G__15789,G__15790,G__15791,G__15792,G__15793,G__15794,G__15795,G__15796,G__15797,G__15798,G__15799,G__15800,G__15801));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15802 = a;
var G__15803 = b;
var G__15804 = c;
var G__15805 = d;
var G__15806 = e;
var G__15807 = f;
var G__15808 = g;
var G__15809 = h;
var G__15810 = i;
var G__15811 = j;
var G__15812 = k;
var G__15813 = l;
var G__15814 = m;
var G__15815 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15802,G__15803,G__15804,G__15805,G__15806,G__15807,G__15808,G__15809,G__15810,G__15811,G__15812,G__15813,G__15814,G__15815) : target_fn.call(null,G__15802,G__15803,G__15804,G__15805,G__15806,G__15807,G__15808,G__15809,G__15810,G__15811,G__15812,G__15813,G__15814,G__15815));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15816 = a;
var G__15817 = b;
var G__15818 = c;
var G__15819 = d;
var G__15820 = e;
var G__15821 = f;
var G__15822 = g;
var G__15823 = h;
var G__15824 = i;
var G__15825 = j;
var G__15826 = k;
var G__15827 = l;
var G__15828 = m;
var G__15829 = n;
var G__15830 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15816,G__15817,G__15818,G__15819,G__15820,G__15821,G__15822,G__15823,G__15824,G__15825,G__15826,G__15827,G__15828,G__15829,G__15830) : self__.dispatch_fn.call(null,G__15816,G__15817,G__15818,G__15819,G__15820,G__15821,G__15822,G__15823,G__15824,G__15825,G__15826,G__15827,G__15828,G__15829,G__15830));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15831 = a;
var G__15832 = b;
var G__15833 = c;
var G__15834 = d;
var G__15835 = e;
var G__15836 = f;
var G__15837 = g;
var G__15838 = h;
var G__15839 = i;
var G__15840 = j;
var G__15841 = k;
var G__15842 = l;
var G__15843 = m;
var G__15844 = n;
var G__15845 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15831,G__15832,G__15833,G__15834,G__15835,G__15836,G__15837,G__15838,G__15839,G__15840,G__15841,G__15842,G__15843,G__15844,G__15845) : target_fn.call(null,G__15831,G__15832,G__15833,G__15834,G__15835,G__15836,G__15837,G__15838,G__15839,G__15840,G__15841,G__15842,G__15843,G__15844,G__15845));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15846 = a;
var G__15847 = b;
var G__15848 = c;
var G__15849 = d;
var G__15850 = e;
var G__15851 = f;
var G__15852 = g;
var G__15853 = h;
var G__15854 = i;
var G__15855 = j;
var G__15856 = k;
var G__15857 = l;
var G__15858 = m;
var G__15859 = n;
var G__15860 = o;
var G__15861 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15846,G__15847,G__15848,G__15849,G__15850,G__15851,G__15852,G__15853,G__15854,G__15855,G__15856,G__15857,G__15858,G__15859,G__15860,G__15861) : self__.dispatch_fn.call(null,G__15846,G__15847,G__15848,G__15849,G__15850,G__15851,G__15852,G__15853,G__15854,G__15855,G__15856,G__15857,G__15858,G__15859,G__15860,G__15861));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15862 = a;
var G__15863 = b;
var G__15864 = c;
var G__15865 = d;
var G__15866 = e;
var G__15867 = f;
var G__15868 = g;
var G__15869 = h;
var G__15870 = i;
var G__15871 = j;
var G__15872 = k;
var G__15873 = l;
var G__15874 = m;
var G__15875 = n;
var G__15876 = o;
var G__15877 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15862,G__15863,G__15864,G__15865,G__15866,G__15867,G__15868,G__15869,G__15870,G__15871,G__15872,G__15873,G__15874,G__15875,G__15876,G__15877) : target_fn.call(null,G__15862,G__15863,G__15864,G__15865,G__15866,G__15867,G__15868,G__15869,G__15870,G__15871,G__15872,G__15873,G__15874,G__15875,G__15876,G__15877));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15878 = a;
var G__15879 = b;
var G__15880 = c;
var G__15881 = d;
var G__15882 = e;
var G__15883 = f;
var G__15884 = g;
var G__15885 = h;
var G__15886 = i;
var G__15887 = j;
var G__15888 = k;
var G__15889 = l;
var G__15890 = m;
var G__15891 = n;
var G__15892 = o;
var G__15893 = p;
var G__15894 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15878,G__15879,G__15880,G__15881,G__15882,G__15883,G__15884,G__15885,G__15886,G__15887,G__15888,G__15889,G__15890,G__15891,G__15892,G__15893,G__15894) : self__.dispatch_fn.call(null,G__15878,G__15879,G__15880,G__15881,G__15882,G__15883,G__15884,G__15885,G__15886,G__15887,G__15888,G__15889,G__15890,G__15891,G__15892,G__15893,G__15894));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15895 = a;
var G__15896 = b;
var G__15897 = c;
var G__15898 = d;
var G__15899 = e;
var G__15900 = f;
var G__15901 = g;
var G__15902 = h;
var G__15903 = i;
var G__15904 = j;
var G__15905 = k;
var G__15906 = l;
var G__15907 = m;
var G__15908 = n;
var G__15909 = o;
var G__15910 = p;
var G__15911 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15895,G__15896,G__15897,G__15898,G__15899,G__15900,G__15901,G__15902,G__15903,G__15904,G__15905,G__15906,G__15907,G__15908,G__15909,G__15910,G__15911) : target_fn.call(null,G__15895,G__15896,G__15897,G__15898,G__15899,G__15900,G__15901,G__15902,G__15903,G__15904,G__15905,G__15906,G__15907,G__15908,G__15909,G__15910,G__15911));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15912 = a;
var G__15913 = b;
var G__15914 = c;
var G__15915 = d;
var G__15916 = e;
var G__15917 = f;
var G__15918 = g;
var G__15919 = h;
var G__15920 = i;
var G__15921 = j;
var G__15922 = k;
var G__15923 = l;
var G__15924 = m;
var G__15925 = n;
var G__15926 = o;
var G__15927 = p;
var G__15928 = q;
var G__15929 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15912,G__15913,G__15914,G__15915,G__15916,G__15917,G__15918,G__15919,G__15920,G__15921,G__15922,G__15923,G__15924,G__15925,G__15926,G__15927,G__15928,G__15929) : self__.dispatch_fn.call(null,G__15912,G__15913,G__15914,G__15915,G__15916,G__15917,G__15918,G__15919,G__15920,G__15921,G__15922,G__15923,G__15924,G__15925,G__15926,G__15927,G__15928,G__15929));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15930 = a;
var G__15931 = b;
var G__15932 = c;
var G__15933 = d;
var G__15934 = e;
var G__15935 = f;
var G__15936 = g;
var G__15937 = h;
var G__15938 = i;
var G__15939 = j;
var G__15940 = k;
var G__15941 = l;
var G__15942 = m;
var G__15943 = n;
var G__15944 = o;
var G__15945 = p;
var G__15946 = q;
var G__15947 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15930,G__15931,G__15932,G__15933,G__15934,G__15935,G__15936,G__15937,G__15938,G__15939,G__15940,G__15941,G__15942,G__15943,G__15944,G__15945,G__15946,G__15947) : target_fn.call(null,G__15930,G__15931,G__15932,G__15933,G__15934,G__15935,G__15936,G__15937,G__15938,G__15939,G__15940,G__15941,G__15942,G__15943,G__15944,G__15945,G__15946,G__15947));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15948 = a;
var G__15949 = b;
var G__15950 = c;
var G__15951 = d;
var G__15952 = e;
var G__15953 = f;
var G__15954 = g;
var G__15955 = h;
var G__15956 = i;
var G__15957 = j;
var G__15958 = k;
var G__15959 = l;
var G__15960 = m;
var G__15961 = n;
var G__15962 = o;
var G__15963 = p;
var G__15964 = q;
var G__15965 = r;
var G__15966 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15948,G__15949,G__15950,G__15951,G__15952,G__15953,G__15954,G__15955,G__15956,G__15957,G__15958,G__15959,G__15960,G__15961,G__15962,G__15963,G__15964,G__15965,G__15966) : self__.dispatch_fn.call(null,G__15948,G__15949,G__15950,G__15951,G__15952,G__15953,G__15954,G__15955,G__15956,G__15957,G__15958,G__15959,G__15960,G__15961,G__15962,G__15963,G__15964,G__15965,G__15966));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15967 = a;
var G__15968 = b;
var G__15969 = c;
var G__15970 = d;
var G__15971 = e;
var G__15972 = f;
var G__15973 = g;
var G__15974 = h;
var G__15975 = i;
var G__15976 = j;
var G__15977 = k;
var G__15978 = l;
var G__15979 = m;
var G__15980 = n;
var G__15981 = o;
var G__15982 = p;
var G__15983 = q;
var G__15984 = r;
var G__15985 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15967,G__15968,G__15969,G__15970,G__15971,G__15972,G__15973,G__15974,G__15975,G__15976,G__15977,G__15978,G__15979,G__15980,G__15981,G__15982,G__15983,G__15984,G__15985) : target_fn.call(null,G__15967,G__15968,G__15969,G__15970,G__15971,G__15972,G__15973,G__15974,G__15975,G__15976,G__15977,G__15978,G__15979,G__15980,G__15981,G__15982,G__15983,G__15984,G__15985));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15986 = a;
var G__15987 = b;
var G__15988 = c;
var G__15989 = d;
var G__15990 = e;
var G__15991 = f;
var G__15992 = g;
var G__15993 = h;
var G__15994 = i;
var G__15995 = j;
var G__15996 = k;
var G__15997 = l;
var G__15998 = m;
var G__15999 = n;
var G__16000 = o;
var G__16001 = p;
var G__16002 = q;
var G__16003 = r;
var G__16004 = s;
var G__16005 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15986,G__15987,G__15988,G__15989,G__15990,G__15991,G__15992,G__15993,G__15994,G__15995,G__15996,G__15997,G__15998,G__15999,G__16000,G__16001,G__16002,G__16003,G__16004,G__16005) : self__.dispatch_fn.call(null,G__15986,G__15987,G__15988,G__15989,G__15990,G__15991,G__15992,G__15993,G__15994,G__15995,G__15996,G__15997,G__15998,G__15999,G__16000,G__16001,G__16002,G__16003,G__16004,G__16005));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16006 = a;
var G__16007 = b;
var G__16008 = c;
var G__16009 = d;
var G__16010 = e;
var G__16011 = f;
var G__16012 = g;
var G__16013 = h;
var G__16014 = i;
var G__16015 = j;
var G__16016 = k;
var G__16017 = l;
var G__16018 = m;
var G__16019 = n;
var G__16020 = o;
var G__16021 = p;
var G__16022 = q;
var G__16023 = r;
var G__16024 = s;
var G__16025 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16006,G__16007,G__16008,G__16009,G__16010,G__16011,G__16012,G__16013,G__16014,G__16015,G__16016,G__16017,G__16018,G__16019,G__16020,G__16021,G__16022,G__16023,G__16024,G__16025) : target_fn.call(null,G__16006,G__16007,G__16008,G__16009,G__16010,G__16011,G__16012,G__16013,G__16014,G__16015,G__16016,G__16017,G__16018,G__16019,G__16020,G__16021,G__16022,G__16023,G__16024,G__16025));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16026 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16026) : cljs.core.deref.call(null,G__16026));
})(),(function (){var G__16027 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16027) : cljs.core.deref.call(null,G__16027));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4423__auto__ = (function (){var G__16028 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16028) : cljs.core.deref.call(null,G__16028));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4423__auto__)){
var target_fn = temp__4423__auto__;
return target_fn;
} else {
var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4423__auto____$1)){
var target_fn = temp__4423__auto____$1;
return target_fn;
} else {
return (function (){var G__16029 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16029) : cljs.core.deref.call(null,G__16029));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16030 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16030) : cljs.core.deref.call(null,G__16030));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16031 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16031) : cljs.core.deref.call(null,G__16031));
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16032 = this$__$1;
return goog.getUid(G__16032);
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16034 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__16034);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4663__auto__,writer__4664__auto__,opt__4665__auto__){
return cljs.core._write(writer__4664__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__16042 = x;
var G__16043 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16042,G__16043) : pred.call(null,G__16042,G__16043));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__16044 = y;
var G__16045 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16044,G__16045) : pred.call(null,G__16044,G__16045));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
